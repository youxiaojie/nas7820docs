<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">


  <link rel="stylesheet" type="text/css" href="reg_view.php_files/styles.css">
  <link rel="shortcut icon" href="http://darth.asic/favicon.ico" type="image/x-icon">

	<title>Register File Viewer</title>

    <style type="text/css">
        td.block {
            font-size:20px;
            font-weight: bold;
            color: WHITE;}

        td.subblock {
            font-size:20px;
            font-weight: bold;
            color: LIME;}
    </style>


</head><body>
    <script type="text/javascript" src="reg_view.php_files/div_tools.js"></script>
    <script type="text/javascript" src="reg_view.php_files/wz_tooltip.js"></script><div style="padding: 0px; overflow: hidden; visibility: hidden; position: absolute; width: 1279px; left: -1280px; top: 0px;" id="WzTtDiV"></div>

<center>
<table width="90%">
<tbody><tr>
	<td class="title" width="200">
    <img src="reg_view.php_files/plx_logo.gif" alt="PLX LOGO">
	</td>
	<td class="title" align="center">
		<h2>Register File Viewer</h2>
	</td>
	<td class="title" width="200">
		&nbsp;
	</td>
</tr>
</tbody></table>
</center>

<center>&#169; PLX Technology, Inc. 2010. All Rights Reserved. Confidential & Proprietary Information - NDA Required</center><table width="100%"><tbody><tr align="center" bgcolor="#e0e0e0"><td width="100%"><div class="divtip" onmouseover="Tip('Show/Hide All Block Info')"><a href="javascript:togglebyclass_endingin('_blocks');"><img src="reg_view.php_files/allblocks.gif" alt="Show/Hide All Block Info"></a></div>&nbsp;<div class="divtip" onmouseover="Tip('Show/Hide All Fields')"><a href="javascript:togglebyclass_endingin('_fields');"><img src="reg_view.php_files/allfields.gif" alt="Show/Hide All Fields"></a></div></td></tr></tbody></table><div style="overflow: auto; width: 100%; height: 85%;">
<!--Top-level memory map for K149 OX820 NAS7825-->
<br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">REGION0</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x0...0x3FFFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">As REGION1 (0x40000000...0x7FFFFFFF) except LEON accesses are uncached</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('REGION0_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="REGION0_blocks" style="display: none;"></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">BOOTROM</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x40000000...0x40007FFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">ROM for booting (no registers within)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('BOOTROM_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="BOOTROM_blocks" style="display: none;">
<!--#include "usbmph.reg"-->
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">USBMPH</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x40200000...0x402FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">USB2.0 2-port host controller (see separate documentation)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('USBMPH_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="USBMPH_blocks" style="display: none;"></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">GMACA</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x40400000...0x4040FFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">ETHA port Ethernet MAC</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('GMACA_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="GMACA_blocks" style="display: none;">
<!--Converted from DWC_gmac_top.xml-->
<br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">MAC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40400000...0x40400FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Media Access Controller</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Configuration Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Receiver Enable</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Transmitter Enable</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Deferral Check</td></tr>
<tr><td align="center">Field5</td><td align="center">6:5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Back-Off Limit</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Automatic Pad/CRC Stripping</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>LUD: LINK Up/Down</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DR: Disable Retry</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>IPC: Checksum Offload</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DM: Duplex Mode</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>LM: Loop-back Mode</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DO: Disable Receive Own</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FES: Speed</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PS: Port Select</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DCRS: Disable Carrier Sense During Transmission</td></tr>
<tr><td align="center">Field17</td><td align="center">19:17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>IFG: Inter-Frame Gap</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>JE: Jumbo Frame Enable</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>BE: Frame Burst Enable</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>JD: Jabber Disable</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>WD: Watchdog Disable</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TC: Transmit Configuration in RGMII/SGMII/SMII</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>CST: CRC stripping for type frames</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SFTERR: SMII Force Transmit Error</td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Frame Filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Promiscuous Mode</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>HUC: Hash Unicast</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>HMC: Hash Multicast</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DAIF: DA Inverse Filtering</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PM: Pass All Multicast</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DBF: Disable Broadcast Frames</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PCF: Pass Control Frames</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SAIF: SA Inverse Filtering</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SAF: Source Address Filter Enable</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>HPF: Hash or Perfect Filter</td></tr>
<tr><td align="center">Field11</td><td align="center">30:11</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RA: Receive All</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Table High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>HTH: Hash Table High</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Table Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>HTL: Hash Table Low</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GMII Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>GB: GMII Busy</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>GW: GMII Write</td></tr>
<tr><td align="center">Field2</td><td align="center">5:2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>CR: CSR Clock Range</td></tr>
<tr><td align="center">Field6</td><td align="center">10:6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>GR: GMII Register</td></tr>
<tr><td align="center">Field11</td><td align="center">15:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PA: Physical Layer Address</td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GMII Data Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>GD: GMII Data</td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Flow Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FCB/BPA: Flow Control Busy/Backpressure Activate</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TFE: Transmit Flow Control Enable</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RFE: Receive Flow Control Enable</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>UP: Unicast Pause Frame Detect</td></tr>
<tr><td align="center">Field4</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PLT: Pause Low Threshold</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>DZPQ: Disable Zero-Quanta Pause</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>&nbsp;</td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PT: Pause Time</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VLAN Tag Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>VL: VLAN Tag Identifier for receive frames</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ETV: Enable 12-Bit VLAN Tag Comparison</td></tr>
<tr><td align="center">Field17</td><td align="center">31:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Version Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>IP version ( 3.5 )</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Implementation version</td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Debug Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MAC GMII/MII protocol engine is actively receiving data</td></tr>
<tr><td align="center">Field1</td><td align="center">2:1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Active state of the small FIFO Read and Write controllers</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MTL RxFIFO Write Controller is active</td></tr>
<tr><td align="center">Field5</td><td align="center">6:5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>State of the RxFIFO read Controller</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">9:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Status of the RxFIFO Fill-level</td></tr>
<tr><td align="center">Field10</td><td align="center">15:10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MAC GMII/MII protocol engine is actively transmitting data</td></tr>
<tr><td align="center">Field17</td><td align="center">18:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>State of the MAC Transmit Frame Controller module</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MAC transmitter is in PAUSE condition (in full-duplex only)</td></tr>
<tr><td align="center">Field20</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>State of the TxFIFO read Controller</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MTL TxFIFO Write Controller is active</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MTL TxFIFO is not empty</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MTL TxStatus FIFO is full</td></tr>
<tr><td align="center">Field26</td><td align="center">31:26</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Remote Wake-Up Frame Filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PMT Control and Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Power Down</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Magic Packet Enable</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Wake-Up Frame Enable</td></tr>
<tr><td align="center">Field3</td><td align="center">4:3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Magic Packet Received</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Wake-Up Frame Received</td></tr>
<tr><td align="center">Field7</td><td align="center">8:7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Global Unicast</td></tr>
<tr><td align="center">Field10</td><td align="center">30:10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Wake-Up Frame Filter Register Pointer Reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RGMII/SMII Interrupt Status</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PMT Interrupt Status</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MMC Interrupt Status</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MMC Receive Interrupt Status</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MMC Transmit Interrupt Status</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MMC Receive Checksum Offload Interrupt Status</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Time Stamp Interrupt Status</td></tr>
<tr><td align="center">Field10</td><td align="center">31:10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Mask Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RGMII or SMII Interrupt Mask</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCS Link Status Interrupt Mask</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCS AN Completion Interrupt Mask</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PMT Interrupt Mask</td></tr>
<tr><td align="center">Field4</td><td align="center">8:4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Reserved</td></tr>
<tr><td align="center">Field10</td><td align="center">31:10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register16</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address0 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register16_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register16_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address0 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">30:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MO: Always 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register17</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address0 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register17_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register17_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address0 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register18</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address1 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register18_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register18_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address1 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register19</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address1 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register19_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register19_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address1 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register20</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address2 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register20_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register20_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address2 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register21</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address2 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register21_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register21_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address2 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register22</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address3 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register22_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register22_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address3 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register23</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address3 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register23_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register23_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address3 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register24</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address4 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register24_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register24_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address4 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register25</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address4 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register25_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register25_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address4 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register26</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400068</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address5 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register26_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register26_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address5 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register27</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040006C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address5 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register27_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register27_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address5 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register28</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400070</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address6 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register28_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register28_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address6 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register29</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400074</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address6 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register29_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register29_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address6 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register30</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400078</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address7 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register30_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register30_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address7 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register31</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040007C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address7 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register31_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register31_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address7 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address8 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address8 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register33</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400084</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address8 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register33_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register33_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address8 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register34</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400088</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address9 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register34_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register34_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address9 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register35</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040008C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address9 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register35_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register35_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address9 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register36</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400090</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address10 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register36_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register36_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address10 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register37</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400094</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address10 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register37_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register37_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address10 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register38</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400098</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address11 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register38_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register38_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address11 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register39</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040009C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address11 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register39_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register39_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address11 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register40</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x404000A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address12 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register40_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register40_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address12 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register41</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x404000A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address12 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register41_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register41_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address12 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register42</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x404000A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address13 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register42_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register42_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address13 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register43</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x404000AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address13 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register43_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register43_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address13 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register44</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x404000B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address14 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register44_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register44_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address14 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register45</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x404000B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address14 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register45_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register45_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address14 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register46</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x404000B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address15 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register46_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register46_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address15 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register47</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x404000BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address15 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register47_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register47_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address15 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register54</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x404000D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SGMII/RGMII/SMII Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register54_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register54_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Link Mode</td></tr>
<tr><td align="center">Field1</td><td align="center">2:1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Link Speed</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Link Status</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Jabber Timeout</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>False Carrier Detected</td></tr>
<tr><td align="center">Field6</td><td align="center">31:6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register64</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>mmc_cntrl</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register64_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register64_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Counters Reset</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Counters Stop Rollover</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Reset on Read</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MMC Counter Freeze</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Counters Preset</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Full-Half preset</td></tr>
<tr><td align="center">Field6</td><td align="center">31:6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register65</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>mmc_intr_rx</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register65_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register65_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxframecount_bg counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxoctetcount_bg counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxoctetcount_g counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxbroadcastframes_g counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxmulticastframes_g counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxcrcerror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxalignmenterror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxrunterror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxjabbererror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxundersize_g counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxoversize_g counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx64octets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx65to127octets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx128to255octets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx256to511octets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx512to1023octets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx1024tomaxoctets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxunicastframes_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxlengtherror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxoutofrangetype counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxpauseframe counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxfifooverflow counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxvlanframes_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxwatchdogerror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register66</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>mmc_intr_tx</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register66_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register66_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txoctetcount_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txframecount_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txbroadcastframes_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticastframes_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx64to127octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx65to127octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx128to255octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx256to511octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx512to1023octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx1024tomaxoctets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txunicastframes_bb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticastframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txbroadcastframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txunderflowerror counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txsinglecol_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticol_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txdeferred counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txlatecol counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txexesscol counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txcarriererror counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txoctetcount_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txframecount_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txoexcessdef counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txpauseframeserror counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txvlanframes_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register67</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040010C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>mmc_intr_mask_rx</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register67_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register67_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxframecount_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxoctetcount_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxbroadcastframes_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxmulticastframes_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx64to127octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx65to127octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx128to255octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx256to511octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx512to1023octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx1024tomaxoctets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxunicastframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxmulticastframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxbroadcastframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxunderflowerror counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxsinglecol_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxmulticol_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxdeferred counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxlatecol counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxexesscol counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxcarriererror counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxpauseframes counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxfifooverflow counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxvlanframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxwatchdog counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register68</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>mmc_intr_mask_tx</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register68_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register68_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txoctetcount_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txframecount_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txbroadcastframes_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticastframes_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx64to127octets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx65to127octets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx128to255octets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx256to511octets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx512to1023octets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx1024tomaxoctets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txunicastframes_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticastframes_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txbroadcastframes_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txunderflowerror counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txsinglecol_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticol_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txdeferred counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txlatecol counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txexesscol counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txcarriererror counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txoctetcount counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txframecount_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txoexcessdef counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txpauseframes counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txvlanframes_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register69</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>txoctetcount_gb</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register69_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register69_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register70</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>txfrmecount_gb</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register70_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register70_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register82</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400148</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>txunderflowerror</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register82_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register82_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register92</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400170</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>txpauseframes</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register92_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register92_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register96</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>rxframecount_gb</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register96_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register96_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register98</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400188</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>rxoctetcount_g</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register98_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register98_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register116</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x404001D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>rxpauseframes</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register116_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register116_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register448</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400700</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register448_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register448_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSENA: Time Stamp Enable</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSCFUPDT: Time Stamp Fine or Coarse Update</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSINIT: Time Stamp Initialize</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSUPDT: Time Stamp Update</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSTRIG: Time Stamp Interrupt Trigger Enable</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TSADDREG: Addend Reg Update</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSENALL: Enable Time Stamp for All Frames</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSCTRLSSR: Time Stamp Digital or Binary rollover control</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSVER2ENA: Enable PTP packet snooping for version 2 format</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSIPENA: Enable Time Stamp Snapshot for PTP over Ethernet frames</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSIPV6ENA: Enable Time Stamp Snapshot for IPv6 frames</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSIPV4ENA: Enable Time Stamp Snapshot for IPv4 frames</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSEVNTENA: Enable Time Stamp Snapshot for Event Messages</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSMSTRENA: Enable Snapshot for Messages Relevant to Master</td></tr>
<tr><td align="center">Field16</td><td align="center">17:16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSCLKTYPE: Select the type of clock node</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSENMACADDR: Enable MAC address for PTP frame filtering</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>ATSFC: Auxiliary Snapshot FIFO clear</td></tr>
<tr><td align="center">Field20</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register449</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400704</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Sub-Second Increment Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register449_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register449_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SSINC: Sub-second increment value</td></tr>
<tr><td align="center">Field8</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register450</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400708</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register450_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register450_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TSS: Time Stamp Second</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register451</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040070C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register451_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register451_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">30:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TSSS: Time Stamp Sub Seconds</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PSNT: Positive or Negative Time</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register452</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400710</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp High Update Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register452_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register452_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSS: Time Stamp Second</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register453</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400714</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp Low Update Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register453_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register453_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">30:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSSS: Time Stamp Sub Second</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ADDSUB: Add or subtract time</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register454</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400718</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp Addend Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register454_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register454_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSAR: Time Stamp Addend Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register455</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040071C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Target Time High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register455_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register455_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSTR: Target Time Stamp High Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register456</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400720</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Target Time Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register456_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register456_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">30:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSTR: Target Time Stamp Low Register</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register458</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400728</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register458_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register458_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TSSOVF: Time Stamp Seconds Overflow</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TSTARGET: Time Stamp Target Time Reached</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Auxiliary Time Stamp Trigger Snapshot</td></tr>
<tr><td align="center">Field3</td><td align="center">23:3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Auxiliary Time Stamp Trigger Snapshot Trigger Missed</td></tr>
<tr><td align="center">Field25</td><td align="center">27:25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Auxiliary Time Stamp Number of Snapshot</td></tr>
<tr><td align="center">Field28</td><td align="center">31:28</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register459</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040072C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PPS Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register459_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register459_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PPSCTRL: Control the duration between 2-pulses of PPS signal</td></tr>
<tr><td align="center">Field4</td><td align="center">31:4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register512</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400800</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 16 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register512_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register512_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address16 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register513</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400804</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 16 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register513_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register513_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address16 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register514</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400808</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 17 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register514_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register514_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address17 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register515</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040080C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 17 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register515_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register515_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address17 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register516</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400810</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 18 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register516_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register516_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address18 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register517</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400814</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 18 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register517_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register517_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address18 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register518</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400818</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 19 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register518_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register518_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address19 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register519</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040081C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 19 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register519_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register519_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address19 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register520</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400820</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 20 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register520_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register520_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address20 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register521</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400824</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 20 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register521_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register521_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address20 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register522</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400828</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 21 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register522_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register522_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address21 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register523</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040082C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 21 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register523_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register523_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address21 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register524</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400830</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 22 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register524_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register524_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address22 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register525</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400834</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 22 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register525_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register525_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address22 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register526</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400838</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 23 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register526_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register526_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address23 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register527</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040083C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 23 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register527_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register527_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address23 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register528</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400840</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 24 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register528_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register528_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address24 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register529</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400844</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 24 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register529_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register529_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address24 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register530</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400848</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 25 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register530_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register530_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address25 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register531</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040084C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 25 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register531_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register531_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address25 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register532</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400850</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 26 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register532_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register532_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address26 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register533</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400854</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 26 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register533_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register533_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address26 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register534</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400858</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 27 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register534_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register534_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address27 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register535</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040085C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 27 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register535_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register535_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address27 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register536</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400860</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 28 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register536_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register536_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address28 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register537</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400864</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 28 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register537_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register537_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address28 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register538</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400868</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 29 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register538_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register538_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address29 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register539</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040086C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 29 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register539_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register539_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address29 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register540</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400870</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 30 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register540_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register540_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address30 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register541</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400874</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 30 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register541_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register541_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address30 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register542</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40400878</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 31 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register542_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register542_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address31 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/MAC/Register543</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040087C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 31 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register543_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register543_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address31 [31:0]</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DMA</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40400000...0x40401FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">The address block DMA contains 22 Registers : Register0 to Register21</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Bus Mode Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SWR: Software Reset</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DA: DMA Arbitration Scheme</td></tr>
<tr><td align="center">Field2</td><td align="center">6:2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DSL: Descriptor Skip Length</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">13:8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PBL: Programmable Burst Length</td></tr>
<tr><td align="center">Field14</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PR: Rx, Tx Priority Ratio</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FB: Fixed Burst</td></tr>
<tr><td align="center">Field17</td><td align="center">22:17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RPBL: RxDMA PBL</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>USP: Use Seperate PBL</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>8xPBL Mode</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AAL: Address Aligned Beats</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MB: Mixed Burst</td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit Poll Demand Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TPD: Transmit Poll Demand</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Receive Poll Demand Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RPD: Receive Poll Demand</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040100C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Receive Descriptor List Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Start of Receive List</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit Descriptor List Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Start of Transmit List</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TI: Transmit Interrupt</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TPS: Transmit Process Stopped</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TU: Transmit Buffer Unavailable</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TJT: Transmit Jabber Timeout</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>OVF: Receive Overflow</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>UNF: Transmit Underflow</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RI: Receive Interrupt</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RU: Receive Buffer Unavailable</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RPS: Receive Process Stopped</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RWT: Receive Watchdog Timeout</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ETI: Early Transmit Interrupt</td></tr>
<tr><td align="center">Field11</td><td align="center">12:11</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FBI: Fatal Bus Error Interrupt</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ERI: Early Receive Interrupt</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AIS: Abnormal Interrupt Summary</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>NIP: Normal Interrupt Summary</td></tr>
<tr><td align="center">Field17</td><td align="center">19:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RS: Received Process Status</td></tr>
<tr><td align="center">Field20</td><td align="center">22:20</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TS: Transmit Process Status</td></tr>
<tr><td align="center">Field23</td><td align="center">25:23</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>EB: Error Bits</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>GLI: GMAC Line interface Interrupt</td></tr>
<tr><td align="center">Field27</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>GMI: GMAC MMC Interrupt</td></tr>
<tr><td align="center">Field28</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>GPI: GMAC PMT Interrupt</td></tr>
<tr><td align="center">Field29</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TTI: Time-Stamp Trigger Interrupt</td></tr>
<tr><td align="center">Field30</td><td align="center">31:30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Operation Mode Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SR: Start/Stop Receive</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>OSF: Operate On Second Mode</td></tr>
<tr><td align="center">Field3</td><td align="center">4:3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RTC: Receive Threshold Control</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FUF: Forward Undersized Good Frames</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FEF: Forward Error Frames</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>EFC: Enable HW Flow Control</td></tr>
<tr><td align="center">Field9</td><td align="center">10:9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RFA: Threshold for activating flow control ( in both the HD and FD )</td></tr>
<tr><td align="center">Field11</td><td align="center">12:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RFD: Threshold for deactivating flow control ( in both the HD and FD )</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ST: Start/Stop Transmission Command</td></tr>
<tr><td align="center">Field14</td><td align="center">16:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TTC: Transmit Threshold Control</td></tr>
<tr><td align="center">Field17</td><td align="center">19:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FTF: Flush Transmit FIFO</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSF: Transmit Store and Forward</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RFD[2]: MSB of Threshold for Deactivating the Flow Control</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RFA[2]: MSB of Threshold for Activating the Flow Control</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DFF: Disable Flushing of Received Frames</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RSF: receive Store and Forward</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DT: Disable Dropping of TCP/IP Checksum Error Frames</td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040101C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt enable Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TIE: Transmit Interrupt Enable</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSE: Transmit Stopped Enable</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TUE: Transmit Buffer Unvailable Enable</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TUJ: Transmit Jabber Timeout Enable</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>OVE: Overflow Interrupt Enable</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>UNE: Underflow Interrupt Enable</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RIE: Receive Interrupt Enable</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RUE: Receive Buffer Unavailable  Enable</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RSE: Receive Stopped  Enable</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RWE: Receive Watchdog Timeout  Enable</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ETE: Early Transmit Interrupt Enable</td></tr>
<tr><td align="center">Field11</td><td align="center">12:11</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FBE: Fatal Bus Error Enable</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ERE: Early Receive Interrupt Enable</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AIE: Abnormal Interrupt Summary enable</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>NIE: Normal Interrupt Summary enable</td></tr>
<tr><td align="center">Field17</td><td align="center">31:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Missed Frame and Buffer Oerflow Counter Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Indicates the number of frames missed by the controller due to the Host Receive Buffer being Unavailable</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Overflow bit for Missed Frame Counter</td></tr>
<tr><td align="center">Field17</td><td align="center">27:17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Indicates the number of frames missde by the application</td></tr>
<tr><td align="center">Field28</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Overflow bit for FIFO Overflow Counter</td></tr>
<tr><td align="center">Field29</td><td align="center">31:29</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Receive Interrupt Watchdog Timer Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RIWT: RI Watchdog Timer count</td></tr>
<tr><td align="center">Field8</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register18</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Current Host Transmit Descriptor Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register18_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register18_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Host Transmit Descriptor Address Pointer Cleared on Reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register19</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4040104C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Current Host Receive Descriptor Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register19_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register19_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Host Receive Descriptor Address Pointer Cleared on Reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register20</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Current Host Transmit Buffer Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register20_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register20_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Host Transmit Buffer Address Pointer Cleared on Reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register21</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Current Host Receive Buffer Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register21_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register21_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Host Receive Buffer Address Pointer Cleared on Reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACA/DMA/Register22</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40401058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HW Feature Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register22_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register22_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>10/100 Mbps support</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>1000 Mbps support</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>&nbsp;</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>HASH Filter support</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Multiple MAC Address Registers support</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCS registers (TBI/SGMII/RTBI PHY interface)support</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>SMA (MDIO) Interface support</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PMT Remote Wakeup support</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PMT Magic Packet</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RMON module</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>IEEE 1588-2002 Time-Stamp</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>IEEE 1588-2008 Advanced Time-Stamp</td></tr>
<tr><td align="center">Field14</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Checksum Offload in Tx</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>IP Checksum Offload (Type 1) in Rx</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>IP Checksum Offload (Type 2) in Rx</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RxFIFO &gt; 2048 Bytes</td></tr>
<tr><td align="center">Field20</td><td align="center">23:20</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Alternate (Enhanced Descriptor)</td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">NETOEA</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x40410000...0x4041FFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">ETHA port TCP/IP offload engine</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('NETOEA_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="NETOEA_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEA/Job Queue Base Address</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40410000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Job Queue Base Address</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Job%20Queue%20Base%20Address_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Job Queue Base Address_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">JOB_QUEUE_BASE</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Base
address in main memory of the job queue. This address MUST be aligned
to a (2C_MAX_JOBS_BITS) * 256 byte boundary. (The default value for
C_MAX_JOBS_BITS is 4, and hence the required alignment is 4096 bytes)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEA/Job Queue Fill Level</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40410004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Job Queue Fill Level</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Job%20Queue%20Fill%20Level_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Job Queue Fill Level_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">JOB_QUEUE_FILL</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Reading
returns the number of pending jobs in the job queue. Writing any value
increments the job queue write pointer to indicate a new pending job is
present. NOTE: This will only take effect if JOB_QUEUE_FILL /= MAX_JOBS
(Which in the default configuration is 15)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEA/Job Queue Read Pointer</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40410008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Job Queue Read Pointer</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Job%20Queue%20Read%20Pointer_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Job Queue Read Pointer_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">JOB_QUEUE_RPTR</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates
the job index into the job queue that is currently being processed if
DBG_STATE /= IDLE, or the index of the next job to be processed if
DBG_STATE = IDLE</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEA/Job Queue Write Pointer</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4041000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Job Queue Write Pointer</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Job%20Queue%20Write%20Pointer_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Job Queue Write Pointer_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">JOB_QUEUE_WPTR</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates the job index that should be used to submit a new job for processing</td></tr>
<tr><td align="center">MTU</td><td align="center">15:0</td><td align="center">0x5DC</td><td align="center">RW</td><td>The
maximum number of bytes transferred in a single Ethernet frame
(excluding MAC header). The minimum value that may be programmed is 121
bytes (so there is always room for at least 1 byte of payload even with
maximal sized TCP and IP headers)</td></tr>
<tr><td align="center">TX_ENABLE</td><td align="center">0</td><td align="center">0x1</td><td align="center">RW</td><td><br>0 = Transmit job processing is disabled and controller is held in idle state<br>1 = Transmit job processing is enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEA/Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40410018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">DBG_STATE</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td><br>0000 = INIT<br>0001 = IDLE<br>0010 = LOAD_JOB<br>0011 = LOAD_HEADERS<br>0100 = WAIT_HEADERS_FETCHED<br>0110 = CHECK_HEADERS<br>1000 = ADD_PKT_HEADERS<br>1001 = ADD_PKT_DATA<br>1010 = NEXT_PKT_DATA<br>1011 = POKE_TRANSMIT<br>1100 = UPDATE_HEADERS<br>1101 = NEXT_SRC_SEGS_REQ<br>1110 = NEXT_SRC_SEGS<br>1111 = COMPLETE_JOB</td></tr>
<tr><td align="center">DATA_LEN_ERROR</td><td align="center">8</td><td align="center">0x0</td><td align="center">R</td><td>The sum of a processed job�s source segments data lengths did not equal the total data length for the job</td></tr>
<tr><td align="center">HEADER_ERROR</td><td align="center">9</td><td align="center">0x0</td><td align="center">R</td><td>The
MAC, IP, or TCP header of a processed job failed the validity for TSO
test. For a job to be valid, the following must be ALL be TRUE:<br>MAC type field = IP or VLAN_TAG<br>IP version = 4<br>IP Fragment offset =  0<br>IP More Fragments (MF) flag = 0<br>IP Lower Protocol = TCP or UDP</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEA/Jobs Completed</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4041001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Jobs Completed</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Jobs%20Completed_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Jobs Completed_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">COMPLETED</td><td align="center">31:0</td><td align="center">0x0</td><td align="center">R</td><td>A
self clearing count of the number of jobs completed since the last time
this register was read. This counter saturates at value of C_MAX_JOBS +
1 (16 for this implementation) and this should be interpeted as &gt;=
16 jobs have completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEA/Bytes Transmitted</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40410020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Bytes Transmitted</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Bytes%20Transmitted_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Bytes Transmitted_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_BYTES</td><td align="center">31:0</td><td align="center">0x0</td><td align="center">R</td><td>The number of bytes transmitted since reset (including MAC headers, IP, TCP and UDP headers)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEA/Packets Transmitted</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40410024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Packets Transmitted</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Packets%20Transmitted_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Packets Transmitted_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_PACKETS</td><td align="center">31:0</td><td align="center">0x0</td><td align="center">R</td><td>The number of Ethernet frames transmitted since reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEA/Tx Aborts</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40410028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Tx Aborts</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Tx%20Aborts_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Tx Aborts_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_ABORTS</td><td align="center">15:0</td><td align="center">0x0</td><td align="center">R</td><td>The number of transmit aborts reported by the GMAC since reset (count saturates at 0xFFFF)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEA/Tx Collisions</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4041002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Tx Collisions</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Tx%20Collisions_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Tx Collisions_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_COLIISIONS</td><td align="center">15:0</td><td align="center">0x0</td><td align="center">R</td><td>The number of transmit collisions reported by the GMAC since reset (count saturates at 0xFFFF)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEA/Tx Carrier Errors</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40410030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Tx Carrier Errors</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Tx%20Carrier%20Errors_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Tx Carrier Errors_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_CARRIER_ERRS</td><td align="center">15:0</td><td align="center">0x0</td><td align="center">R</td><td>The number of transmit carrier errors reported by the GMAC since reset (count saturates at 0xFFFF)</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">GMACB</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x40800000...0x4080FFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">ETHB port Ethernet MAC</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('GMACB_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="GMACB_blocks" style="display: none;">
<!--Converted from DWC_gmac_top.xml-->
<br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">MAC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40800000...0x40800FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Media Access Controller</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Configuration Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Receiver Enable</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Transmitter Enable</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Deferral Check</td></tr>
<tr><td align="center">Field5</td><td align="center">6:5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Back-Off Limit</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Automatic Pad/CRC Stripping</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>LUD: LINK Up/Down</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DR: Disable Retry</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>IPC: Checksum Offload</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DM: Duplex Mode</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>LM: Loop-back Mode</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DO: Disable Receive Own</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FES: Speed</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PS: Port Select</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DCRS: Disable Carrier Sense During Transmission</td></tr>
<tr><td align="center">Field17</td><td align="center">19:17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>IFG: Inter-Frame Gap</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>JE: Jumbo Frame Enable</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>BE: Frame Burst Enable</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>JD: Jabber Disable</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>WD: Watchdog Disable</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TC: Transmit Configuration in RGMII/SGMII/SMII</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>CST: CRC stripping for type frames</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SFTERR: SMII Force Transmit Error</td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Frame Filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Promiscuous Mode</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>HUC: Hash Unicast</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>HMC: Hash Multicast</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DAIF: DA Inverse Filtering</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PM: Pass All Multicast</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DBF: Disable Broadcast Frames</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PCF: Pass Control Frames</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SAIF: SA Inverse Filtering</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SAF: Source Address Filter Enable</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>HPF: Hash or Perfect Filter</td></tr>
<tr><td align="center">Field11</td><td align="center">30:11</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RA: Receive All</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Table High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>HTH: Hash Table High</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Table Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>HTL: Hash Table Low</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GMII Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>GB: GMII Busy</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>GW: GMII Write</td></tr>
<tr><td align="center">Field2</td><td align="center">5:2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>CR: CSR Clock Range</td></tr>
<tr><td align="center">Field6</td><td align="center">10:6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>GR: GMII Register</td></tr>
<tr><td align="center">Field11</td><td align="center">15:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PA: Physical Layer Address</td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GMII Data Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>GD: GMII Data</td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Flow Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FCB/BPA: Flow Control Busy/Backpressure Activate</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TFE: Transmit Flow Control Enable</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RFE: Receive Flow Control Enable</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>UP: Unicast Pause Frame Detect</td></tr>
<tr><td align="center">Field4</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PLT: Pause Low Threshold</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>DZPQ: Disable Zero-Quanta Pause</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>&nbsp;</td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PT: Pause Time</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VLAN Tag Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>VL: VLAN Tag Identifier for receive frames</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ETV: Enable 12-Bit VLAN Tag Comparison</td></tr>
<tr><td align="center">Field17</td><td align="center">31:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Version Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>IP version ( 3.5 )</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Implementation version</td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Debug Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MAC GMII/MII protocol engine is actively receiving data</td></tr>
<tr><td align="center">Field1</td><td align="center">2:1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Active state of the small FIFO Read and Write controllers</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MTL RxFIFO Write Controller is active</td></tr>
<tr><td align="center">Field5</td><td align="center">6:5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>State of the RxFIFO read Controller</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">9:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Status of the RxFIFO Fill-level</td></tr>
<tr><td align="center">Field10</td><td align="center">15:10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MAC GMII/MII protocol engine is actively transmitting data</td></tr>
<tr><td align="center">Field17</td><td align="center">18:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>State of the MAC Transmit Frame Controller module</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MAC transmitter is in PAUSE condition (in full-duplex only)</td></tr>
<tr><td align="center">Field20</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>State of the TxFIFO read Controller</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MTL TxFIFO Write Controller is active</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MTL TxFIFO is not empty</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MTL TxStatus FIFO is full</td></tr>
<tr><td align="center">Field26</td><td align="center">31:26</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Remote Wake-Up Frame Filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PMT Control and Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Power Down</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Magic Packet Enable</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Wake-Up Frame Enable</td></tr>
<tr><td align="center">Field3</td><td align="center">4:3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Magic Packet Received</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Wake-Up Frame Received</td></tr>
<tr><td align="center">Field7</td><td align="center">8:7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Global Unicast</td></tr>
<tr><td align="center">Field10</td><td align="center">30:10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Wake-Up Frame Filter Register Pointer Reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RGMII/SMII Interrupt Status</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PMT Interrupt Status</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MMC Interrupt Status</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MMC Receive Interrupt Status</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MMC Transmit Interrupt Status</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MMC Receive Checksum Offload Interrupt Status</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Time Stamp Interrupt Status</td></tr>
<tr><td align="center">Field10</td><td align="center">31:10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Mask Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RGMII or SMII Interrupt Mask</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCS Link Status Interrupt Mask</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCS AN Completion Interrupt Mask</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PMT Interrupt Mask</td></tr>
<tr><td align="center">Field4</td><td align="center">8:4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Reserved</td></tr>
<tr><td align="center">Field10</td><td align="center">31:10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register16</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address0 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register16_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register16_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address0 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">30:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MO: Always 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register17</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address0 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register17_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register17_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address0 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register18</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address1 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register18_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register18_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address1 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register19</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address1 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register19_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register19_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address1 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register20</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address2 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register20_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register20_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address2 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register21</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address2 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register21_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register21_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address2 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register22</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address3 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register22_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register22_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address3 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register23</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address3 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register23_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register23_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address3 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register24</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address4 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register24_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register24_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address4 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register25</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address4 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register25_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register25_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address4 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register26</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800068</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address5 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register26_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register26_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address5 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register27</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080006C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address5 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register27_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register27_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address5 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register28</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800070</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address6 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register28_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register28_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address6 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register29</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800074</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address6 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register29_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register29_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address6 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register30</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800078</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address7 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register30_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register30_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address7 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register31</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080007C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address7 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register31_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register31_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address7 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address8 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address8 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register33</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800084</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address8 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register33_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register33_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address8 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register34</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800088</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address9 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register34_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register34_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address9 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register35</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080008C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address9 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register35_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register35_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address9 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register36</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800090</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address10 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register36_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register36_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address10 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register37</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800094</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address10 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register37_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register37_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address10 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register38</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800098</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address11 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register38_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register38_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address11 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register39</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080009C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address11 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register39_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register39_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address11 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register40</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x408000A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address12 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register40_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register40_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address12 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register41</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x408000A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address12 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register41_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register41_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address12 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register42</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x408000A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address13 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register42_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register42_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address13 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register43</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x408000AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address13 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register43_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register43_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address13 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register44</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x408000B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address14 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register44_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register44_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address14 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register45</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x408000B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address14 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register45_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register45_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address14 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register46</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x408000B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address15 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register46_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register46_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address15 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register47</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x408000BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address15 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register47_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register47_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address15 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register54</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x408000D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SGMII/RGMII/SMII Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register54_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register54_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Link Mode</td></tr>
<tr><td align="center">Field1</td><td align="center">2:1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Link Speed</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Link Status</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Jabber Timeout</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>False Carrier Detected</td></tr>
<tr><td align="center">Field6</td><td align="center">31:6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register64</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>mmc_cntrl</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register64_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register64_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Counters Reset</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Counters Stop Rollover</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Reset on Read</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MMC Counter Freeze</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Counters Preset</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Full-Half preset</td></tr>
<tr><td align="center">Field6</td><td align="center">31:6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register65</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>mmc_intr_rx</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register65_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register65_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxframecount_bg counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxoctetcount_bg counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxoctetcount_g counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxbroadcastframes_g counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxmulticastframes_g counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxcrcerror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxalignmenterror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxrunterror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxjabbererror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxundersize_g counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxoversize_g counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx64octets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx65to127octets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx128to255octets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx256to511octets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx512to1023octets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx1024tomaxoctets_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxunicastframes_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxlengtherror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxoutofrangetype counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxpauseframe counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxfifooverflow counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxvlanframes_gb counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxwatchdogerror counter reaches the half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register66</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>mmc_intr_tx</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register66_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register66_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txoctetcount_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txframecount_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txbroadcastframes_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticastframes_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx64to127octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx65to127octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx128to255octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx256to511octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx512to1023octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx1024tomaxoctets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txunicastframes_bb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticastframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txbroadcastframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txunderflowerror counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txsinglecol_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticol_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txdeferred counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txlatecol counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txexesscol counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txcarriererror counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txoctetcount_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txframecount_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txoexcessdef counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txpauseframeserror counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txvlanframes_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register67</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080010C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>mmc_intr_mask_rx</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register67_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register67_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxframecount_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxoctetcount_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxbroadcastframes_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxmulticastframes_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx64to127octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx65to127octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx128to255octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx256to511octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx512to1023octets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rx1024tomaxoctets_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxunicastframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxmulticastframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxbroadcastframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxunderflowerror counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxsinglecol_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxmulticol_g counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxdeferred counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxlatecol counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxexesscol counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the rxcarriererror counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxpauseframes counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxfifooverflow counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxvlanframes_gb counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the rxwatchdog counter reaches half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register68</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>mmc_intr_mask_tx</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register68_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register68_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txoctetcount_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txframecount_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txbroadcastframes_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticastframes_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx64to127octets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx65to127octets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx128to255octets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx256to511octets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx512to1023octets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the tx1024tomaxoctets_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txunicastframes_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticastframes_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txbroadcastframes_gb counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txunderflowerror counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txsinglecol_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txmulticol_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txdeferred counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txlatecol counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txexesscol counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txcarriererror counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>The bit is set when the txoctetcount counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txframecount_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txoexcessdef counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txpauseframes counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Setting this bit masks the interrupt when the txvlanframes_g counter reachesd half the maximum value or the maximum value</td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register69</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>txoctetcount_gb</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register69_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register69_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register70</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>txfrmecount_gb</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register70_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register70_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register82</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800148</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>txunderflowerror</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register82_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register82_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register92</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800170</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>txpauseframes</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register92_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register92_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register96</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>rxframecount_gb</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register96_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register96_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register98</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800188</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>rxoctetcount_g</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register98_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register98_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register116</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x408001D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>rxpauseframes</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register116_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register116_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register448</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800700</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register448_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register448_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSENA: Time Stamp Enable</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSCFUPDT: Time Stamp Fine or Coarse Update</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSINIT: Time Stamp Initialize</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSUPDT: Time Stamp Update</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSTRIG: Time Stamp Interrupt Trigger Enable</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TSADDREG: Addend Reg Update</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSENALL: Enable Time Stamp for All Frames</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSCTRLSSR: Time Stamp Digital or Binary rollover control</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSVER2ENA: Enable PTP packet snooping for version 2 format</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSIPENA: Enable Time Stamp Snapshot for PTP over Ethernet frames</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSIPV6ENA: Enable Time Stamp Snapshot for IPv6 frames</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSIPV4ENA: Enable Time Stamp Snapshot for IPv4 frames</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSEVNTENA: Enable Time Stamp Snapshot for Event Messages</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSMSTRENA: Enable Snapshot for Messages Relevant to Master</td></tr>
<tr><td align="center">Field16</td><td align="center">17:16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSCLKTYPE: Select the type of clock node</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSENMACADDR: Enable MAC address for PTP frame filtering</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>ATSFC: Auxiliary Snapshot FIFO clear</td></tr>
<tr><td align="center">Field20</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register449</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800704</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Sub-Second Increment Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register449_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register449_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SSINC: Sub-second increment value</td></tr>
<tr><td align="center">Field8</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register450</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800708</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register450_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register450_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TSS: Time Stamp Second</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register451</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080070C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register451_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register451_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">30:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TSSS: Time Stamp Sub Seconds</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PSNT: Positive or Negative Time</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register452</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800710</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp High Update Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register452_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register452_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSS: Time Stamp Second</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register453</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800714</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp Low Update Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register453_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register453_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">30:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSSS: Time Stamp Sub Second</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ADDSUB: Add or subtract time</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register454</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800718</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp Addend Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register454_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register454_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSAR: Time Stamp Addend Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register455</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080071C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Target Time High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register455_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register455_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSTR: Target Time Stamp High Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register456</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800720</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Target Time Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register456_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register456_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">30:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSTR: Target Time Stamp Low Register</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register458</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800728</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Time Stamp Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register458_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register458_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TSSOVF: Time Stamp Seconds Overflow</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TSTARGET: Time Stamp Target Time Reached</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Auxiliary Time Stamp Trigger Snapshot</td></tr>
<tr><td align="center">Field3</td><td align="center">23:3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Auxiliary Time Stamp Trigger Snapshot Trigger Missed</td></tr>
<tr><td align="center">Field25</td><td align="center">27:25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Auxiliary Time Stamp Number of Snapshot</td></tr>
<tr><td align="center">Field28</td><td align="center">31:28</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register459</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080072C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PPS Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register459_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register459_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PPSCTRL: Control the duration between 2-pulses of PPS signal</td></tr>
<tr><td align="center">Field4</td><td align="center">31:4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register512</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800800</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 16 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register512_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register512_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address16 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register513</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800804</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 16 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register513_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register513_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address16 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register514</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800808</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 17 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register514_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register514_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address17 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register515</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080080C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 17 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register515_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register515_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address17 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register516</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800810</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 18 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register516_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register516_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address18 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register517</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800814</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 18 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register517_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register517_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address18 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register518</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800818</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 19 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register518_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register518_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address19 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register519</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080081C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 19 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register519_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register519_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address19 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register520</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800820</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 20 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register520_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register520_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address20 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register521</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800824</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 20 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register521_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register521_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address20 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register522</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800828</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 21 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register522_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register522_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address21 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register523</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080082C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 21 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register523_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register523_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address21 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register524</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800830</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 22 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register524_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register524_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address22 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register525</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800834</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 22 Low register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register525_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register525_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address22 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register526</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800838</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 23 High register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register526_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register526_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address23 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register527</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080083C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 23 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register527_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register527_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address23 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register528</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800840</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 24 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register528_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register528_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address24 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register529</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800844</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 24 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register529_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register529_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address24 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register530</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800848</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 25 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register530_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register530_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address25 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register531</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080084C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 25 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register531_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register531_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address25 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register532</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800850</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 26 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register532_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register532_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address26 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register533</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800854</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 26 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register533_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register533_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address26 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register534</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800858</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 27 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register534_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register534_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address27 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register535</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080085C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 27 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register535_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register535_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address27 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register536</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800860</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 28 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register536_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register536_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address28 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register537</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800864</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 28 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register537_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register537_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address28 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register538</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800868</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 29 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register538_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register538_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address29 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register539</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080086C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 29 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register539_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register539_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address29 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register540</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800870</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 30 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register540_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register540_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address30 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register541</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800874</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 30 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register541_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register541_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address30 [31:0]</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register542</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40800878</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 31 High Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register542_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register542_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[47:32]: MAC Address31 [47:32]</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MBC: Mask Byte Control</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SA: Source Address</td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AE: Address Enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/MAC/Register543</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080087C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MAC Address 31 Low Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register543_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register543_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>A[31:0]: MAC Address31 [31:0]</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DMA</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40800000...0x40801FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">The address block DMA contains 22 Registers : Register0 to Register21</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Bus Mode Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SWR: Software Reset</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DA: DMA Arbitration Scheme</td></tr>
<tr><td align="center">Field2</td><td align="center">6:2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DSL: Descriptor Skip Length</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">13:8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PBL: Programmable Burst Length</td></tr>
<tr><td align="center">Field14</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>PR: Rx, Tx Priority Ratio</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FB: Fixed Burst</td></tr>
<tr><td align="center">Field17</td><td align="center">22:17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RPBL: RxDMA PBL</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>USP: Use Seperate PBL</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>8xPBL Mode</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AAL: Address Aligned Beats</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>MB: Mixed Burst</td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit Poll Demand Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TPD: Transmit Poll Demand</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Receive Poll Demand Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RPD: Receive Poll Demand</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080100C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Receive Descriptor List Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Start of Receive List</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit Descriptor List Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Start of Transmit List</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TI: Transmit Interrupt</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TPS: Transmit Process Stopped</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TU: Transmit Buffer Unavailable</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TJT: Transmit Jabber Timeout</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>OVF: Receive Overflow</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>UNF: Transmit Underflow</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RI: Receive Interrupt</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RU: Receive Buffer Unavailable</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RPS: Receive Process Stopped</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RWT: Receive Watchdog Timeout</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ETI: Early Transmit Interrupt</td></tr>
<tr><td align="center">Field11</td><td align="center">12:11</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FBI: Fatal Bus Error Interrupt</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ERI: Early Receive Interrupt</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AIS: Abnormal Interrupt Summary</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>NIP: Normal Interrupt Summary</td></tr>
<tr><td align="center">Field17</td><td align="center">19:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RS: Received Process Status</td></tr>
<tr><td align="center">Field20</td><td align="center">22:20</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TS: Transmit Process Status</td></tr>
<tr><td align="center">Field23</td><td align="center">25:23</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>EB: Error Bits</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>GLI: GMAC Line interface Interrupt</td></tr>
<tr><td align="center">Field27</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>GMI: GMAC MMC Interrupt</td></tr>
<tr><td align="center">Field28</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>GPI: GMAC PMT Interrupt</td></tr>
<tr><td align="center">Field29</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>TTI: Time-Stamp Trigger Interrupt</td></tr>
<tr><td align="center">Field30</td><td align="center">31:30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Operation Mode Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>SR: Start/Stop Receive</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>OSF: Operate On Second Mode</td></tr>
<tr><td align="center">Field3</td><td align="center">4:3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RTC: Receive Threshold Control</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FUF: Forward Undersized Good Frames</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FEF: Forward Error Frames</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>EFC: Enable HW Flow Control</td></tr>
<tr><td align="center">Field9</td><td align="center">10:9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RFA: Threshold for activating flow control ( in both the HD and FD )</td></tr>
<tr><td align="center">Field11</td><td align="center">12:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RFD: Threshold for deactivating flow control ( in both the HD and FD )</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ST: Start/Stop Transmission Command</td></tr>
<tr><td align="center">Field14</td><td align="center">16:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TTC: Transmit Threshold Control</td></tr>
<tr><td align="center">Field17</td><td align="center">19:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FTF: Flush Transmit FIFO</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSF: Transmit Store and Forward</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RFD[2]: MSB of Threshold for Deactivating the Flow Control</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RFA[2]: MSB of Threshold for Activating the Flow Control</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DFF: Disable Flushing of Received Frames</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RSF: receive Store and Forward</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>DT: Disable Dropping of TCP/IP Checksum Error Frames</td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080101C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt enable Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TIE: Transmit Interrupt Enable</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TSE: Transmit Stopped Enable</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TUE: Transmit Buffer Unvailable Enable</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>TUJ: Transmit Jabber Timeout Enable</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>OVE: Overflow Interrupt Enable</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>UNE: Underflow Interrupt Enable</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RIE: Receive Interrupt Enable</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RUE: Receive Buffer Unavailable  Enable</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RSE: Receive Stopped  Enable</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RWE: Receive Watchdog Timeout  Enable</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ETE: Early Transmit Interrupt Enable</td></tr>
<tr><td align="center">Field11</td><td align="center">12:11</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>FBE: Fatal Bus Error Enable</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>ERE: Early Receive Interrupt Enable</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>AIE: Abnormal Interrupt Summary enable</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>NIE: Normal Interrupt Summary enable</td></tr>
<tr><td align="center">Field17</td><td align="center">31:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Missed Frame and Buffer Oerflow Counter Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Indicates the number of frames missed by the controller due to the Host Receive Buffer being Unavailable</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Overflow bit for Missed Frame Counter</td></tr>
<tr><td align="center">Field17</td><td align="center">27:17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Indicates the number of frames missde by the application</td></tr>
<tr><td align="center">Field28</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Overflow bit for FIFO Overflow Counter</td></tr>
<tr><td align="center">Field29</td><td align="center">31:29</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Receive Interrupt Watchdog Timer Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>RIWT: RI Watchdog Timer count</td></tr>
<tr><td align="center">Field8</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register18</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Current Host Transmit Descriptor Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register18_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register18_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Host Transmit Descriptor Address Pointer Cleared on Reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register19</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4080104C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Current Host Receive Descriptor Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register19_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register19_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Host Receive Descriptor Address Pointer Cleared on Reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register20</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Current Host Transmit Buffer Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register20_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register20_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Host Transmit Buffer Address Pointer Cleared on Reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register21</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Current Host Receive Buffer Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register21_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register21_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Host Receive Buffer Address Pointer Cleared on Reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GMACB/DMA/Register22</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40801058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HW Feature Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Register22_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Register22_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>10/100 Mbps support</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>1000 Mbps support</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>&nbsp;</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>HASH Filter support</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Multiple MAC Address Registers support</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCS registers (TBI/SGMII/RTBI PHY interface)support</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>SMA (MDIO) Interface support</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PMT Remote Wakeup support</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PMT Magic Packet</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RMON module</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>IEEE 1588-2002 Time-Stamp</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>IEEE 1588-2008 Advanced Time-Stamp</td></tr>
<tr><td align="center">Field14</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Checksum Offload in Tx</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>IP Checksum Offload (Type 1) in Rx</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>IP Checksum Offload (Type 2) in Rx</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RxFIFO &gt; 2048 Bytes</td></tr>
<tr><td align="center">Field20</td><td align="center">23:20</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Alternate (Enhanced Descriptor)</td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">NETOEB</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x40810000...0x4081FFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">ETHB port TCP/IP offload engine</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('NETOEB_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="NETOEB_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEB/Job Queue Base Address</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40810000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Job Queue Base Address</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Job%20Queue%20Base%20Address_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Job Queue Base Address_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">JOB_QUEUE_BASE</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Base
address in main memory of the job queue. This address MUST be aligned
to a (2C_MAX_JOBS_BITS) * 256 byte boundary. (The default value for
C_MAX_JOBS_BITS is 4, and hence the required alignment is 4096 bytes)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEB/Job Queue Fill Level</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40810004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Job Queue Fill Level</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Job%20Queue%20Fill%20Level_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Job Queue Fill Level_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">JOB_QUEUE_FILL</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Reading
returns the number of pending jobs in the job queue. Writing any value
increments the job queue write pointer to indicate a new pending job is
present. NOTE: This will only take effect if JOB_QUEUE_FILL /= MAX_JOBS
(Which in the default configuration is 15)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEB/Job Queue Read Pointer</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40810008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Job Queue Read Pointer</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Job%20Queue%20Read%20Pointer_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Job Queue Read Pointer_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">JOB_QUEUE_RPTR</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates
the job index into the job queue that is currently being processed if
DBG_STATE /= IDLE, or the index of the next job to be processed if
DBG_STATE = IDLE</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEB/Job Queue Write Pointer</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4081000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Job Queue Write Pointer</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Job%20Queue%20Write%20Pointer_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Job Queue Write Pointer_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">JOB_QUEUE_WPTR</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates the job index that should be used to submit a new job for processing</td></tr>
<tr><td align="center">MTU</td><td align="center">15:0</td><td align="center">0x5DC</td><td align="center">RW</td><td>The
maximum number of bytes transferred in a single Ethernet frame
(excluding MAC header). The minimum value that may be programmed is 121
bytes (so there is always room for at least 1 byte of payload even with
maximal sized TCP and IP headers)</td></tr>
<tr><td align="center">TX_ENABLE</td><td align="center">0</td><td align="center">0x1</td><td align="center">RW</td><td><br>0 = Transmit job processing is disabled and controller is held in idle state<br>1 = Transmit job processing is enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEB/Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40810018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">DBG_STATE</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td><br>0000 = INIT<br>0001 = IDLE<br>0010 = LOAD_JOB<br>0011 = LOAD_HEADERS<br>0100 = WAIT_HEADERS_FETCHED<br>0110 = CHECK_HEADERS<br>1000 = ADD_PKT_HEADERS<br>1001 = ADD_PKT_DATA<br>1010 = NEXT_PKT_DATA<br>1011 = POKE_TRANSMIT<br>1100 = UPDATE_HEADERS<br>1101 = NEXT_SRC_SEGS_REQ<br>1110 = NEXT_SRC_SEGS<br>1111 = COMPLETE_JOB</td></tr>
<tr><td align="center">DATA_LEN_ERROR</td><td align="center">8</td><td align="center">0x0</td><td align="center">R</td><td>The sum of a processed job�s source segments data lengths did not equal the total data length for the job</td></tr>
<tr><td align="center">HEADER_ERROR</td><td align="center">9</td><td align="center">0x0</td><td align="center">R</td><td>The
MAC, IP, or TCP header of a processed job failed the validity for TSO
test. For a job to be valid, the following must be ALL be TRUE:<br>MAC type field = IP or VLAN_TAG<br>IP version = 4<br>IP Fragment offset =  0<br>IP More Fragments (MF) flag = 0<br>IP Lower Protocol = TCP or UDP</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEB/Jobs Completed</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4081001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Jobs Completed</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Jobs%20Completed_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Jobs Completed_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">COMPLETED</td><td align="center">31:0</td><td align="center">0x0</td><td align="center">R</td><td>A
self clearing count of the number of jobs completed since the last time
this register was read. This counter saturates at value of C_MAX_JOBS +
1 (16 for this implementation) and this should be interpeted as &gt;=
16 jobs have completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEB/Bytes Transmitted</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40810020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Bytes Transmitted</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Bytes%20Transmitted_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Bytes Transmitted_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_BYTES</td><td align="center">31:0</td><td align="center">0x0</td><td align="center">R</td><td>The number of bytes transmitted since reset (including MAC headers, IP, TCP and UDP headers)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEB/Packets Transmitted</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40810024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Packets Transmitted</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Packets%20Transmitted_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Packets Transmitted_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_PACKETS</td><td align="center">31:0</td><td align="center">0x0</td><td align="center">R</td><td>The number of Ethernet frames transmitted since reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEB/Tx Aborts</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40810028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Tx Aborts</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Tx%20Aborts_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Tx Aborts_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_ABORTS</td><td align="center">15:0</td><td align="center">0x0</td><td align="center">R</td><td>The number of transmit aborts reported by the GMAC since reset (count saturates at 0xFFFF)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEB/Tx Collisions</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4081002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Tx Collisions</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Tx%20Collisions_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Tx Collisions_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_COLIISIONS</td><td align="center">15:0</td><td align="center">0x0</td><td align="center">R</td><td>The number of transmit collisions reported by the GMAC since reset (count saturates at 0xFFFF)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>NETOEB/Tx Carrier Errors</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40810030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Tx Carrier Errors</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Tx%20Carrier%20Errors_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Tx Carrier Errors_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_CARRIER_ERRS</td><td align="center">15:0</td><td align="center">0x0</td><td align="center">R</td><td>The number of transmit carrier errors reported by the GMAC since reset (count saturates at 0xFFFF)</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">USBDEV</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x40E00000...0x40EFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">USB2.0 On-the-go controller usable as device only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('USBDEV_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="USBDEV_blocks" style="display: none;">
<!--Converted from DWC_otg.xml-->
<br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">REGS</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E00000...0x40DFFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Internal register map</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GOTGCTL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: OTG Control and Status Register<br>Size: 32 bit<br>Address offset: 000h<br>Read/Write Access: Read/Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GOTGCTL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GOTGCTL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">SesReqScs</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>Session Request Success (SesReqScs)<br>The core sets this bit when a session request initiation is<br>successful.<br>1’b0: Session request failure<br>1’b1: Session request success<br>Dependencies: This bit is valid only For Device Only configuration when OTG_MODE == 3 or OTG_MODE == 4</td></tr>
<tr><td align="center">SesReq</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Session Request (SesReq)<br>The application sets this bit to initiate a session request on the<br>USB. The application can clear this bit by writing a 0 when the<br>Host Negotiation Success Status Change bit in the OTG<br>Interrupt register (GOTGINT.HstNegSucStsChng) is SET. The<br>core clears this bit when the HstNegSucStsChng bit is cleared.<br>If you use the USB 1.1 Full-Speed Serial Transceiver interface to<br>initiate the session request, the application must wait until the<br>VBUS discharges to 0.2 V, after the B-Session Valid bit in this<br>register (GOTGCTL.BSesVld) is cleared. This discharge time<br>varies between different PHYs and can be obtained from the<br>PHY vendor.<br>1’b0: No session request<br>1’b1: Session request<br>Dependencies: This bit is valid only For Device Only configuration when OTG_MODE == 3 or OTG_MODE == 4</td></tr>
<tr><td align="center">HstNegScs</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>Host Negotiation Success (HstNegScs)<br>The core sets this bit when host negotiation is successful. The<br>core clears this bit when the HNP Request (HNPReq) bit in this<br>register is SET.<br>1’b0: Host negotiation failure<br>1’b1: Host negotiation success<br>Dependencies: This bit is valid only For Device Only configuration when OTG_MODE == 3 or OTG_MODE == 4</td></tr>
<tr><td align="center">HNPReq</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>HNP Request (HNPReq)<br>The application sets this bit to initiate an HNP request to the<br>connected USB host. The application can clear this bit by writing<br>a 0 when the Host Negotiation Success Status Change bit in the<br>OTG Interrupt register (GOTGINT.HstNegSucStsChng) is SET.<br>The core clears this bit when the HstNegSucStsChng bit is<br>cleared.<br>1’b0: No HNP request<br>1’b1: HNP request<br>Dependencies: This bit is valid only For Device Only configuration when OTG_MODE == 3 or OTG_MODE == 4</td></tr>
<tr><td align="center">DevHNPEn</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Device HNP Enabled (DevHNPEn)<br>The application sets this bit when it successfully receives a<br>SetFeature.SetHNPEnable command from the connected USB<br>host.<br>1’b0: HNP is not enabled in the application<br>1’b1: HNP is enabled in the application<br>Dependencies: This bit is valid only For Device Only configuration when OTG_MODE == 3 or OTG_MODE == 4</td></tr>
<tr><td align="center">ConIDSts</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Host and Device<br>Connector ID Status (ConIDSts)<br>Indicates the connector ID status on a connect event.<br>1’b0: The DWC_otg core is in A-Device mode<br>1’b1: The DWC_otg core is in B-Device mode<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">BSesVld</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>B-Session Valid (BSesVld)<br>Indicates the Device mode transceiver status.<br>1’b0: B-session is not valid.<br>1’b1: B-session is valid.<br>In OTG mode, you can use this bit to determine IF the device is<br>connected or disconnected.<br>Dependencies: This bit is valid only For Device Only configuration when OTG_MODE == 3 or OTG_MODE == 4</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GOTGINT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: OTG Interrupt Register<br>Size: 32 bit<br>Address offset: 004h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GOTGINT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GOTGINT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">SesEndDet</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>Session End Detected (SesEndDet)<br>The core sets this bit when the utmiotg_bvalid signal is<br>deasserted.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">SesReqSucStsChng</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>Session Request Success Status Change<br>(SesReqSucStsChng)<br>The core sets this bit on the success or failure of a session<br>request. The application must read the Session Request<br>Success bit in the OTG Control and Status register<br>(GOTGCTL.SesReqScs) to check For success or failure.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or @OTG_MODE == 3 or @OTG_MODE ==
4 or @OTG_MODE == 5 or @OTG_MODE == 6</td></tr>
<tr><td align="center">HstNegSucStsChng</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>Host Negotiation Success Status Change (HstNegSucStsChng)<br>The core sets this bit on the success or failure of a USB host<br>negotiation request. The application must read the Host<br>Negotiation Success bit of the OTG Control and Status register<br>(GOTGCTL.HstNegScs) to check For success or failure.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">HstNegDet</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>Host Negotiation Detected (HstNegDet)<br>The core sets this bit when it detects a host negotiation request<br>on the USB.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">ADevTOUTChg</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>A-Device Timeout Change (ADevTOUTChg)<br>The core sets this bit to indicate that the A-device has timed out<br>WHILE waiting FOR the B-device to connect.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GAHBCFG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: AHB Configuration Register<br>Size: 32 bit<br>Address offset: 008h<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GAHBCFG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GAHBCFG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">GlblIntrMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and device<br>Global Interrupt Mask (GlblIntrMsk)<br>The application uses this bit to mask or unmask the interrupt line<br>assertion to itself. Irrespective of this bit’s setting, the interrupt<br>status registers are updated by the core.<br>1’b0: Mask the interrupt assertion to the application.<br>1’b1: Unmask the interrupt assertion to the application.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">HBstLen</td><td align="center">4:1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and device<br>Burst Length/Type (HBstLen)<br>This field is used in both External and Internal DMA modes. In<br>External DMA mode, these bits appear on dma_burst[3:0] ports,<br>which can be used by an external wrapper to interface the<br>External DMA Controller interface to DW_ahb_dmac<br>or ARM PrimeCell.<br>External DMA Modedefines the DMA burst length in terms of<br>32-bit words:<br>4’b0000: 1 word<br>4’b0001: 4 words<br>4’b0010: 8 words<br>4’b0011: 16 words<br>4’b0100: 32 words<br>4’b0101: 64 words<br>4’b0110: 128 words<br>4’b0111: 256 words<br>Others: Reserved<br>Internal DMA ModeAHB Master burst type:<br>4’b0000 Single<br>4’b0001 INCR<br>4’b0011 INCR4<br>4’b0101 INCR8<br>4’b0111 INCR16<br>Others: Reserved<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">DMAEn</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and device<br>DMA Enable (DMAEn)<br>1’b0: Core operates in Slave mode<br>1’b1: Core operates in a DMA mode<br>This bit is always 0 when Slave-Only mode has been selected<br>for the Architecture in coreConsultant (parameter<br>OTG_ARCHITECTURE = 0).<br>If the configuration is OTG_EN_DESC_DMA = 1 and<br>OTG_EN_DESC_DMA_DYNAMIC = 0. there is no need to<br>program this bit.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">NPTxFEmpLvl</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and device<br>Non-Periodic TxFIFO Empty Level (NPTxFEmpLvl)<br>This bit is used only in Slave mode.<br>In host mode and with Shared FIFO with device mode, this bit<br>indicates when the Non-Periodic TxFIFO Empty Interrupt bit in<br>the Core Interrupt register (GINTSTS.NPTxFEmp) is triggered.<br>With dedicated FIFO in device mode, this bit indicates when IN<br>endpoint Transmit FIFO empty interrupt (DIEPINTn.TxFEmp) is<br>triggered.<br>Host mode and with Shared FIFO with device mode:-<br>1’b0: GINTSTS.NPTxFEmp interrupt indicates that the Non-<br>Periodic TxFIFO is half empty<br>1’b1: GINTSTS.NPTxFEmp interrupt indicates that the Non-<br>Periodic TxFIFO is completely empty<br>Dedicated FIFO in device mode :-<br>1’b0: DIEPINTn.TxFEmp interrupt indicates that the IN<br>Endpoint TxFIFO is half empty<br>1’b1: DIEPINTn.TxFEmp interrupt indicates that the IN<br>Endpoint TxFIFO is completely empty<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GUSBCFG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: USB Configuration Register<br>Size: 32 bit<br>Address offset: 00Ch<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GUSBCFG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GUSBCFG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TOutCal</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>HS/FS Timeout Calibration (TOutCal)<br>The number of PHY clocks that the application programs in this<br>field is added to the high-speed/full-speed interpacket timeout<br>duration in the core to account For any additional delays<br>introduced by the PHY. This can be required, because the delay<br>introduced by the PHY in generating the linestate condition can<br>vary from one PHY to another.<br>The USB standard timeout value For high-speed operation is 736<br>to 816 (inclusive) bit times. The USB standard timeout value For<br>full-speed operation is 16 to 18 (inclusive) bit times. The<br>application must program this field based on the speed of<br>enumeration. The number of bit times added per PHY clock are:<br>High-speed operation:<br>One 30-MHz PHY clock = 16 bit times<br>One 60-MHz PHY clock = 8 bit times<br>Full-speed operation:<br>One 30-MHz PHY clock = 0.4 bit times<br>One 60-MHz PHY clock = 0.2 bit times<br>One 48-MHz PHY clock = 0.25 bit times<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">PHYIf</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>PHY Interface (PHYIf)<br>The application uses this bit to configure the core To support a<br>UTMI+ PHY with an 8- or 16-bit interface. When a ULPI PHY is<br>chosen, this must be Set to 8-bit mode.<br>1’b0: 8 bits<br>1’b1: 16 bits<br>This bit is writable only If UTMI+ and ULPI were selected in<br>coreConsultant configuration (parameter<br>OTG_HSPHY_DWIDTH = 3). Otherwise, this bit returns the<br>value For the power-on interface selected during configuration.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">ULPI_UTMI_Sel</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>ULPI or UTMI+ Select (ULPI_UTMI_Sel)<br>The application uses this bit to select either a UTMI+ interface or<br>ULPI Interface.<br>1’b0: UTMI+ Interface<br>1’b1: ULPI Interface<br>This bit is writable only If UTMI+ and ULPI was specified For<br>High-Speed PHY Interface(s) in coreConsultant configuration<br>(parameter OTG_HSPHY_INTERFACE = 3). Otherwise, reads<br>Return either 0 or 1, depending on the interface selected using<br>the OTG_HSPHY_INTERFACE parameter.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">FSIntf</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>Full-Speed Serial Interface Select (FSIntf)<br>The application uses this bit to select either a unidirectional or<br>bidirectional USB 1.1 full-speed serial transceiver interface.<br>1’b0: 6-pin unidirectional full-speed serial interface<br>1’b1: 3-pin bidirectional full-speed serial interface<br>If a USB 1.1 Full-Speed Serial Transceiver interface was not<br>selected in coreConsultant (parameter<br>OTG_FSPHY_INTERFACE = 0), this bit is always 0, with Write<br>Only access.<br>If a USB 1.1 FS interface was selected in coreConsultant<br>(parameter OTG_FSPHY_INTERFACE ! = 0), Then the<br>application can Set this bit to select between the 3- and 6-pin<br>interfaces, and access is Read and Write.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">PHYSel</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>USB 2.0 High-Speed PHY or USB 1.1 Full-Speed Serial<br>Transceiver Select (PHYSel)<br>The application uses this bit to select either a high-speed UTMI+<br>or ULPI PHY, or a full-speed transceiver.<br>1’b0: USB 2.0 high-speed UTMI+ or ULPI PHY<br>1’b1: USB 1.1 full-speed serial transceiver<br>If a USB 1.1 Full-Speed Serial Transceiver interface was not<br>selected in coreConsultant (parameter<br>OTG_FSPHY_INTERFACE = 0), this bit is always 0, with Write<br>Only access.<br>If a high-speed PHY interface was not selected in<br>coreConsultant (parameter OTG_HSPHY_INTERFACE = 0),<br>this bit is always 1, with Write Only access.<br>If both interface types were selected in coreConsultant<br>(parameters have non-zero values), the application uses this bit<br>to select which interface is active, and access is Read and Write.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">DDRSel</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>ULPI DDR Select (DDRSel)<br>The application uses this bit to select a Single Data Rate (SDR)<br>or Double Data Rate (DDR) or ULPI interface.<br>1’b0: Single Data Rate ULPI Interface, with 8-bit-wide data<br>bus<br>1’b1: Double Data Rate ULPI Interface, with 4-bit-wide data<br>bus<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">SRPCap</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>SRP-Capable (SRPCap)<br>The application uses this bit to control the DWC_otg core SRP<br>capabilities. If the core operates as a non-SRP-capable<br>B-device, it cannot request the connected A-device (host) to<br>activate VBUS and start a session.<br>1’b0: SRP capability is not enabled.<br>1’b1: SRP capability is enabled.<br>This bit is writable only If an SRP mode was specified For Mode<br>of Operation in coreConsultant (parameter OTG_MODE).<br>Otherwise, reads Return 0.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">HNPCap</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>HNP-Capable (HNPCap)<br>The application uses this bit to control the DWC_otg core’s HNP<br>capabilities.<br>1’b0: HNP capability is not enabled.<br>1’b1: HNP capability is enabled.<br>This bit is writable only If an HNP mode was specified For Mode<br>of Operation in coreConsultant (parameter OTG_MODE).<br>Otherwise, reads Return 0.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">USBTrdTim</td><td align="center">13:10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>USB Turnaround Time (USBTrdTim)<br>Sets the turnaround time in PHY clocks.<br>Specifies the response time For a MAC request to the Packet<br>FIFO Controller (PFC) to fetch data from the DFIFO (SPRAM).<br>This must be programmed to<br>4’h5: When the MAC interface is 16-bit UTMI+ .<br>4’h9: When the MAC interface is 8-bit UTMI+ .<br>Note: The values above are calculated For the minimum AHB<br>frequency of 30 MHz. USB turnaround time is critical For<br>certification where long cables and 5-Hubs are used, so If you<br>need the AHB to run at less than 30 MHz, and If USB turnaround<br>time is not critical, these bits can be programmed to a larger<br>value.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">PhyLPwrClkSel</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>PHY Low-Power Clock Select (PhyLPwrClkSel)<br>Selects either 480-MHz or 48-MHz (low-power) PHY mode. In<br>FS and LS modes, the PHY can usually operate on a 48-MHz<br>clock to save power.<br>1’b0: 480-MHz Internal PLL clock<br>1’b1: 48-MHz External Clock<br>In 480 MHz mode, the UTMI interface operates at either 60 or<br>30-MHz, depending upon whether 8- or 16-bit data width is<br>selected. In 48-MHz mode, the UTMI interface operates at 48<br>MHz in FS mode and at either 48 or 6 MHz in LS mode<br>(depending on the PHY vendor).<br>This bit drives the utmi_fsls_low_power core output signal, and<br>is valid only For UTMI+ PHYs.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">OtgI2CSel</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>UTMIFS or I2C Interface Select (OtgI2CSel)<br>The application uses this bit to select the I2C interface.<br>1’b0: UTMI USB 1.1 Full-Speed interface For OTG signals<br>1’b1: I2C interface For OTG signals<br>This bit is writable only If I2C and UTMIFS were specified For<br>Enable I2C Interface? in coreConsultant (parameter<br>OTG_I2C_INTERFACE = 2). Otherwise, reads Return 0.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">TermSelDLPulse</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Device only<br>TermSel DLine Pulsing Selection (TermSelDLPulse)<br>This bit selects utmi_termselect to drive data line pulse during<br>SRP.<br>1’b0: Data line pulsing using utmi_txvalid (Default).<br>1’b1: Data line pulsing using utmi_termsel.<br>Dependencies: This bit is valid only For Device Only configuration when OTG_MODE == 3 or OTG_MODE == 4</td></tr>
<tr><td align="center">TxEndDelay</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Tx End Delay (TxEndDelay)<br>Writing
1'b1 to this bit enables the core to follow the TxEndDelay timings as
per UTMI+ specification 1.05 section 4.1.5 for opmode signal during
remote wakeup.<br>1’b0 : Normal Mode.<br>1’b1 : Tx End delay .<br>Dependencies:
This bit is valid only Device configuration when OTG_MODE ==0 or
OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4</td></tr>
<tr><td align="center">ForceHstMode</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and device<br>Force Host Mode (ForceHstMode)<br>Writing a 1 to this bit forces the core to host mode irrespective of<br>utmiotg_iddig input pin.<br>1’b0 : Normal Mode.<br>1’b1 : Force Host Mode.<br>After setting the force bit, the application must wait at least<br>25 ms before the change to take effect. When the simulation is<br>in scale down mode, waiting for 500 us is sufficient.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">ForceDevMode</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and device<br>Force Device Mode (ForceDevMode)<br>Writing a 1 to this bit forces the core to device mode irrespective<br>of utmiotg_iddig input pin.<br>1’b0 : Normal Mode.<br>1’b1 : Force Device Mode.<br>After setting the force bit, the application must wait at least<br>25 ms before the change to take effect. When the simulation is<br>in scale down mode, waiting for 500 us is sufficient.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">Corrupt</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and device<br>Corrupt Tx packet<br>This bit is FOr debug purposes only. Never Set this bit to 1.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GRSTCTL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Reset Register<br>Size: 32 bit<br>Address offset: 0010h<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GRSTCTL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GRSTCTL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CSftRst</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>Core Soft Reset (CSftRst)<br>Resets the hclk and phy_clock domains as follows:<br>Clears the interrupts and all the CSR registers except the<br>following register bits:<br>- PCGCCTL.RstPdwnModule<br>- PCGCCTL.GateHclk<br>- PCGCCTL.PwrClmp<br>- PCGCCTL.StopPPhyLPwrClkSelclk<br>- GUSBCFG.PhyLPwrClkSel<br>- GUSBCFG.DDRSel<br>- GUSBCFG.PHYSel<br>- GUSBCFG.FSIntf<br>- GUSBCFG.ULPI_UTMI_Sel<br>- GUSBCFG.PHYIf<br>- HCFG.FSLSPclkSel<br>- DCFG.DevSpd<br>- GGPIO<br>All module state machines (except the AHB Slave Unit) are<br>reset to the IDLE state, and all the transmit FIFOs and the<br>receive FIFO are flushed.<br>Any transactions on the AHB Master are terminated as soon<br>as possible, after gracefully completing the last data phase of<br>an AHB transfer. Any transactions on the USB are terminated<br>immediately.<br>The application can write to this bit any time it wants to reset the<br>core. This is a self-clearing bit and the core clears this bit after<br>all the necessary logic is reset in the core, which can take<br>several clocks, depending on the current state of the core. Once<br>this bit is cleared software must wait at least 3 PHY clocks<br>before doing any access to the PHY domain (synchronization<br>delay). Software must also must check that bit 31 of this register<br>is 1 (AHB Master is IDLE) before starting any operation.<br>Typically software reset is used during software development<br>and also when you dynamically change the PHY selection bits in<br>the USB configuration registers listed above. When you change<br>the PHY, the corresponding clock For the PHY is selected and<br>used in the PHY domain. Once a new clock is selected, the PHY<br>domain has to be reset For proper operation.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">HSftRst</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>HClk Soft Reset (HSftRst)<br>The application uses this bit to flush the control logic in the AHB<br>Clock domain. Only AHB Clock Domain pipelines are reset.<br>FIFOs are not flushed with this bit.<br>All state machines in the AHB clock domain are reset to the<br>Idle state after terminating the transactions on the AHB,<br>following the protocol.<br>CSR control bits used by the AHB clock domain state<br>machines are cleared.<br>To clear this interrupt, status mask bits that control the<br>interrupt status and are generated by the AHB clock domain<br>state machine are cleared.<br>Because interrupt status bits are not cleared, the application<br>can get the status of any core events that occurred after it Set<br>this bit.<br>This is a self-clearing bit that the core clears after all necessary<br>logic is reset in the core. This can take several clocks,<br>depending on the core’s current state.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">RxFFlsh</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>RxFIFO Flush (RxFFlsh)<br>The application can flush the entire RxFIFO using this bit, but<br>must first ensure that the core is not in the middle of a<br>transaction.<br>The application must only write to this bit after checking that the<br>core is neither reading from the RxFIFO nor writing to the<br>RxFIFO.<br>The application must wait until the bit is cleared before<br>performing any other operations. This bit requires 8 clocks<br>(slowest of PHY or AHB clock) to clear.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">TxFFlsh</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>TxFIFO Flush (TxFFlsh)<br>This bit selectively flushes a single or all transmit FIFOs, but<br>cannot do so If the core is in the midst of a transaction.<br>The application must write this bit only after checking that the<br>core is neither writing to the TxFIFO nor reading from the<br>TxFIFO. Verify using these registers:<br>ReadNAK Effective Interrupt ensures the core is not<br>reading from the FIFO<br>WriteGRSTCTL.AHBIdle ensures the core is not writing<br>anything to the FIFO.<br>Flushing is normally recommended when FIFOs are<br>reconfigured or when switching between Shared FIFO and<br>Dedicated Transmit FIFO operation. FIFO flushing is also<br>recommended during device endpoint disable.<br>The application must wait until the core clears this bit before<br>performing any operations. This bit takes eight clocks to clear,<br>using the slower clock of phy_clk or hclk.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">TxFNum</td><td align="center">14:10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>TxFIFO Number (TxFNum)<br>This is the FIFO number that must be flushed using the TxFIFO<br>Flush bit. This field must not be changed until the core clears the<br>TxFIFO Flush bit.<br>5’h0:<br>- Non-periodic TxFIFO flush in Host mode<br>- Non-periodic TxFIFO flush in device mode when in shared<br>FIFO operation<br>- Tx FIFO 0 flush in device mode when in dedicated FIFO<br>mode<br>5’h1:<br>- Periodic TxFIFO flush in Host mode<br>- Periodic TxFIFO 1 flush in Device mode when in shared<br>FIFO operation<br>- TXFIFO 1 flush in device mode when in dedicated FIFO<br>mode<br>5’h2:<br>- Periodic TxFIFO 2 flush in Device mode when in shared<br>FIFO operation<br>- TXFIFO 2 flush in device mode when in dedicated FIFO<br>mode<br>...<br>5’hF:<br>- Periodic TxFIFO 15 flush in Device mode when in shared<br>FIFO operation<br>- TXFIFO 15 flush in device mode when in dedicated FIFO<br>mode<br>5’h10: Flush all the transmit FIFOs in device or host mode.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">DMAReq</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode:Host and Device<br>DMA Request Signal (DMAReq)<br>Indicates that the DMA request is in progress. Used For debug.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">AHBIdle</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode:Host and Device<br>AHB Master Idle (AHBIdle)<br>Indicates that the AHB Master State Machine is in the IDLE<br>condition.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GINTSTS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Interrupt Register<br>Size: 32 bit<br>Address offset: 0014h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GINTSTS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GINTSTS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CurMod</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Host and Device<br>Current Mode of Operation (CurMod)<br>Indicates the current mode.<br>1’b0: Device mode<br>1’b1: Host mode</td></tr>
<tr><td align="center">ModeMis</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>Mode Mismatch Interrupt (ModeMis)<br>The core sets this bit when the application is trying to access:<br>A Host mode register, when the core is operating in Device<br>mode<br>A Device mode register, when the core is operating in Host<br>mode<br>The register access is completed on the AHB with an OKAY<br>response, but is ignored by the core internally and does not<br>affect the operation of the core.</td></tr>
<tr><td align="center">OTGInt</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Host and Device<br>OTG Interrupt (OTGInt)<br>The core sets this bit to indicate an OTG protocol event. The<br>application must read the OTG Interrupt Status (GOTGINT)<br>register to determine the exact event that caused this interrupt.<br>The application must clear the appropriate status bit in the<br>GOTGINT register to clear this bit.</td></tr>
<tr><td align="center">micro</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>Start of (micro)Frame (Sof)<br>In Host mode, the core sets this bit to indicate that an SOF (FS),<br>micro-SOF (HS), or Keep-Alive (LS) is transmitted on the USB.<br>The application must write a 1 to this bit to clear the interrupt.<br>In Device mode, in the core sets this bit to indicate that an SOF<br>token has been received on the USB. The application can read<br>the Device Status register to get the current (micro)Frame<br>number. This interrupt is seen only when the core is operating at<br>either HS or FS.</td></tr>
<tr><td align="center">RxFLvl</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Host and Device<br>RxFIFO Non-Empty (RxFLvl)<br>Indicates that there is at least one packet pending to be read<br>from the RxFIFO.</td></tr>
<tr><td align="center">GINNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>Global IN Non-periodic NAK Effective (GINNakEff)<br>Indicates that the Set Global Non-periodic IN NAK bit in the<br>Device Control register (DCTL.SGNPInNak), Set by the<br>application, has taken effect in the core. That is, the core has<br>sampled the Global IN NAK bit Set by the application. This bit<br>can be cleared by clearing the Clear Global Non-periodic IN<br>NAK bit in the Device Control register (DCTL.CGNPInNak).<br>This interrupt does not necessarily mean that a NAK handshake<br>is sent out on the USB. The STALL bit takes precedence over<br>the NAK bit.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">GOUTNakEff</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>Global OUT NAK Effective (GOUTNakEff)<br>Indicates that the Set Global OUT NAK bit in the Device Control<br>register (DCTL.SGOUTNak), Set by the application, has taken<br>effect in the core. This bit can be cleared by writing the Clear<br>Global OUT NAK bit in the Device Control register<br>(DCTL.CGOUTNak).<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">ULPICKINT</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>ULPI Carkit Interrupt (ULPICKINT)<br>This field is used only If the Carkit interface was enabled in<br>coreConsultant (parameter OTG_ULPI_CARKIT = 1).<br>Otherwise, reads Return 0.<br>The core sets this interrupt when a ULPI Carkit interrupt is<br>received. The core’s PHY sets ULPI Carkit interrupt in UART or<br>Audio mode.<br>I2C Carkit Interrupt (I2CCKINT)<br>This field is used only If the I2C interface was enabled in<br>coreConsultant (parameter OTG_I2C_INTERFACE = 1).<br>Otherwise, reads Return 0.<br>The core sets this interrupt when a Carkit interrupt is received.<br>The core’s PHY sets the I2C Carkit interrupt in Audio mode.</td></tr>
<tr><td align="center">I2CINT</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>I2C Interrupt (I2CINT)<br>The core sets this interrupt when I2C access is completed on the<br>I2C interface.<br>This field is used only If the I2C interface was enabled in<br>coreConsultant (parameter OTG_I2C_INTERFACE = 1).<br>Otherwise, reads Return 0.</td></tr>
<tr><td align="center">ErlySusp</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Early Suspend (ErlySusp)<br>The core sets this bit to indicate that an Idle state has been<br>detected on the USB For 3 ms.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">USBSusp</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>USB Suspend (USBSusp)<br>The core sets this bit to indicate that a suspend was detected on<br>the USB. The core enters the Suspended state when there is no<br>activity on the phy_line_state_i signal For an extended period of<br>time.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">USBRst</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>USB Reset (USBRst)<br>The core sets this bit to indicate that a reset is detected on the<br>USB.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">EnumDone</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Enumeration Done (EnumDone)<br>The core sets this bit to indicate that speed enumeration is<br>complete. The application must read the Device Status (DSTS)<br>register to obtain the enumerated speed.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">ISOOutDrop</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Isochronous OUT Packet Dropped Interrupt (ISOOutDrop)<br>The core sets this bit when it fails to write an isochronous OUT<br>packet into the RxFIFO because the RxFIFO does not have<br>enough space to accommodate a maximum packet size packet<br>for the isochronous OUT endpoint.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">EOPF</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>End of Periodic Frame Interrupt (EOPF)<br>Indicates that the period specified in the Periodic Frame Interval<br>field of the Device Configuration register (DCFG.PerFrInt) has<br>been reached in the current microframe.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">EPMis</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Endpoint Mismatch Interrupt (EPMis)<br>Note: This interrupt is valid only in shared FIFO operation.<br>Indicates that an IN token has been received For a non-periodic<br>endpoint, but the data For another endpoint is present in the top<br>of the Non-periodic Transmit FIFO and the IN endpoint<br>mismatch count programmed by the application has expired.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">IEPInt</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>IN Endpoints Interrupt (IEPInt)<br>The core sets this bit to indicate that an interrupt is pending on<br>one of the IN endpoints of the core (in Device mode). The<br>application must read the Device All Endpoints Interrupt (DAINT)<br>register to determine the exact number of the IN endpoint on<br>which the interrupt occurred, and Then read the corresponding<br>Device IN Endpoint-n Interrupt (DIEPINTn) register to determine<br>the exact cause of the interrupt. The application must clear the<br>appropriate status bit in the corresponding DIEPINTn register to<br>clear this bit.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">OEPInt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>OUT Endpoints Interrupt (OEPInt)<br>The core sets this bit to indicate that an interrupt is pending on<br>one of the OUT endpoints of the core (in Device mode). The<br>application must read the Device All Endpoints Interrupt (DAINT)<br>register to determine the exact number of the OUT endpoint on<br>which the interrupt occurred, and Then read the corresponding<br>Device OUT Endpoint-n Interrupt (DOEPINTn) register to<br>determine the exact cause of the interrupt. The application must<br>clear the appropriate status bit in the corresponding DOEPINTn<br>register to clear this bit.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">incompISOIN</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Incomplete Isochronous IN Transfer (incompISOIN)<br>The core sets this interrupt to indicate that there is at least one<br>isochronous IN endpoint on which the transfer is not completed<br>in the current microframe. This interrupt is asserted along with<br>the End of Periodic Frame Interrupt (EOPF) bit in this register.<br>Note: This interrupt is not asserted in Scatter/Gather DMA<br>mode.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">incomplP</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Incomplete Periodic Transfer (incomplP)<br>In Host mode, the core sets this interrupt bit when there are<br>incomplete periodic transactions still pending which are<br>scheduled For the current microframe.<br>Incomplete Isochronous OUT Transfer (incompISOOUT)<br>The Device mode, the core sets this interrupt to indicate that<br>there is at least one isochronous OUT endpoint on which the<br>transfer is not completed in the current microframe. This<br>interrupt is asserted along with the End of Periodic Frame<br>Interrupt (EOPF) bit in this register.<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==3
or OTG_MODE == 4 or OTG_MODE ==5 or OTG_MODE == 6</td></tr>
<tr><td align="center">FetSusp</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Data Fetch Suspended (FetSusp)<br>This interrupt is valid only in DMA mode. This interrupt indicates<br>that the core has stopped fetching data For IN endpoints due to<br>the unavailability of TxFIFO space or Request Queue space.<br>This interrupt is used by the application For an endpoint<br>mismatch algorithm.<br>For example, after detecting an endpoint mismatch, the<br>application:<br>Sets a Global non-periodic IN NAK handshake<br>Disables In endpoints<br>Flushes the FIFO<br>Determines the token sequence from the IN Token Sequence<br>Learning Queue<br>Re-enables the endpoints<br>Clears the Global non-periodic IN NAK handshake<br>If the Global non-periodic IN NAK is cleared, the core has not yet<br>fetched data For the IN endpoint, and the IN token is received:<br>the core generates an “IN token received when FIFO empty”<br>interrupt. The OTG Then sends the host a NAK response. To<br>avoid this scenario, the application can check the<br>GINTSTS.FetSusp interrupt, which ensures that the FIFO is full<br>before clearing a Global NAK handshake.<br>Alternatively, the application can mask the “IN token received<br>when FIFO empty” interrupt when clearing a Global IN NAK<br>handshake.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">ConIDStsChng</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>Connector ID Status Change (ConIDStsChng)<br>The core sets this bit when there is a change in connector ID<br>status.<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">SessReqInt</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>Session Request/New Session Detected Interrupt (SessReqInt)<br>In Host mode, this interrupt is asserted when a session request<br>is detected from the device. In Device mode, this interrupt is<br>asserted when the utmiotg_bvalid signal goes high.<br>For more information on how to use this interrupt,<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">WkUpInt</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode:Host and Device<br>Resume/Remote Wakeup Detected Interrupt (WkUpInt)<br>In Device mode, this interrupt is asserted when a resume is<br>detected on the USB. In Host mode, this interrupt is asserted<br>when a remote wakeup is detected on the USB.<br>For more information on how to use this interrupt<br>Dependencies:
This bit is valid only For Host and Device configuration when OTG_MODE
==0 or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4
or OTG_MODE == 5 or OTG_MODE == 6</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GINTMSK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Interrupt Mask Register<br>Size: 32 bit<br>Address offset: 0018h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GINTMSK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GINTMSK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">ModeMisMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>Mode Mismatch Interrupt Mask (ModeMisMsk)<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==0
or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4 or
OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">OTGIntMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>OTG Interrupt Mask (OTGIntMsk)<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==0
or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4 or
OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">SofMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>Start of (micro)Frame Mask (SofMsk)<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==0
or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4 or
OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">RxFLvlMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>Receive FIFO Non-Empty Mask (RxFLvlMsk)<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==0
or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4 or
OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">NPTxFEmpMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>Non-periodic TxFIFO Empty Mask (NPTxFEmpMsk)<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==0
or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4 or
OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">GINNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Global Non-periodic IN NAK Effective Mask (GINNakEffMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">GOUTNakEffMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Global OUT NAK Effective Mask (GOUTNakEffMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">ULPICKINTMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>ULPI Carkit Interrupt Mask (ULPICKINTMsk)<br>I2C Carkit Interrupt Mask (I2CCKINTMsk)<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==0
or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4 or
OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">I2CIntMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>I2C Interrupt Mask (I2CIntMsk)<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==0
or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4 or
OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">ErlySuspMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Early Suspend Mask (ErlySuspMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">USBSuspMsk</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>USB Suspend Mask (USBSuspMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">USBRstMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>USB Reset Mask (USBRstMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">EnumDoneMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Enumeration Done Mask (EnumDoneMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">ISOOutDropMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Isochronous OUT Packet Dropped Interrupt Mask<br>(ISOOutDropMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">EOPFMsk</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>End of Periodic Frame Interrupt Mask (EOPFMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">EPMisMsk</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Endpoint Mismatch Interrupt Mask (EPMisMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">IEPIntMsk</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>IN Endpoints Interrupt Mask (IEPIntMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">OEPIntMsk</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>OUT Endpoints Interrupt Mask (OEPIntMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">incompISOINMsk</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Incomplete Isochronous IN Transfer Mask (incompISOINMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">FetSuspMsk</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Device only<br>Data Fetch Suspended Mask (FetSuspMsk)<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE ==3 or OTG_MODE == 4</td></tr>
<tr><td align="center">ConIDStsChngMsk</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>Connector ID Status Change Mask (ConIDStsChngMsk)<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==0
or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4 or
OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">DisconnIntMsk</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>Disconnect Detected Interrupt Mask (DisconnIntMsk)<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==0
or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4 or
OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">SessReqIntMsk</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>Session Request/New Session Detected Interrupt Mask<br>(SessReqIntMsk)<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==0
or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4 or
OTG_MODE == 5 or OTG_MODE == 6</td></tr>
<tr><td align="center">WkUpIntMsk</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td>Mode: Host and Device<br>Resume/Remote Wakeup Detected Interrupt Mask<br>(WkUpIntMsk)<br>Dependencies:
This bit is valid only For Device only configuration when OTG_MODE ==0
or OTG_MODE == 1 or OTG_MODE == 2 or OTG_MODE == 3 or OTG_MODE == 4 or
OTG_MODE == 5 or OTG_MODE == 6</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GRXSTSR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Receive Status Debug Read Register<br>Size: 32 bit<br>Address Offset: 001Ch<br>Read/Write Access: Read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GRXSTSR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GRXSTSR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">ChNum</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Mode: Host only<br>Channel Number (ChNum)<br>Indicates the channel number to which the current received<br>packet belongs.<br>Mode: Device only<br>Endpoint Number (EPNum)<br>Indicates the endpoint number to which the current received<br>packet belongs.</td></tr>
<tr><td align="center">BCnt</td><td align="center">14:4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Mode: Host only<br>Byte Count (BCnt)<br>Indicates the byte count of the received IN data packet.<br>Mode: Device only<br>Byte Count (BCnt)<br>Indicates the byte count of the received data packet.</td></tr>
<tr><td align="center">DPID</td><td align="center">16:15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Mode: Host only<br>Data PID (DPID)<br>Indicates the Data PID of the received packet<br>2’b00: DATA0<br>2’b10: DATA1<br>2’b01: DATA2<br>2’b11: MDATA<br>Mode: Device only<br>Data PID (DPID)<br>Indicates the Data PID of the received OUT data packet<br>2’b00: DATA0<br>2’b10: DATA1<br>2’b01: DATA2<br>2’b11: MDATA</td></tr>
<tr><td align="center">PktSts</td><td align="center">23:20</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Mode: Host only<br>Packet Status (PktSts)<br>Indicates the status of the received packet<br>4’b0010: IN data packet received<br>4’b0011: IN transfer completed (triggers an interrupt)<br>4’b0101: Data toggle error (triggers an interrupt)<br>4’b0111: Channel halted (triggers an interrupt)<br>Others: Reserved<br>Mode: Device only<br>Packet Status (PktSts)<br>Indicates the status of the received packet<br>4’b0001: Global OUT NAK (triggers an interrupt)<br>4’b0010: OUT data packet received<br>4’b0011: OUT transfer completed (triggers an interrupt)<br>4’b0100: SETUP transaction completed (triggers an<br>interrupt)<br>4’b0110: SETUP data packet received<br>Others: Reserved</td></tr>
<tr><td align="center">FN</td><td align="center">27:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>Frame Number (FN)<br>This is the least significant 4 bits of the (micro)Frame number in<br>which the packet is received on the USB. This field is supported<br>only when isochronous OUT endpoints are supported.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE == 5 or  OTG_MODE == 6</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GRXSTSP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Receive Status Read /Pop Register<br>Size: 32 bit<br>Address Offset: 0020h<br>Read/Write Access: Read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GRXSTSP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GRXSTSP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">ChNum</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Mode: Host only<br>Channel Number (ChNum)<br>Indicates the channel number to which the current received<br>packet belongs.<br>Mode: Device only<br>Endpoint Number (EPNum)<br>Indicates the endpoint number to which the current received<br>packet belongs.</td></tr>
<tr><td align="center">BCnt</td><td align="center">14:4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Mode: Host only<br>Byte Count (BCnt)<br>Indicates the byte count of the received IN data packet.<br>Mode: Device only<br>Byte Count (BCnt)<br>Indicates the byte count of the received data packet.</td></tr>
<tr><td align="center">DPID</td><td align="center">16:15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Mode: Host only<br>Data PID (DPID)<br>Indicates the Data PID of the received packet<br>2’b00: DATA0<br>2’b10: DATA1<br>2’b01: DATA2<br>2’b11: MDATA<br>Mode: Device only<br>Data PID (DPID)<br>Indicates the Data PID of the received OUT data packet<br>2’b00: DATA0<br>2’b10: DATA1<br>2’b01: DATA2<br>2’b11: MDATA</td></tr>
<tr><td align="center">PktSts</td><td align="center">20:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Mode: Host only<br>Packet Status (PktSts)<br>Indicates the status of the received packet<br>4’b0010: IN data packet received<br>4’b0011: IN transfer completed (triggers an interrupt)<br>4’b0101: Data toggle error (triggers an interrupt)<br>4’b0111: Channel halted (triggers an interrupt)<br>Others: Reserved<br>Mode: Device only<br>Packet Status (PktSts)<br>Indicates the status of the received packet<br>4’b0001: Global OUT NAK (triggers an interrupt)<br>4’b0010: OUT data packet received<br>4’b0011: OUT transfer completed (triggers an interrupt)<br>4’b0100: SETUP transaction completed (triggers an<br>interrupt)<br>4’b0110: SETUP data packet received<br>Others: Reserved</td></tr>
<tr><td align="center">FN</td><td align="center">24:21</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>Frame Number (FN)<br>This is the least significant 4 bits of the (micro)Frame number in<br>which the packet is received on the USB. This field is supported<br>only when isochronous OUT endpoints are supported.<br>Dependencies: This bit is valid only For Device only configuration when OTG_MODE == 5 or  OTG_MODE == 6</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GRXFSIZ</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Receive FIFO Size Register<br>Size: 32 bit<br>Address Offset: 0024h<br>Read/Write Access: Read-Write/read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GRXFSIZ_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GRXFSIZ_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RxFDep</td><td align="center">30:15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode:<br>RxFIFO Depth (RxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. You can write a new value in this field.<br>Programmed values must not exceed the power-on value Set in<br>coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GNPTXFSIZ</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Non-periodic Transmit FIFO Size Register<br>Size: 32 bit<br>Address Offset: 0028h<br>Read/Write Access: Read-Write/read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GNPTXFSIZ_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GNPTXFSIZ_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPTxF0StAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>IN Endpoint FIFO0 Transmit RAM Start Address<br>(INEPTxF0StAddr)<br>For Device mode, this field is valid only when<br>OTG_EN_DED_TX_FIFO = 0<br>This field contains the memory start address For IN Endpoint<br>Transmit FIFO# 0.<br>OTG_RX_DFIFO_DEPTH<br>This field is determined during coreConsultant configuration by<br>Enable Dynamic FIFO Sizing? (OTG_DFIFO_DYNAMIC):<br>OTG_DFIFO_DYNAMIC = 0 These flops are optimized,<br>and reads Return the power-on value.<br>OTG_DFIFO_DYNAMIC = 1The application can write a<br>new value in this field. Programmed values must not exceed<br>the power-on value Set in coreConsultant.<br>The power-on reset value of this register is specified during<br>coreConsultant configuration as the Largest Rx Data FIFO<br>Depth (parameter OTG_RX_DFIFO_DEPTH).<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 0</td></tr>
<tr><td align="center">INEPTxF0Dep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>IN Endpoint TxFIFO 0 Depth (INEPTxF0Dep)This field is valid<br>only For Device mode and when OTG_EN_DED_TX_FIFO = 1<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>This field is determined during coreConsultant configuration by<br>Enable Dynamic FIFO Sizing?<br>(OTG_TX_DINEP_DFIFO_DEPTH_0):<br>OTG_DFIFO_DYNAMIC = 0These flops are optimized,<br>and reads Return the power-on value.<br>OTG_DFIFO_DYNAMIC = 1Programmed values must not<br>exceed the power-on value Set in coreConsultant.<br>The power-on reset value of this field is specified during<br>coreConsultant configuration as Largest IN Endpoint FIFO 0<br>Depth (parameter OTG_TX_DINEP_DFIFO_DEPTH_0).<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GNPTXSTS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Non-periodic Transmit FIFO/Queue Status Register<br>Size: 32 bit<br>Address Offset: 002Ch<br>Read/Write Access: Read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GNPTXSTS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GNPTXSTS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">NPTxFSpcAvail</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>Non-periodic TxFIFO Space Avail (NPTxFSpcAvail)<br>Indicates the amount of free space available in the Non-periodic<br>TxFIFO.<br>Values are in terms of 32-bit words.<br>16’h0: Non-periodic TxFIFO is full<br>16’h1: 1 word available<br>16’h2: 2 words available<br>16’hn: n words available (where 0  n  32,768)<br>16’h8000: 32,768 words available<br>Others: Reserved</td></tr>
<tr><td align="center">NPTxQSpcAvail</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>Non-periodic Transmit Request Queue Space Available<br>(NPTxQSpcAvail)<br>Indicates the amount of free space available in the Non-periodic<br>Transmit Request Queue. This queue holds both IN and OUT<br>requests in Host mode. Device mode has only IN requests.<br>8’h0: Non-periodic Transmit Request Queue is full<br>8’h1: 1 location available<br>8’h2: 2 locations available<br>n: n locations available (0  n  8)<br>Others: Reserved</td></tr>
<tr><td align="center">NPTxQTop</td><td align="center">30:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Mode: Device only<br>Top of the Non-periodic Transmit Request Queue (NPTxQTop)<br>Entry in the Non-periodic Tx Request Queue that is currently<br>being processed by the MAC.<br>Bits [30:27]: Channel/endpoint number<br>Bits [26:25]:<br>- 2’b00: IN/OUT token<br>- 2’b01: Zero-length transmit packet (device IN/host OUT)<br>- 2’b10: PING/CSPLIT token<br>- 2’b11: Channel halt command<br>Bit [24]: Terminate (last Entry For selected channel/endpoint)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GI2CCTL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: I2C Access Register<br>Size: 32 bit<br>Address Offset: 0030h<br>Read/Write Access: Read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GI2CCTL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GI2CCTL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GPVNDCTL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: PHY Vendor Control Register<br>Size: 32 bit<br>Address Offset: 0034h<br>Read/Write Access: Read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPVNDCTL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPVNDCTL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GGPIO</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: General Purpose Input/Output Register<br>Size: 32 bit<br>Address Offset: 0038h<br>Read/Write Access: Read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GGPIO_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GGPIO_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GSNPSID</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: ID Register<br>Size: 32 bit<br>Address Offset: 0040h<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GSNPSID_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GSNPSID_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GHWCFG1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: User HW Config1 Register<br>Size: 32 bit<br>Address Offset: 0044h<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GHWCFG1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GHWCFG1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GHWCFG2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: User HW Config2 Register<br>Size: 32 bit<br>Address Offset: 0048h<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GHWCFG2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GHWCFG2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">OtgMode</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Mode of Operation (OtgMode)<br>3’b000: HNP- and SRP-Capable OTG (Host &amp; Device)<br>3’b001: SRP-Capable OTG (Host &amp; Device)<br>3’b010: Non-HNP and Non-SRP Capable OTG (Host &amp;<br>Device)<br>3’b011: SRP-Capable Device<br>3’b100: Non-OTG Device<br>3’b101: SRP-Capable Host<br>3’b110: Non-OTG Host<br>Others: Reserved<br>(coreConsultant parameter: OTG_MODE</td></tr>
<tr><td align="center">OtgArch</td><td align="center">4:3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Architecture (OtgArch)<br>2’b00: Slave-Only<br>2’b01: External DMA<br>2’b10: Internal DMA<br>Others: Reserved<br>(coreConsultant parameter: OTG_ARCHITECTURE)</td></tr>
<tr><td align="center">SingPnt</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Point-to-Point (SingPnt)<br>1’b0: Multi-point application<br>1’b1: Single-point application<br>(coreConsultant parameter: OTG_SINGLE_POINT)</td></tr>
<tr><td align="center">HSPhyType</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>High-Speed PHY Interface Type (HSPhyType)<br>2’b00: High-Speed interface not supported<br>2’b01: UTMI+<br>2’b10: ULPI<br>2’b11: UTMI+ and ULPI<br>(coreConsultant parameter: OTG_HSPHY_INTERFACE)</td></tr>
<tr><td align="center">FSPhyType</td><td align="center">9:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Full-Speed PHY Interface Type (FSPhyType)<br>2’b00: Full-speed interface not supported<br>2’b01: Dedicated full-speed interface<br>2’b10: FS pins shared with UTMI+ pins<br>2’b11: FS pins shared with ULPI pins<br>(coreConsultant parameter: OTG_FSPHY_INTERFACE)</td></tr>
<tr><td align="center">NumDevEps</td><td align="center">13:10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Number of Device Endpoints (NumDevEps)<br>Indicates the number of device endpoints supported by the core<br>in Device mode in addition to control endpoint 0. The range of<br>this field is 115.<br>(coreConsultant parameter: OTG_NUM_EPS)</td></tr>
<tr><td align="center">NumHstChnl</td><td align="center">17:14</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Number of Host Channels (NumHstChnl)<br>Indicates the number of host channels supported by the core in<br>Host mode. The range of this field is 015: 0 specifies 1 channel,<br>15 specifies 16 channels.<br>(coreConsultant parameter: OTG_NUM_HOST_CHAN)</td></tr>
<tr><td align="center">PerioSuppor</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Periodic OUT Channels Supported in Host Mode (PerioSupport)<br>1’b0: No<br>1’b1: Yes<br>(coreConsultant parameter: OTG_EN_PERIO_HOST)</td></tr>
<tr><td align="center">DynFifoSizing</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Dynamic FIFO Sizing Enabled (DynFifoSizing)<br>1’b0: No<br>1’b1: Yes<br>(coreConsultant parameter: OTG_DFIFO_DYNAMIC)</td></tr>
<tr><td align="center">MultiProcIntrpt</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Multi Processor Interrupt Enabled (MultiProcIntrpt)<br>1’b0: No<br>1’b1: Yes<br>(coreConsultant parameter:<br>OTG_MULTI_PROC_INTRPT)</td></tr>
<tr><td align="center">NPTxQDepth</td><td align="center">23:22</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Non-periodic Request Queue Depth (NPTxQDepth)<br>2’b00: 2<br>2’b01: 4<br>2’b10: 8<br>Others: Reserved<br>(coreConsultant parameter:<br>OTG_NPERIO_TX_QUEUE_DEPTH)</td></tr>
<tr><td align="center">PTxQDepth</td><td align="center">25:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Host Mode Periodic Request Queue Depth (PTxQDepth)<br>2’b00: 2<br>2’b01: 4<br>2’b10: 8<br>Others: Reserved<br>(coreConsultant parameter:<br>OTG_PERIO_TX_QUEUE_DEPTH)</td></tr>
<tr><td align="center">TknQDepth</td><td align="center">30:26</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Device Mode IN Token Sequence Learning Queue Depth<br>(TknQDepth)<br>Range: 030<br>(coreConsultant parameter: OTG_TOKEN_QUEUE_DEPTH)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GHWCFG3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: User HW Config3 Register<br>Size: 32 bit<br>Address Offset: 004Ch<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GHWCFG3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GHWCFG3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSizeWidth</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Width of Transfer Size Counters (XferSizeWidth)<br>4’b0000: 11 bits<br>4’b0001: 12 bits<br>...<br>4’b1000: 19 bits<br>Others: Reserved<br>(coreConsultant parameter: OTG_TRANS_COUNT_WIDTH)</td></tr>
<tr><td align="center">PktSizeWidth</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Width of Packet Size Counters (PktSizeWidth)<br>3’b000: 4 bits<br>3’b001: 5 bits<br>3’b010: 6 bits<br>3’b011: 7 bits<br>3’b100: 8 bits<br>3’b101: 9 bits<br>3’b110: 10 bits<br>Others: Reserved<br>(coreConsultant parameter: OTG_PACKET_COUNT_WIDTH)</td></tr>
<tr><td align="center">OtgEn</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>OTG Function Enabled (OtgEn)<br>The application uses this bit to indicate the DWC_otg core’s<br>OTG capabilities.<br>1’b0: Not OTG capable<br>1’b1: OTG Capable<br>(coreConsultant parameter: OTG_MODE)</td></tr>
<tr><td align="center">I2CIntSel</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>I2C Selection (I2CIntSel)<br>1’b0: I2C Interface is not available on the core.<br>1’b1: I2C Interface is available on the core.<br>(coreConsultant parameter: OTG_I2C_INTERFACE)</td></tr>
<tr><td align="center">VndctlSupt</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Vendor Control Interface Support (VndctlSupt)<br>1’b0: Vendor Control Interface is not available on the core.<br>1’b1: Vendor Control Interface is available.<br>(coreConsultant parameter: OTG_VENDOR_CTL_INTERFACE)</td></tr>
<tr><td align="center">OptFeature</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Optional Features Removed (OptFeature)<br>Indicates whether the User ID register, GPIO interface ports,<br>and SOF toggle and counter ports were removed For gate count<br>optimization by enabling Remove Optional Features? during<br>coreConsultant configuration.<br>1’b0: No<br>1’b1: Yes<br>(coreConsultant parameter: OTG_RM_OPT_FEATURES)</td></tr>
<tr><td align="center">RstType</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Reset Style For Clocked always Blocks in RTL (RstType)<br>1’b0: Asynchronous reset is used in the core<br>1’b1: Synchronous reset is used in the core<br>(coreConsultant parameter: OTG_SYNC_RESET_TYPE)</td></tr>
<tr><td align="center">DfifoDepth</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>DFIFO Depth (DfifoDepth)<br>This value is in terms of 32-bit words.<br>Minimum value is 32<br>Maximum value is 32,768<br>(coreConsultant parameter: OTG_DFIFO_DEPTH)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/GHWCFG4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: User HW Config4 Register<br>Size: 32 bit<br>Address Offset: 0050h<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GHWCFG4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GHWCFG4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">NumDevPerioEps</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Number of Device Mode Periodic IN Endpoints<br>(NumDevPerioEps)<br>Range: 015<br>(coreConsultant parameter: OTG_NUM_PERIO_EPS)</td></tr>
<tr><td align="center">EnablePwrOpt</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Enable Power Optimization? (EnablePwrOpt)<br>1’b0: No<br>1’b1: Yes<br>(coreConsultant parameter: OTG_EN_PWROPT)</td></tr>
<tr><td align="center">AhbFreq</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Minimum AHB Frequency Less Than 60 MHz (AhbFreq)<br>1’b0: No<br>1’b1: Yes<br>(coreConsultant parameter:<br>OTG_MIN_AHB_FREQ_LESSTHAN_60)</td></tr>
<tr><td align="center">PhyDataWidth</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>UTMI+ PHY/ULPI-to-Internal UTMI+ Wrapper Data Width<br>(PhyDataWidth)<br>When a ULPI PHY is used, an internal wrapper converts ULPI to<br>UTMI+ .<br>2’b00: 8 bits<br>2’b01: 16 bits<br>2’b10: 8/16 bits, software selectable<br>Others: Reserved<br>(coreConsultant parameter: OTG_HSPHY_DWIDTH)</td></tr>
<tr><td align="center">NumCtlEps</td><td align="center">19:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Number of Device Mode Control Endpoints in Addition to<br>Endpoint 0 (NumCtlEps)<br>Range: 0-15<br>(coreConsultant parameter: OTG_NUM_CRL_EPS)</td></tr>
<tr><td align="center">IddgFltr</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>iddig” Filter Enable (IddgFltr)<br>1’b0: No filter<br>1’b1: Filter<br>(coreConsultant parameter: OTG_EN_IDDIG_FILTER)</td></tr>
<tr><td align="center">VBusValidFltr</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>vbus_valid” Filter Enabled (VBusValidFltr)<br>1’b0: No filter<br>1’b1: Filter<br>(coreConsultant parameter: OTG_EN_VBUSVALID_FILTER)</td></tr>
<tr><td align="center">AValidFltr</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>a_valid” Filter Enabled (AValidFltr)<br>1’b0: No filter<br>1’b1: Filter<br>(coreConsultant parameter: OTG_EN_A_VALID_FILTER)</td></tr>
<tr><td align="center">BValidFltr</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>b_valid” Filter Enabled (BValidFltr)<br>1’b0: No filter<br>1’b1: Filter<br>(coreConsultant parameter: OTG_EN_B_VALID_FILTER)</td></tr>
<tr><td align="center">SessEndFltr</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>session_end” Filter Enabled (SessEndFltr)<br>1’b0: No filter<br>1’b1: Filter<br>(coreConsultant parameter: OTG_EN_SESSIONEND_FILTER)</td></tr>
<tr><td align="center">DedFifoMode</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Enable Dedicated Transmit FIFO For device IN Endpoints<br>(DedFifoMode)<br>1’b0 : Dedicated Transmit FIFO Operation not enabled.<br>1’b1 : Dedicated Transmit FIFO Operation enabled.<br>(coreConsultant parameter : OTG_EN_DED_TX_FIFO)</td></tr>
<tr><td align="center">INEps</td><td align="center">29:26</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Number of Device Mode IN Endpoints Including Control<br>Endpoints (INEps)<br>Range 0 -15<br>0 : 1 IN Endpoint<br>1 : 2 IN Endpoints<br>....<br>15 : 16 IN Endpoints</td></tr>
<tr><td align="center">DMA_configuration</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Scatter/Gather DMA configuration<br>1'b0: Non-Scatter/Gather DMA configuration<br>1'b1: Scatter/Gather DMA configuration</td></tr>
<tr><td align="center">DMA</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Scatter/Gather DMA<br>1'b0: Non Dynamic configuration<br>1'b1: Dynamic configuration</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_5</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00068</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_6</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0006C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_7</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00070</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_8</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00074</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_9</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00078</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_10</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0007C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_11</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_12</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00084</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_13</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00088</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_14</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0008C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_15</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_16</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00090</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_16</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_16_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_16_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_17</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00094</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_17</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_17_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_17_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_18</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00098</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_18</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_18_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_18_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_19</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0009C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_19</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_19_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_19_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_20</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_20</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_20_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_20_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_21</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_21</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_21_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_21_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_22</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_22</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_22_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_22_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_23</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_23</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_23_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_23_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_24</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_24</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_24_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_24_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_25</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_25</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_25_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_25_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_26</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_26</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_26_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_26_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_27</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_27</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_27_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_27_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_28</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_28</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_28_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_28_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_29</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_29</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_29_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_29_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_30</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_30</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_30_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_30_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_31</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_31</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_31_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_31_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_32</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_33</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_33</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_33_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_33_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_34</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_34</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_34_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_34_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_35</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_35</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_35_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_35_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_36</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_36</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_36_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_36_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_37</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_37</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_37_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_37_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_38</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_38</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_38_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_38_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_39</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_39</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_39_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_39_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_40</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_40</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_40_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_40_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_41</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_41</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_41_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_41_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R1_42</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E000F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R1_42</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1_42_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1_42_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HPTXFSIZ</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Periodic Transmit FIFO Size Register<br>Size: 32 bit<br>Address Offset: 0100h<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPTXFSIZ_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPTXFSIZ_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Host Periodic TxFIFO Start Address (PTxFStAddr)<br>The power-on reset value of this register is the sum of the Largest Rx Data<br>FIFO Depth and Largest Non-periodic Tx Data FIFO Depth specified during<br>coreConsultant configuration. These parameters are:<br>In shared FIFO operation:-<br>OTG_RX_DFIFO_DEPTH + OTG_TX_NPERIO_DFIFO_DEPTH<br>In dedicated FIFO mode:-<br>OTG_RX_DFIFO_DEPTH + OTG_TX_HNPERIO_DFIFO_DEPTH<br>If Enable Dynamic FIFO Sizing? was deselected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 0), these flops are optimized, and<br>reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant (parameter<br>OTG_DFIFO_DYNAMIC = 1), you can write a new value in this field.<br>Programmed values must not exceed the power-on value Set in<br>coreConsultant.</td></tr>
<tr><td align="center">PTxFSize</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Host Periodic TxFIFO Depth (PTxFSize)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the Largest Host<br>Mode Periodic Tx Data FIFO Depth (parameter<br>OTG_TX_HPERIO_DFIFO_DEPTH) during coreConsultant configuration.<br>If Enable Dynamic FIFO Sizing? was deselected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 0), these flops are optimized, and<br>reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new value in<br>this field. Programmed values must not exceed the power-on value Set in<br>coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0010C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0011C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00124</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00128</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0012C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00130</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00134</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00138</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTXF14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0013C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Transmit FIFO Size Register $i<br>Size: 32 bit<br>Address Offset: [format "0x%x" [expr 0x104 + [expr 0x004 * $i]]]<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTXF14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTXF14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INEPnTxFStAddr</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint FIFOn Transmit RAM Start Address<br>(INEPnTxFStAddr)<br>This field contains the memory start address For IN endpoint<br>Transmit FIFOn (0&lt;n&lt; = 15).<br>The power-on reset value of this register is specified as the<br>Largest Rx Data FIFO Depth (parameter<br>OTG_RX_DFIFO_DEPTH) during coreConsultant configuration.<br>OTG_RX_DFIFO_DEPTH +<br>SUM 0 to n  1 (OTG_DINEP_TXFIFO_DEPTH_n)<br>For example start address of IN endpoint FIFO 1 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>The start address of IN endpoint FIFO 2 is<br>OTG_RX_DFIFO_DEPTH + OTG_DINEP_TXFIFO_DEPTH_0<br>+ OTG_DINEP_TXFIFO_DEPTH_1<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), and you have<br>programmed a new value For RxFIFO depth, you can write that<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
<tr><td align="center">INEPnTxFDep</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint TxFIFO Depth (INEPnTxFDep)<br>This value is in terms of 32-bit words.<br>Minimum value is 16<br>Maximum value is 32,768<br>The power-on reset value of this register is specified as the<br>Largest IN Endpoint FIFO number Depth (parameter<br>OTG_TX_DINEP_DFIFO_DEPTH_n) during coreConsultant<br>configuration (0&lt;n&lt; = 15).<br>If Enable Dynamic FIFO Sizing? was deselected in<br>coreConsultant (parameter OTG_DFIFO_DYNAMIC = 0), these<br>flops are optimized, and reads Return the power-on value.<br>If Enable Dynamic FIFO Sizing? was selected in coreConsultant<br>(parameter OTG_DFIFO_DYNAMIC = 1), you can write a new<br>value in this field. Programmed values must not exceed the<br>power-on value Set in coreConsultant.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00144</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00148</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0014C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00150</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_5</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00154</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_6</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00158</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_7</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0015C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_8</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00160</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_9</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00164</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_10</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00168</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_11</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0016C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_12</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00170</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_13</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00174</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_14</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00178</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_15</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_16</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0017C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_16</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_16_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_16_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_17</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_17</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_17_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_17_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_18</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00184</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_18</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_18_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_18_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_19</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00188</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_19</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_19_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_19_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_20</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0018C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_20</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_20_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_20_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_21</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00190</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_21</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_21_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_21_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_22</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00194</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_22</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_22_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_22_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_23</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00198</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_23</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_23_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_23_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_24</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0019C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_24</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_24_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_24_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_25</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_25</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_25_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_25_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_26</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_26</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_26_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_26_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_27</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_27</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_27_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_27_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_28</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_28</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_28_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_28_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_29</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_29</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_29_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_29_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_30</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_30</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_30_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_30_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_31</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_31</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_31_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_31_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_32</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_33</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_33</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_33_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_33_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_34</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_34</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_34_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_34_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_35</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_35</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_35_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_35_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_36</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_36</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_36_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_36_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_37</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_37</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_37_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_37_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_38</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_38</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_38_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_38_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_39</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_39</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_39_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_39_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_40</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_40</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_40_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_40_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_41</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_41</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_41_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_41_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_42</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_42</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_42_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_42_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_43</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_43</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_43_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_43_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_44</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_44</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_44_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_44_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_45</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_45</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_45_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_45_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_46</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_46</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_46_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_46_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_47</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_47</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_47_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_47_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_48</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E001FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_48</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_48_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_48_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_49</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00200</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_49</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_49_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_49_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_50</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00204</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_50</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_50_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_50_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_51</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00208</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_51</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_51_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_51_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_52</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0020C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_52</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_52_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_52_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_53</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00210</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_53</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_53_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_53_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_54</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00214</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_54</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_54_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_54_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_55</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00218</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_55</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_55_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_55_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_56</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0021C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_56</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_56_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_56_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_57</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00220</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_57</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_57_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_57_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_58</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00224</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_58</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_58_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_58_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_59</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00228</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_59</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_59_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_59_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_60</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0022C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_60</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_60_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_60_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_61</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00230</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_61</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_61_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_61_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_62</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00234</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_62</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_62_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_62_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_63</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00238</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_63</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_63_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_63_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_64</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0023C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_64</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_64_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_64_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_65</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00240</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_65</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_65_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_65_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_66</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00244</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_66</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_66_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_66_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_67</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00248</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_67</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_67_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_67_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_68</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0024C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_68</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_68_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_68_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_69</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00250</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_69</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_69_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_69_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_70</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00254</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_70</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_70_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_70_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_71</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00258</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_71</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_71_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_71_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_72</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0025C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_72</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_72_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_72_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_73</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00260</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_73</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_73_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_73_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_74</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00264</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_74</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_74_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_74_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_75</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00268</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_75</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_75_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_75_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_76</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0026C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_76</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_76_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_76_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_77</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00270</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_77</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_77_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_77_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_78</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00274</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_78</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_78_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_78_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_79</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00278</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_79</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_79_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_79_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_80</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0027C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_80</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_80_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_80_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_81</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00280</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_81</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_81_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_81_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_82</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00284</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_82</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_82_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_82_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_83</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00288</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_83</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_83_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_83_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_84</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0028C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_84</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_84_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_84_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_85</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00290</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_85</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_85_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_85_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_86</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00294</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_86</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_86_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_86_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_87</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00298</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_87</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_87_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_87_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_88</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0029C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_88</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_88_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_88_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_89</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_89</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_89_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_89_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_90</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_90</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_90_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_90_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_91</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_91</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_91_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_91_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_92</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_92</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_92_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_92_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_93</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_93</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_93_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_93_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_94</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_94</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_94_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_94_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_95</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_95</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_95_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_95_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_96</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_96</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_96_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_96_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_97</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_97</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_97_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_97_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_98</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_98</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_98_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_98_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_99</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_99</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_99_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_99_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_100</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_100_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_100_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_101</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_101</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_101_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_101_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_102</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_102</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_102_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_102_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_103</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_103</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_103_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_103_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_104</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_104_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_104_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_105</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_105</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_105_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_105_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_106</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_106</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_106_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_106_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_107</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_107</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_107_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_107_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_108</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_108_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_108_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_109</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_109</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_109_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_109_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_110</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_110_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_110_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_111</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_111</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_111_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_111_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_112</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E002FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_112</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_112_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_112_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_113</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00300</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_113</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_113_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_113_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00304</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_114</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_114_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_114_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_115</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00308</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_115</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_115_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_115_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_116</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0030C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_116</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_116_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_116_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_117</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00310</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_117</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_117_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_117_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00314</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_118</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_118_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_118_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_119</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00318</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_119</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_119_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_119_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0031C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_120</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_120_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_120_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_121</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00320</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_121</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_121_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_121_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_122</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00324</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_122</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_122_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_122_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_123</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00328</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_123</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_123_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_123_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_124</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0032C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_124</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_124_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_124_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_125</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00330</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_125</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_125_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_125_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_126</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00334</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_126</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_126_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_126_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_127</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00338</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_127</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_127_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_127_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_128</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0033C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_128</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_128_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_128_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_129</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00340</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_129</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_129_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_129_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_130</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00344</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_130</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_130_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_130_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_131</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00348</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_131</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_131_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_131_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_132</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0034C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_132</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_132_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_132_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_133</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00350</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_133</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_133_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_133_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_134</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00354</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_134</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_134_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_134_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_135</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00358</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_135</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_135_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_135_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_136</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0035C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_136</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_136_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_136_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_137</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00360</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_137</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_137_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_137_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_138</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00364</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_138</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_138_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_138_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_139</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00368</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_139</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_139_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_139_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0036C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_140</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_140_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_140_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_141</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00370</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_141</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_141_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_141_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_142</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00374</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_142</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_142_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_142_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_143</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00378</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_143</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_143_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_143_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_144</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0037C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_144</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_144_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_144_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_145</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00380</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_145</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_145_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_145_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_146</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00384</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_146</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_146_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_146_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_147</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00388</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_147</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_147_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_147_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_148</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0038C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_148</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_148_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_148_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_149</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00390</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_149</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_149_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_149_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_150</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00394</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_150</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_150_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_150_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_151</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00398</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_151</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_151_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_151_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_152</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0039C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_152</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_152_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_152_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_153</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_153</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_153_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_153_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_154</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_154</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_154_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_154_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_155</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_155</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_155_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_155_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_156</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_156</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_156_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_156_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_157</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_157</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_157_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_157_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_158</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_158</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_158_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_158_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_159</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_159</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_159_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_159_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_160</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_160</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_160_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_160_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_161</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_161</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_161_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_161_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_162</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_162</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_162_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_162_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_163</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_163</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_163_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_163_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_164</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_164</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_164_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_164_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_165</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_165</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_165_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_165_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_166</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_166</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_166_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_166_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_167</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_167</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_167_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_167_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_168</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_168</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_168_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_168_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_169</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_169</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_169_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_169_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_170</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_170</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_170_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_170_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_171</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_171</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_171_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_171_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_172</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_172</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_172_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_172_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_173</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_173</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_173_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_173_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_174</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_174</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_174_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_174_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R2_175</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E003F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R2_175</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2_175_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2_175_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCFG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00400</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Configuration Register<br>Size: 32 bit<br>Address Offset: 0400h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCFG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCFG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FSLSPclkSel</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>FS/LS PHY Clock Select (FSLSPclkSel)<br>When the core is in FS Host mode<br>2’b00: PHY clock is running at 30/60 MHz<br>2’b01: PHY clock is running at 48 MHz<br>Others: Reserved<br>When the core is in LS Host mode<br>2’b00: PHY clock is running at 30/60 MHz. When the<br>UTMI+/ULPI PHY Low Power mode is not selected, use<br>30/60 MHz.<br>2’b01: PHY clock is running at 48 MHz. When the UTMI+<br>PHY Low Power mode is selected, use 48MHz If the PHY<br>supplies a 48 MHz clock during LS mode.<br>2’b10: PHY clock is running at 6 MHz. In USB 1.1 FS mode,<br>use 6 MHz when the UTMI+ PHY Low Power mode is<br>selected and the PHY supplies a 6 MHz clock during LS<br>mode. If you select a 6 MHz clock during LS mode, you must<br>do a soft reset.<br>2’b11: Reserved</td></tr>
<tr><td align="center">FSLSSupp</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>FS- and LS-Only Support (FSLSSupp)<br>The application uses this bit to control the core’s enumeration<br>speed. Using this bit, the application can make the core<br>enumerate as a FS host, even If the connected device supports<br>HS traffic. Do not make changes to this field after initial<br>programming.<br>1’b0: HS/FS/LS, based on the maximum speed supported by<br>the connected device<br>1’b1: FS/LS-only, even If the connected device can support<br>HS</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HFIR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00404</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Frame Interval Register<br>Size: 32 bit<br>Address Offset: 0404h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HFIR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HFIR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FrInt</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Interval (FrInt)<br>The value that the application programs to this field specifies<br>the interval between two consecutive SOFs (FS) or micro-<br>SOFs (HS) or Keep-Alive tokens (HS). This field contains the<br>number of PHY clocks that constitute the required frame<br>interval. The Default value Set in this field For a FS operation<br>when the PHY clock frequency is 60 MHz. The application can<br>write a value to this register only after the Port Enable bit of the<br>Host Port Control and Status register (HPRT.PrtEnaPort) has<br>been Set. If no value is programmed, the core calculates the<br>value based on the PHY clock specified in the FS/LS PHY<br>Clock Select field of the Host Configuration register<br>(HCFG.FSLSPclkSel). Do not change the value of this field<br>after the initial configuration.<br>125 s * (PHY clock frequency For HS)<br>1 ms * (PHY clock frequency For FS/LS)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HFNUM</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00408</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Frame Number/Frame Time Remaining Register<br>Size: 32 bit<br>Address Offset: 0408h<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HFNUM_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HFNUM_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FrNum</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Frame Number (FrNum)<br>This field increments when a new SOF is transmitted on the<br>USB, and is reset to 0 when it reaches 16’h3FFF.<br>This field is writable only If Remove Optional Features? was not<br>selected in coreConsultant (OTG_RM_OTG_FEATURES = 0).<br>Otherwise, reads Return the Frame number value.</td></tr>
<tr><td align="center">FrRem</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Frame Time Remaining (FrRem)<br>Indicates the amount of time remaining in the current<br>microframe (HS) or Frame (FS/LS), in terms of PHY clocks. This<br>field decrements on each PHY clock. When it reaches zero, this<br>field is reloaded with the value in the Frame Interval register and<br>a new SOF is transmitted on the USB.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HPTXSTS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00410</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Periodic Transmit FIFO/Queue Status Register<br>Size: 32 bit<br>Address Offset: 0410h<br>Read/Write Access: read-only/read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPTXSTS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPTXSTS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PTxFSpcAvail</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Periodic Transmit Request Queue Space Available<br>(PTxQSpcAvail)<br>Indicates the number of free locations available to be written in<br>the Periodic Transmit Request Queue. This queue holds both IN<br>and OUT requests.<br>8’h0: Periodic Transmit Request Queue is full<br>8’h1: 1 location available<br>8’h2: 2 locations available<br>n: n locations available (0  n  8)<br>Others: Reserved</td></tr>
<tr><td align="center">PTxQSpcAvail</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Periodic Transmit Request Queue Space Available<br>(PTxQSpcAvail)<br>Indicates the number of free locations available to be written in<br>the Periodic Transmit Request Queue. This queue holds both IN<br>and OUT requests.<br>8’h0: Periodic Transmit Request Queue is full<br>8’h1: 1 location available<br>8’h2: 2 locations available<br>n: n locations available (0  n  8)<br>Others: Reserved</td></tr>
<tr><td align="center">PTxQTop</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Top of the Periodic Transmit Request Queue (PTxQTop)<br>This indicates the Entry in the Periodic Tx Request Queue that is<br>currently being processes by the MAC.<br>This register is used For debugging.<br>Bit [31]: Odd/Even (micro)Frame<br>- 1’b0: send in even (micro)Frame<br>- 1’b1: send in odd (micro)Frame<br>Bits [30:27]: Channel/endpoint number<br>Bits [26:25]: Type<br>- 2’b00: IN/OUT<br>- 2’b01: Zero-length packet<br>- 2’b10: CSPLIT<br>- 2’b11: Disable channel command<br>Bit [24]: Terminate (last Entry For the selected<br>channel/endpoint)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HAINT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00414</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host All Channels Interrupt Register<br>Size: 32 bit<br>Address Offset: 0414h<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HAINT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HAINT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">HAINT</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Channel Interrupts (HAINT)<br>One bit per channel: Bit 0 For Channel 0, bit 15 For Channel 15</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HAINTMSK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00418</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host All Channels Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: 0418h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HAINTMSK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HAINTMSK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">HAINTMsk</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Interrupt Mask (HAINTMsk)<br>One bit per channel: Bit 0 For channel 0, bit 15 For channel 15</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HPRT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00440</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Port Control and Status Register<br>Size: 32 bit<br>Address Offset: 0440h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPRT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPRT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtConnSts</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Port Connect Status (PrtConnSts)<br>0: No device is attached to the port.<br>1: A device is attached to the port.</td></tr>
<tr><td align="center">PrtConnDet</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Connect Detected (PrtConnDet)<br>The core sets this bit when a device connection is detected<br>to trigger an interrupt to the application using the Host Port<br>Interrupt bit of the Core Interrupt register (GINTSTS.PrtInt).<br>The application must write a 1 to this bit to clear the<br>interrupt.</td></tr>
<tr><td align="center">PrtEna</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Enable (PrtEna)<br>A port is enabled only by the core after a reset sequence,<br>and is disabled by an overcurrent condition, a disconnect<br>condition, or by the application clearing this bit. The<br>application cannot Set this bit by a register write. It can only<br>clear it to disable the port. This bit does not trigger any<br>interrupt to the application.<br>1’b0: Port disabled<br>1’b1: Port enabled</td></tr>
<tr><td align="center">PrtEnChng</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Enable/Disable Change (PrtEnChng)<br>The core sets this bit when the status of the Port Enable bit<br>[2] of this register changes.</td></tr>
<tr><td align="center">PrtOvrCurrAct</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Port Overcurrent Active (PrtOvrCurrAct)<br>Indicates the overcurrent condition of the port.<br>1’b0: No overcurrent condition<br>1’b1: Overcurrent condition</td></tr>
<tr><td align="center">PrtOvrCurrChng</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Overcurrent Change (PrtOvrCurrChng)<br>The core sets this bit when the status of the Port<br>Overcurrent Active bit (bit 4) in this register changes.</td></tr>
<tr><td align="center">PrtRes</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Resume (PrtRes)<br>The application sets this bit to drive resume signaling on the<br>port. The core continues to drive the resume signal until the<br>application clears this bit.<br>If the core detects a USB remote wakeup sequence, as<br>indicated by the Port Resume/Remote Wakeup Detected<br>Interrupt bit of the Core Interrupt register<br>(GINTSTS.WkUpInt), the core starts driving resume<br>signaling without application intervention and clears this bit<br>when it detects a disconnect condition. The read value of<br>this bit indicates whether the core is currently driving<br>resume signaling.<br>1’b0: No resume driven<br>1’b1: Resume driven</td></tr>
<tr><td align="center">PrtSusp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Suspend (PrtSusp)<br>The application sets this bit to put this port in Suspend<br>mode. The core only stops sending SOFs when this is Set.<br>To stop the PHY clock, the application must Set the Port<br>Clock Stop bit, which asserts the suspend input pin of the<br>PHY.<br>The read value of this bit reflects the current suspend status<br>of the port. This bit is cleared by the core after a remote<br>wakeup signal is detected or the application sets the Port<br>Reset bit or Port Resume bit in this register or the<br>Resume/Remote Wakeup Detected Interrupt bit or<br>Disconnect Detected Interrupt bit in the Core Interrupt<br>register (GINTSTS.WkUpInt or GINTSTS.DisconnInt,<br>respectively).<br>1’b0: Port not in Suspend mode<br>1’b1: Port in Suspend mode</td></tr>
<tr><td align="center">PrtRst</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Reset (PrtRst)<br>When the application sets this bit, a reset sequence is<br>started on this port. The application must time the reset<br>period and clear this bit after the reset sequence is<br>complete.<br>1’b0: Port not in reset<br>1’b1: Port in reset<br>The application must leave this bit Set For at least a<br>minimum duration mentioned below to start a reset on the<br>port. The application can leave it Set For another 10 ms in<br>addition to the required minimum duration, before clearing<br>the bit, even though there is no maximum limit Set by the<br>USB standard.<br>High speed: 50 ms<br>Full speed/Low speed: 10 ms</td></tr>
<tr><td align="center">PrtLnSts</td><td align="center">11:10</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Port Line Status (PrtLnSts)<br>Indicates the current logic level USB data lines<br>Bit [10]: Logic level of D+<br>Bit [11]: Logic level of D</td></tr>
<tr><td align="center">PrtPwr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Power (PrtPwr)<br>The application uses this field to control power to this port,<br>and the core clears this bit on an overcurrent condition.<br>1’b0: Power off<br>1’b1: Power on</td></tr>
<tr><td align="center">PrtTstCtl</td><td align="center">16:13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Test Control (PrtTstCtl)<br>The application writes a nonzero value to this field to put the<br>port into a Test mode, and the corresponding pattern is<br>signaled on the port.<br>4’b0000: Test mode disabled<br>4’b0001: Test_J mode<br>4’b0010: Test_K mode<br>4’b0011: Test_SE0_NAK mode<br>4’b0100: Test_Packet mode<br>4’b0101: Test_Force_Enable<br>Others: Reserved</td></tr>
<tr><td align="center">PrtSpd</td><td align="center">18:17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Port Speed (PrtSpd)<br>Indicates the speed of the device attached to this port.<br>2’b00: High speed<br>2’b01: Full speed<br>2’b10: Low speed<br>2’b11: Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00444</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00448</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0044C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00450</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00454</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_5</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00458</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_6</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0045C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_7</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00460</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_8</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00464</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_9</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00468</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_10</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0046C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_11</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00470</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_12</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00474</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_13</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00478</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_14</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0047C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_15</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_16</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00480</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_16</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_16_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_16_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_17</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00484</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_17</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_17_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_17_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_18</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00488</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_18</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_18_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_18_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_19</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0048C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_19</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_19_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_19_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_20</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00490</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_20</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_20_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_20_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_21</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00494</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_21</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_21_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_21_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_22</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00498</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_22</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_22_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_22_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_23</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0049C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_23</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_23_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_23_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_24</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_24</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_24_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_24_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_25</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_25</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_25_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_25_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_26</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_26</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_26_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_26_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_27</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_27</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_27_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_27_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_28</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_28</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_28_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_28_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_29</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_29</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_29_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_29_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_30</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_30</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_30_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_30_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_31</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_31</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_31_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_31_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_32</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_33</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_33</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_33_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_33_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_34</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_34</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_34_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_34_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_35</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_35</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_35_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_35_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_36</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_36</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_36_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_36_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_37</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_37</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_37_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_37_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_38</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_38</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_38_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_38_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_39</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_39</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_39_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_39_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_40</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_40</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_40_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_40_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_41</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_41</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_41_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_41_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_42</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_42</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_42_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_42_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_43</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_43</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_43_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_43_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_44</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_44</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_44_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_44_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_45</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_45</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_45_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_45_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R3_46</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E004F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R3_46</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3_46_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3_46_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00500</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00504</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00508</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0050C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00510</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00514</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00518</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_0 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0051C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_0 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00520</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00524</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00528</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0052C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00530</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00534</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00538</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_1 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0053C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_1 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00540</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00544</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00548</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0054C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00550</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00554</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00558</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_2 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0055C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_2 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00560</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00564</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00568</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0056C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00570</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00574</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00578</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_3 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0057C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_3 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00580</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00584</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00588</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0058C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00590</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00594</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00598</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_4 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0059C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_4 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_5 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_5 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_6 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_6 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_7 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E005FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_7 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00600</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00604</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00608</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0060C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00610</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00614</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00618</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_8 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0061C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_8 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00620</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00624</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00628</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0062C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00630</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00634</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00638</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_9 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0063C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_9 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00640</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00644</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00648</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0064C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00650</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00654</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00658</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_10 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0065C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_10 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00660</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00664</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00668</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0066C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00670</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00674</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00678</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_11 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0067C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_11 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00680</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00684</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00688</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0068C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00690</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00694</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00698</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_12 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0069C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_12 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_13 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_13 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_14 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_14 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCCHAR15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Characteristics Register<br>Size: 32 bit<br>Address Offset:[format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCCHAR15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCCHAR15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Indicates the maximum packet size of the associated endpoint.</td></tr>
<tr><td align="center">EPNum</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Number (EPNum)<br>Indicates the endpoint number on the device serving as the data<br>source or sink.</td></tr>
<tr><td align="center">EPDir</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Direction (EPDir)<br>Indicates whether the transaction is IN or OUT.<br>1’b0: OUT<br>1’b1: IN</td></tr>
<tr><td align="center">LSpdDev</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Low-Speed Device (LSpdDev)<br>This field is Set by the application to indicate that this channel is<br>communicating to a low-speed device.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Type (EPType)<br>Indicates the transfer type selected.<br>2’b00: Control<br>2’b01: Isochronous<br>2’b10: Bulk<br>2’b11: Interrupt</td></tr>
<tr><td align="center">EC</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Multi Count (MC) / Error Count (EC)<br>When the Split Enable bit of the Host Channel-n Split Control<br>register (HCSPLTn.SpltEna) is reset (1’b0), this field indicates to<br>the host the number of transactions that must be executed per<br>microframe For this periodic endpoint. For non periodic transfers,<br>this field is used only in DMA mode, and specifies the number<br>packets to be fetched For this channel before the internal DMA<br>engine changes arbitration.<br>2’b00: Reserved This field yields undefined results.<br>2’b01: 1 transaction<br>2’b10: 2 transactions to be issued For this endpoint per<br>microframe<br>2’b11: 3 transactions to be issued For this endpoint per<br>microframe<br>When HCSPLTn.SpltEna is Set (1’b1), this field indicates the<br>number of immediate retries to be performed For a periodic split<br>transactions on transaction errors. This field must be Set to at<br>least 2’b01.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">28:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>This field selects the specific device serving as the data source<br>or sink.</td></tr>
<tr><td align="center">OddFrm</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Odd Frame (OddFrm)<br>This field is Set (reset) by the application to indicate that the<br>OTG host must perform a transfer in an odd (micro)Frame. This<br>field is applicable For only periodic (isochronous and interrupt)<br>transactions.<br>1’b0: Even (micro)Frame<br>1’b1: Odd (micro)Frame</td></tr>
<tr><td align="center">ChDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Disable (ChDis)<br>The application sets this bit to stop transmitting/receiving data<br>on a channel, even before the transfer For that channel is<br>complete. The application must wait For the Channel Disabled<br>interrupt before treating the channel as disabled.</td></tr>
<tr><td align="center">ChEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Enable (ChEna)<br>This field is Set by the application and cleared by the OTG host.<br>1’b0: Channel disabled<br>1’b1: Channel enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCSPLT15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Split Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: Read-Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCSPLT15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCSPLT15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PrtAddr</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Port Address (PrtAddr)<br>This field is the port number of the recipient transaction<br>translator.</td></tr>
<tr><td align="center">HubAddr</td><td align="center">13:7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Hub Address (HubAddr)<br>This field holds the device address of the transaction translator’s<br>hub.</td></tr>
<tr><td align="center">XactPos</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Position (XactPos)<br>This field is used to determine whether to send all, first, middle,<br>or last payloads with each OUT transaction.<br>2’b11: All. This is the entire data payload is of this transaction<br>(which is less than or equal to 188 bytes).<br>2’b10: Begin. This is the first data payload of this transaction<br>(which is larger than 188 bytes).<br>2’b00: Mid. This is the middle payload of this transaction<br>(which is larger than 188 bytes).<br>2’b01: End. This is the last payload of this transaction (which<br>is larger than 188 bytes).</td></tr>
<tr><td align="center">CompSplt</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Complete Split (CompSplt)<br>The application sets this field to request the OTG host to perform<br>a complete split transaction.</td></tr>
<tr><td align="center">SpltEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Split Enable (SpltEna)<br>The application sets this field to indicate that this channel is<br>enabled to perform split transactions.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINT15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINT15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINT15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed (XferCompl)<br>Transfer completed normally without any errors.</td></tr>
<tr><td align="center">ChHltd</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted (ChHltd)<br>Indicates the transfer completed abnormally either because of<br>any USB transaction error or in response to disable request by<br>the application.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>This is generated only in Internal DMA mode when there is an<br>AHB error during AHB read/write. The application can read the<br>corresponding channel’s DMA address register to get the error<br>address.</td></tr>
<tr><td align="center">STALL</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt (STALL)</td></tr>
<tr><td align="center">NAK</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt (NAK)</td></tr>
<tr><td align="center">ACK</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt (ACK)</td></tr>
<tr><td align="center">NYET</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt (NYET)</td></tr>
<tr><td align="center">XactErr</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error (XactErr)<br>Indicates one of the following errors occurred on the USB.<br>CRC check failure<br>Timeout<br>Bit stuff error<br>False EOP</td></tr>
<tr><td align="center">BblErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error (BblErr)</td></tr>
<tr><td align="center">FrmOvrun</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun (FrmOvrun)</td></tr>
<tr><td align="center">DataTglErr</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error (DataTglErr)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCINTMSK15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCINTMSK15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCINTMSK15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Mask (XferComplMsk)</td></tr>
<tr><td align="center">ChHltdMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Channel Halted Mask (ChHltdMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">StallMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Response Received Interrupt Mask (StallMsk)</td></tr>
<tr><td align="center">NakMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Response Received Interrupt Mask (NakMsk)</td></tr>
<tr><td align="center">AckMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ACK Response Received/Transmitted Interrupt Mask (AckMsk)</td></tr>
<tr><td align="center">NyetMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Response Received Interrupt Mask (NyetMsk)</td></tr>
<tr><td align="center">XactErrMsk</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transaction Error Mask (XactErrMsk)</td></tr>
<tr><td align="center">BblErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error Mask (BblErrMsk)</td></tr>
<tr><td align="center">FrmOvrunMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Frame Overrun Mask (FrmOvrunMsk)</td></tr>
<tr><td align="center">DataTglErrMsk</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Data Toggle Error Mask (DataTglErrMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCTSIZ15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCTSIZ15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCTSIZ15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">18:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>For an OUT, this field is the number of data bytes the host sends<br>during the transfer.<br>For an IN, this field is the buffer size that the application has<br>Reserved For the transfer. The application is expected to<br>program this field as an integer multiple of the maximum packet<br>size For IN transactions (periodic and non-periodic).<br>The width of this counter is specified as Width of Transfer Size<br>Counters during coreConsultant configuration (parameter<br>OTG_TRANS_COUNT_WIDTH).</td></tr>
<tr><td align="center">PktCnt</td><td align="center">28:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is programmed by the application with the expected<br>number of packets to be transmitted (OUT) or received (IN).<br>The host decrements this count on every successful<br>transmission or reception of an OUT/IN packet. Once this count<br>reaches zero, the application is interrupted to indicate normal<br>completion.<br>The width of this counter is specified as Width of Packet<br>Counters during coreConsultant configuration (parameter<br>OTG_PACKET_COUNT_WIDTH).</td></tr>
<tr><td align="center">Pid</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>PID (Pid)<br>The application programs this field with the type of PID to use For<br>the initial transaction. The host maintains this field For the rest of<br>the transfer.<br>2’b00: DATA0<br>2’b01: DATA2<br>2’b10: DATA1<br>2’b11: MDATA (non-control)/SETUP (control)</td></tr>
<tr><td align="center">DoPng</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Do Ping (DoPng)<br>This bit is used only For OUT transfers.<br>Setting this field to 1 directs the host to do PING protocol.<br>Note: Do not Set this bit For IN transfers. If this bit is Set For<br>for IN transfers it disables the channel.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/HCDMA15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Host Channel $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $hc_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HCDMA15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HCDMA15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_1_15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_1_15 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_1_15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_1_15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R4_2_15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E006FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Host Channel R4_2_15 DMA Address Reserved Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4_2_15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4_2_15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DCFG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00800</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Configuration Register<br>Size: 32 bit<br>Address Offset: 0800h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DCFG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DCFG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">DevSpd</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Speed (DevSpd)<br>Indicates the speed at which the application requires the core to<br>enumerate, or the maximum speed the application can support.<br>However, the actual bus speed is determined only after the chirp<br>sequence is completed, and is based on the speed of the USB<br>host to which the core is connected. See “Device Initialization”<br>on page 295 For details.<br>2’b00: High speed (USB 2.0 PHY clock is 30 MHz or 60 MHz)<br>2’b01: Full speed (USB 2.0 PHY clock is 30 MHz or 60 MHz)<br>2’b10: Low speed (USB 1.1 transceiver clock is 6 MHz). If<br>you select 6 MHz LS mode, you must do a soft reset.<br>2’b11: Full speed (USB 1.1 transceiver clock is 48 MHz)</td></tr>
<tr><td align="center">NZStsOUTHShk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Non-Zero-Length Status OUT Handshake (NZStsOUTHShk)<br>The application can use this field to select the handshake the<br>core sends on receiving a nonzero-length data packet during the<br>OUT transaction of a control transfer’s Status stage.<br>1’b1: Send a STALL handshake on a nonzero-length status<br>OUT transaction and do not send the received OUT packet to<br>the application.<br>1’b0: Send the received OUT packet to the application (zerolength<br>or nonzero-length) and send a handshake based on<br>the NAK and STALL bits For the endpoint in the Device<br>Endpoint Control register.</td></tr>
<tr><td align="center">DevAddr</td><td align="center">10:4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device Address (DevAddr)<br>The application must program this field after every SetAddress<br>control command.</td></tr>
<tr><td align="center">PerFrInt</td><td align="center">12:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Periodic Frame Interval (PerFrInt)<br>Indicates the time within a (micro)frame at which the application<br>must be notified using the End Of Periodic Frame Interrupt. This<br>can be used to determine If all the isochronous traffic For that<br>(micro)frame is complete.<br>2’b00: 80% of the (micro)frame interval<br>2’b01: 85%<br>2’b10: 90%<br>2’b11: 95%</td></tr>
<tr><td align="center">EPMisCnt</td><td align="center">22:18</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint Mismatch Count (EPMisCnt)<br>This field is valid only in shared FIFO operation.<br>The application programs this filed with a count that determines<br>when the core generates an Endpoint Mismatch interrupt<br>(GINTSTS.EPMis). The core loads this value into an internal<br>counter and decrements it. The counter is reloaded whenever<br>there is a match or when the counter expires. The width of this<br>counter depends on the depth of the Token Queue.</td></tr>
<tr><td align="center">DescDMA</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Enable Scatter/gather DMA in device mode (DescDMA).<br>When the Scatter/Gather DMA option selected during<br>configuration of the RTL, the application can Set this bit during<br>initialization to enable the Scatter/Gather DMA operation.<br>NOTE: This bit must be modified only once after a reset.<br>The following combinations are available For programming:<br>GAHBCFG.DMAEn=0,DCFG.DescDMA=0 =&gt; Slave mode<br>GAHBCFG.DMAEn=0,DCFG.DescDMA=1 =&gt; Invalid<br>GAHBCFG.DMAEn=1,DCFG.DescDMA=0 =&gt; Buffered DMA<br>mode<br>GAHBCFG.DMAEn=1,DCFG.DescDMA=1 =&gt;<br>Scatter/Gather DMA mode</td></tr>
<tr><td align="center">PerSchIntvl</td><td align="center">25:24</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Periodic Scheduling Interval (PerSchIntvl)<br>PerSchIntvl must be programmed only For Scatter/Gather DMA<br>mode.<br>Description: This field specifies the amount of time the Internal<br>DMA engine must allocate For fetching periodic IN endpoint data.<br>Based on the number of periodic endpoints, this value must be<br>specified as 25,50 or 75% of (micro)frame.<br>When any periodic endpoints are active, the internal DMA<br>engine allocates the specified amount of time in fetching<br>periodic IN endpoint data .<br>When no periodic endpoints are active, Then the internal<br>DMA engine services non-periodic endpoints, ignoring this<br>field.<br>After the specified time within a (micro)frame, the DMA switches<br>to fetching For non-periodic endpoints.<br>2'b00: 25% of (micro)frame.<br>2'b01: 50% of (micro)frame.<br>2'b10: 75% of (micro)frame.<br>2'b11: Reserved.<br>Reset: 2'b00<br>Access: read-write</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DCTL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00804</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control Register<br>Size: 32 bit<br>Address Offset: 0804h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DCTL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DCTL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RmtWkUpSig</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Remote Wakeup Signaling (RmtWkUpSig)<br>When the application sets this bit, the core initiates remote<br>signaling to wake up the USB host. The application must Set this<br>bit to instruct the core to exit the Suspend state. As specified in<br>the USB 2.0 specification, the application must clear this bit<br>115 ms after setting it.</td></tr>
<tr><td align="center">SftDiscon</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Soft Disconnect (SftDiscon)<br>The application uses this bit to signal the DWC_otg core to do a<br>soft disconnect. As long as this bit is Set, the host does not see<br>that the device is connected, and the device does not receive<br>signals on the USB. The core stays in the disconnected state<br>until the application clears this bit.<br>The minimum duration For which the core must keep this bit Set<br>is specified in Table 5-46.<br>1’b0: Normal operation. When this bit is cleared after a soft<br>disconnect, the core drives the phy_opmode_o signal on the<br>UTMI+ to 2’b00, which generates a device connect event to<br>the USB host. When the device is reconnected, the USB host<br>restarts device enumeration.<br>1’b1: The core drives the phy_opmode_o signal on the<br>UTMI+ to 2’b01, which generates a device disconnect event<br>to the USB host.</td></tr>
<tr><td align="center">GNPINNakSts</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Global Non-periodic IN NAK Status (GNPINNakSts)<br>1'b0: A handshake is sent out based on the data availability<br>in the transmit FIFO.<br>1'b1: A NAK handshake is sent out on all non-periodic IN<br>endpoints, irrespective of the data availability in the transmit<br>FIFO.</td></tr>
<tr><td align="center">GOUTNakSts</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Global OUT NAK Status (GOUTNakSts)<br>1’b0: A handshake is sent based on the FIFO Status and the<br>NAK and STALL bit settings.<br>1’b1: No data is written to the RxFIFO, irrespective of space<br>availability. Sends a NAK handshake on all packets, except<br>on SETUP transactions. All isochronous OUT packets are<br>dropped.</td></tr>
<tr><td align="center">TstCtl</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Test Control (TstCtl)<br>3’b000: Test mode disabled<br>3’b001: Test_J mode<br>3’b010: Test_K mode<br>3’b011: Test_SE0_NAK mode<br>3’b100: Test_Packet mode<br>3’b101: Test_Force_Enable<br>Others: Reserved</td></tr>
<tr><td align="center">SGNPInNak</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set Global Non-periodic IN NAK (SGNPInNak)<br>A write to this field sets the Global Non-periodic IN NAK.The<br>application uses this bit to send a NAK handshake on all nonperiodic<br>IN endpoints. The core can also Set this bit when a<br>timeout condition is detected on a non-periodic endpoint in<br>shared FIFO operation.<br>The application must Set this bit only after making sure that the<br>Global IN NAK Effective bit in the Core Interrupt Register<br>(GINTSTS.GINNakEff) is cleared</td></tr>
<tr><td align="center">CGNPInNak</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear Global Non-periodic IN NAK (CGNPInNak)<br>A write to this field clears the Global Non-periodic IN NAK.</td></tr>
<tr><td align="center">SGOUTNak</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set Global OUT NAK (SGOUTNak)<br>A write to this field sets the Global OUT NAK.<br>The application uses this bit to send a NAK handshake on all<br>OUT endpoints.<br>The application must Set the this bit only after making sure that<br>the Global OUT NAK Effective bit in the Core Interrupt Register<br>(GINTSTS.GOUTNakEff) is cleared.</td></tr>
<tr><td align="center">CGOUTNak</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear Global OUT NAK (CGOUTNak)<br>A write to this field clears the Global OUT NAK.</td></tr>
<tr><td align="center">PWROnPrgDone</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Power-On Programming Done (PWROnPrgDone)<br>The application uses this bit to indicate that register<br>programming is completed after a wake-up from Power Down<br>mode.</td></tr>
<tr><td align="center">GMC</td><td align="center">14:13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Global Multi Count (GMC)<br>GMC must be programmed only once after initialization.<br>Applicable only For Scatter/Gather DMA mode. This indicates the<br>number of packets to be serviced For that end point before<br>moving to the next end point. It is only For non-periodic end<br>points.<br>2’b00: Invalid.<br>2’b01: 1 packet.<br>2’b10: 2 packets.<br>2’b11: 3 packets.<br>When Scatter/Gather DMA mode is disabled, this field is<br>reserved. and reads 2’b00.</td></tr>
<tr><td align="center">IgnrFrmNum</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Ignore Frame number For Isochronous End points (IgnrFrmNum)<br>Do NOT program IgnrFrmNum bit to 1'b1 when the core is<br>operating in threshold mode.<br>Note:
When Scatter/Gather DMA mode is enabled this feature is not applicable
to High Speed, High bandwidth transfers. When this bit is enabled,
there must be only one packet per descriptor.<br>0: The core transmits the packets only in the frame number in which they are intended to be transmitted.<br>1: The core ignores the frame number, sending packets immediately as the packets are ready.<br>In
Scatter/Gather DMA mode, if this bit is enabled, the packets are not
flushed when a ISOC IN token is received for an elapsed frame.<br>When
Scatter/Gather DMA mode is disabled, this field is used by the
application to enable periodic transfer interrupt. The application can
program periodic endpoint transfers for multiple (micro)frames.<br>0:
periodic transfer interrupt feature is disabled, application needs to
program transfers for periodic endpoints every (micro)frame<br>1:
periodic transfer interrupt feature is enabled, application can program
transfers for multiple (micro)frames for periodic endpoints.<br>In non
Scatter/Gather DMA mode the application will receive transfer complete
interrupt after transfers for multiple (micro)frames are completed.</td></tr>
<tr><td align="center">NakOnBble</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK on Babble Error (NakOnBble)<br>Set NAK automatically on babble (NakOnBble). The core sets NAK automatically for the<br>endpoint on which babble is received.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DSTS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00808</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Status Register<br>Size: 32 bit<br>Address Offset: 0808h<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DSTS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DSTS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">SuspSts</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Suspend Status (SuspSts)<br>In Device mode, this bit is Set as long as a Suspend condition is<br>detected on the USB. The core enters the Suspended state<br>when there is no activity on the phy_line_state_i signal For an<br>extended period of time. The core comes out of the suspend:<br>When there is any activity on the phy_line_state_i signal<br>When the application writes to the Remote Wakeup Signaling<br>bit in the Device Control register (DCTL.RmtWkUpSig).</td></tr>
<tr><td align="center">EnumSpd</td><td align="center">2:1</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Enumerated Speed (EnumSpd)<br>Indicates the speed at which the DWC_otg core has come up<br>after speed detection through a chirp sequence.<br>2’b00: High speed (PHY clock is running at 30 or 60 MHz)<br>2’b01: Full speed (PHY clock is running at 30 or 60 MHz)<br>2’b10: Low speed (PHY clock is running at 6 MHz)<br>2’b11: Full speed (PHY clock is running at 48 MHz)<br>Low speed is not supported For devices using a UTMI+ PHY.</td></tr>
<tr><td align="center">ErrticErr</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Erratic Error (ErrticErr)<br>The core sets this bit to report any erratic errors<br>(phy_rxvalid_i/phy_rxvldh_i or phy_rxactive_i is asserted For at<br>least 2 ms, due to PHY error) seen on the UTMI+ .<br>Due to erratic errors, the DWC_otg core goes into Suspended<br>state and an interrupt is generated to the application with Early<br>Suspend bit of the Core Interrupt register (GINTSTS.ErlySusp).<br>If the early suspend is asserted due to an erratic error, the<br>application can only perform a soft disconnect recover.</td></tr>
<tr><td align="center">SOFFN</td><td align="center">21:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Frame or Microframe Number of the Received SOF (SOFFN)<br>When the core is operating at high speed, this field contains a<br>microframe number. When the core is operating at full or low<br>speed, this field contains a Frame number.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPMSK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00810</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint Common Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: 0810h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPMSK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPMSK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPMSK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00814</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name:Device OUT Endpoint Common Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: 0814h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPMSK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPMSK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DAINT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00818</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name:Device All Endpoints Interrupt Register<br>Size: 32 bit<br>Address Offset: 0818h<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DAINT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DAINT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">InEpInt</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>IN Endpoint Interrupt Bits (InEpInt)<br>One bit per IN Endpoint:<br>Bit 0 For IN endpoint 0, bit 15 For endpoint 15</td></tr>
<tr><td align="center">OutEPInt</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>OUT Endpoint Interrupt Bits (OutEPInt)<br>One bit per OUT endpoint:<br>Bit 16 For OUT endpoint 0, bit 31 For OUT endpoint 15</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DAINTMSK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0081C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name:Device All Endpoints Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: 081Ch<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DAINTMSK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DAINTMSK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">InEpMsk</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN EP Interrupt Mask Bits (InEpMsk)<br>One bit per IN Endpoint:<br>Bit 0 For IN EP 0, bit 15 For IN EP 15</td></tr>
<tr><td align="center">OutEpMsk</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT EP Interrupt Mask Bits (OutEpMsk)<br>One per OUT Endpoint:<br>Bit 16 For OUT EP 0, bit 31 For OUT EP 15</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DTKNQR1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00820</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name:Device IN Token Sequence Learning Queue Read Register 1<br>Size: 32 bit<br>Address Offset: 0820h<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DTKNQR1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DTKNQR1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DVBUSDIS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00828</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device VBUS Discharge Time Register<br>Size: 32 bit<br>Address Offset: 0828h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DVBUSDIS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DVBUSDIS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">DVBUSDis</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device VBUS Discharge Time (DVBUSDis)<br>Specifies the VBUS discharge time after VBUS pulsing during<br>SRP. This value equals:<br>VBUS discharge time in PHY clocks / 1, 024<br>The value you use depends whether the PHY is operating at<br>30 MHz (16-bit data width) or 60 MHz (8-bit data width).<br>Depending on your VBUS load, this value can need<br>adjustment.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DVBUSPULSE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0082C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device VBUS Pulsing Time Register<br>Size: 32 bit<br>Address Offset: 082Ch<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DVBUSPULSE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DVBUSPULSE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">DVBUSPulse</td><td align="center">11:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Device VBUS Pulsing Time (DVBUSPulse)<br>Specifies the VBUS pulsing time during SRP. This value equals:<br>VBUS pulsing time in PHY clocks / 1, 024<br>The value you use depends whether the PHY is operating at 30<br>MHz (16-bit data width) or 60 MHz (8-bit data width).</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DTHRCTL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00830</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Threshold Control Register<br>Size: 32 bit<br>Address Offset: 0830h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DTHRCTL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DTHRCTL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">NonISOThrEn</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Non-ISO IN Endpoints Threshold Enable. (NonISOThrEn)<br>When this bit is Set, the core enables thresholding For Non Isochronous IN<br>endpoints.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">ISOThrEn</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>ISO IN Endpoints Threshold Enable. (ISOThrEn)<br>When this bit is Set, the core enables thresholding For isochronous IN<br>endpoints.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">TxThrLen</td><td align="center">10:2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transmit Threshold Length (TxThrLen)<br>This field specifies Transmit thresholding size in DWORDS.<br>This field specifies the amount of data in bytes to be in the corresponding<br>endpoint transmit FIFO, before the core can start transmit on the USB.<br>The threshold length has to be at least eight DWORDS. This field controls<br>both isochronous and non-isochronous IN endpoint thresholds.<br>The recommended value For ThrLen is to be the same as the programmed<br>AHB Burst Length (GAHBCFG.HBstLen).<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">RxThrEn</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Receive Threshold Enable (RxThrEn)<br>When this bit is Set, the core enables thresholding in the receive direction.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">RxThrLen</td><td align="center">25:17</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Receive Threshold Length (RxThrLen)<br>This field specifies Receive thresholding size in DWORDS.<br>This field also specifies the amount of data received on the USB before the<br>core can start transmitting on the AHB.<br>The threshold length has to be at least eight DWORDS.<br>The recommended value For ThrLen is to be the same as the programmed<br>AHB Burst Length (GAHBCFG.HBstLen).<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">ArbPrkEn</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Arbiter Parking Enable (ArbPrkEn)<br>This bit controls internal DMA arbiter parking For IN endpoints. When<br>thresholding is enabled and this bit is Set to one, Then the arbiter parks on the<br>IN endpoint For which there is a token received on the USB. This is done to<br>avoid getting into underrun conditions. By Default the parking is enabled.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEMPMSK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00834</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint FIFO Empty Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: 0834h<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEMPMSK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEMPMSK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">InEpTxfEmpMsk</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN EP Tx FIFO Empty Interrupt Mask Bits (InEpTxfEmpMsk)<br>These bits acts as mask bits For DIEPINTn.<br>TxFEmp interrupt One bit per IN Endpoint:<br>Bit 0 For IN EP 0, bit 15 For IN EP 15<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">RESERVED</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RESERVED</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DEACHINT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00838</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name:Device Each Endpoints Interrupt Register<br>Size: 32 bit<br>Address Offset: 0838h<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DEACHINT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DEACHINT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">EchInEpInt</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Each IN Endpoint Interrupt Bits (EchInEpInt)<br>One bit per IN Endpoint:<br>Bit 0 For IN endpoint 0, bit 15 For endpoint 15</td></tr>
<tr><td align="center">EchOutEPInt</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Each OUT Endpoint Interrupt Bits (EchOutEPInt)<br>One bit per OUT endpoint:<br>Bit 16 For OUT endpoint 0, bit 31 For OUT endpoint 15</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DEACHINTMSK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0083C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name:Device Each Endpoints Interrupt Mask Register<br>Size: 32 bit<br>Address Offset: 083Ch<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DEACHINTMSK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DEACHINTMSK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">EchInEpMsk</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN EP Interrupt Mask Bits (EchInEpMsk)<br>One bit per IN Endpoint:<br>Bit 0 For IN EP 0, bit 15 For IN EP 15</td></tr>
<tr><td align="center">EchOutEpMsk</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT EP Interrupt Mask Bits (EchOutEpMsk)<br>One per OUT Endpoint:<br>Bit 16 For OUT EP 0, bit 31 For OUT EP 15</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00840</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00844</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00848</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0084C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00850</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00854</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00858</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0085C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00860</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00864</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00868</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0086C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00870</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00874</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00878</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPEACHINTMSK15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0087C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPEACHINTMSK15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPEACHINTMSK15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error Mask (AHBErrMsk)</td></tr>
<tr><td align="center">TimeOUTMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition Mask (TimeOUTMsk)<br>(Non-isochronous endpoints)</td></tr>
<tr><td align="center">INTknTXFEmpMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO Empty Mask<br>(INTknTXFEmpMsk)</td></tr>
<tr><td align="center">INTknEPMisMsk</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token received with EP Mismatch Mask (INTknEPMisMsk)</td></tr>
<tr><td align="center">INEPNakEffMsk</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective Mask (INEPNakEffMsk)</td></tr>
<tr><td align="center">TxfifoUndrnMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun Mask (TxfifoUndrnMsk)</td></tr>
<tr><td align="center">BNAInIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BNAInIntrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00880</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00884</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00888</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0088C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00890</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00894</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00898</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0089C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPEACHINTMSK15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Each OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $deach_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPEACHINTMSK15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPEACHINTMSK15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferComplMsk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt Mask (XferComplMsk)</td></tr>
<tr><td align="center">EPDisbldMsk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt Mask (EPDisbldMsk)</td></tr>
<tr><td align="center">AHBErrMsk</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErrMsk)</td></tr>
<tr><td align="center">SetUPMsk</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done Mask (SetUPMsk)<br>Applies to control endpoints only.</td></tr>
<tr><td align="center">OUTTknEPdisMsk</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received when Endpoint Disabled Mask<br>(OUTTknEPdisMsk)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received Mask<br>(Back2BackSETup)<br>Applies to control OUT endpoints only.</td></tr>
<tr><td align="center">OutPktErrMsk</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error Mask (OutPktErrMsk)</td></tr>
<tr><td align="center">BnaOutIntrMsk</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA interrupt Mask (BnaOutIntrMsk)</td></tr>
<tr><td align="center">BbleErrMsk</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Babble Error interrupt Mask (BbleErrMsk)</td></tr>
<tr><td align="center">NAKMsk</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK interrupt Mask (NAKMsk)</td></tr>
<tr><td align="center">NYETMsk</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET interrupt Mask (NYETMsk)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_5</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_6</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_7</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_8</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_9</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_10</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_11</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_12</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_13</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_14</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R5_15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E008F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R5_15</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5_15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5_15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00900</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00904</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00908</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0090C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00910</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00914</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 0 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00920</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00924</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00928</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0092C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00930</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00934</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 1 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00940</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00944</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00948</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0094C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00950</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00954</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 2 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00960</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00964</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00968</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0096C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00970</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00974</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 3 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00980</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00984</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00988</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E0098C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00990</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00994</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 4 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 5</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 5</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 5 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 6</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 6</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 6 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 7</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 7</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E009F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 7 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A00</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A04</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 8</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A08</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A0C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 8</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 8 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A20</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A24</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 9</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A28</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A2C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 9</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A30</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A34</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 9 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A40</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A44</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 10</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A48</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A4C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 10</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A50</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A54</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 10 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A60</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A64</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 11</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A68</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A6C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 11</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A70</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A74</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 11 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A80</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A84</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 12</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A88</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A8C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 12</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A90</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00A94</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 12 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AA0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AA4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 13</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AA8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AAC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 13</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AB0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AB4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 13 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AC0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AC4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 14</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AC8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00ACC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 14</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AD0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AD4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 14 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPCTL15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AE0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control IN Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPCTL15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPCTL15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Maximum Packet Size (MPS)<br>Applies to IN and OUT endpoints.<br>The application must program this field with the maximum packet size For<br>the current logical endpoint.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">NextEp</td><td align="center">14:11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Next Endpoint (NextEp)<br>Applies to non-periodic IN endpoints only.<br>Indicates the endpoint number to be fetched after the data For the current<br>endpoint is fetched. The core can access this field, even when the<br>Endpoint Enable (EPEna) bit is not Set. This field is not valid in Slave<br>mode.<br>Note: This field is valid only For Shared FIFO operations.</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always SET to 1, indicating that control endpoint 0 is always<br>active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based on the<br>FIFO status<br>1’b1: The core is transmitting NAK handshakes on this endpoint.<br>When this bit is Set, either by the application or core, the core stops<br>transmitting data, even If there is data available in the TxFIFO.<br>Irrespective of this bit’s setting, the core always responds to SETUP data<br>packets with an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 00 For control.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when a<br>SETUP token is received For this endpoint. If a NAK bit, Global Nonperiodic<br>IN NAK, or Global OUT NAK is Set along with this bit, the STALL<br>bit takes priority.</td></tr>
<tr><td align="center">TxFNum</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>TxFIFO Number (TxFNum)<br>For Shared FIFO operation, this value is always Set to 0, indicating<br>that control IN endpoint 0 data is always written in the Non-Periodic<br>Transmit FIFO.<br>For Dedicated FIFO operation, this value is Set to the FIFO number<br>that is assigned to IN Endpoint 0.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of NAK<br>handshakes on an endpoint. The core can also Set this bit For an<br>endpoint after a SETUP packet is received on that endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disable (EPDis)<br>The application sets this bit to stop transmitting data on an endpoint,<br>even before the transfer For that endpoint is complete. The application<br>must wait For the Endpoint Disabled interrupt before treating the endpoint<br>as disabled. The core clears this bit before setting the Endpoint Disabled<br>Interrupt. The application must Set this bit only If Endpoint Enable is<br>already Set For this endpoint.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For IN endpoints this bit<br>indicates that the descriptor structure and data buffer with data ready<br>to transmit is setup.<br>When Scatter/Gather DMA mode is disabledsuch as in bufferpointer<br>based DMA modethis bit indicates that data is ready to be<br>transmitted on the endpoint.<br>The core clears this bit before setting the following interrupts on this<br>endpoint:<br>Endpoint Disabled<br>Transfer Completed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R6_15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AE4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 15</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6_15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6_15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPINT15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AE8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPINT15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPINT15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">TimeOUT</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Timeout Condition (TimeOUT)<br>In shared TX FIFO mode, applies to non-isochronous IN<br>endpoints only.<br>In dedicated FIFO mode, applies only to Control IN<br>endpoints.<br>In Scatter/Gather DMA mode, the TimeOUT interrupt is not<br>asserted.<br>Indicates that the core has detected a timeout condition on the<br>USB For the last IN token on this endpoint.</td></tr>
<tr><td align="center">INTknTXFEmp</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received When TxFIFO is Empty (INTknTXFEmp)<br>Applies to non-periodic IN endpoints only.<br>Indicates that an IN token was received when the associated<br>TxFIFO (periodic/non-periodic) was empty. This interrupt is<br>asserted on the endpoint For which the IN token was received.</td></tr>
<tr><td align="center">INTknEPMis</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Token Received with EP Mismatch (INTknEPMis)<br>Applies to non-periodic IN endpoints only.<br>Indicates that the data in the top of the non-periodic TxFIFO<br>belongs to an endpoint other than the one For which the IN token<br>was received. This interrupt is asserted on the endpoint For<br>which the IN token was received.</td></tr>
<tr><td align="center">INEPNakEff</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>IN Endpoint NAK Effective (INEPNakEff)<br>Applies to periodic IN endpoints only.<br>This bit can be cleared when the application clears the IN<br>endpoint NAK by writing to DIEPCTLn.CNAK.<br>This interrupt indicates that the core has sampled the NAK bit<br>Set (either by the application or by the core). The interrupt<br>indicates that the IN endpoint NAK bit Set by the application has<br>taken effect in the core.<br>This interrupt does not guarantee that a NAK handshake is sent<br>on the USB. A STALL bit takes priority over a NAK bit.</td></tr>
<tr><td align="center">TxFEmp</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Transmit FIFO Empty (TxFEmp)<br>This bit is valid only For IN Endpoints<br>This interrupt is asserted when the TxFIFO For this endpoint is<br>either half or completely empty. The half or completely empty<br>status is determined by the TxFIFO Empty Level bit in the Core<br>AHB Configuration register (GAHBCFG.NPTxFEmpLvl)).</td></tr>
<tr><td align="center">TxfifoUndrn</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Fifo Underrun (TxfifoUndrn)<br>Applies to IN endpoints Only<br>This bit is valid only If OTG_EN_DED_TX_FIFO = 1 and<br>thresholding is enabled. The core generates this interrupt when<br>it detects a transmit FIFO underrun condition For this endpoint.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R7_15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AEC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 15</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7_15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7_15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPTSIZ15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AF0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device IN Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]sscresults.sol.net.in<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPTSIZ15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPTSIZ15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet from the<br>external memory is written to the TxFIFO.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">20:19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>Indicates the total number of USB packets that constitute the<br>Transfer Size amount of data For endpoint 0.<br>This field is decremented every time a packet (maximum size or<br>short packet) is read from the TxFIFO.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DIEPDMA15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00AF4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device IN Endpoint 15 DMA Address Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIEPDMA15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIEPDMA15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B00</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B04</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B08</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B0C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B18</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B1C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B20</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B24</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B28</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B2C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B30</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B34</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B38</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B3C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B40</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B44</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B48</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B4C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B50</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B54</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B58</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B5C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B60</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B64</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B68</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B6C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B70</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B74</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B78</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B7C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B80</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B84</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B88</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B8C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B90</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 5</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B94</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B98</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 5</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00B9C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BA0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BA4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BA8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BAC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 6</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BB0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BB4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 6</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BB8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BBC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BC0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BC4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BC8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 7</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BCC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BD0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 7</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BD4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BD8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BDC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BE0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BE4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 8</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BE8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BEC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 8</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BF0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BF4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BF8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00BFC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C00</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 9</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C04</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C08</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 9</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C0C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C18</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C1C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 10</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C20</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C24</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 10</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C28</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C2C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C30</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C34</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C38</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 11</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C3C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C40</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 11</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C44</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C48</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C4C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C50</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C54</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 12</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C58</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C5C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 12</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C60</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C64</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C68</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C6C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C70</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 13</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C74</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C78</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 13</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C7C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C80</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C84</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C88</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C8C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 14</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C90</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C94</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 14</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C98</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00C9C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00CA0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPCTL15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00CA4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device Control OUT Endpoint $i Control Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPCTL15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPCTL15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MPS</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Maximum Packet Size (MPS)<br>The maximum packet size For control OUT endpoint 0 is the<br>same as what is programmed in control IN Endpoint 0.<br>2’b00: 64 bytes<br>2’b01: 32 bytes<br>2’b10: 16 bytes<br>2’b11: 8 bytes</td></tr>
<tr><td align="center">USBActEP</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>USB Active Endpoint (USBActEP)<br>This bit is always Set to 1, indicating that a control endpoint 0 is<br>always active in all configurations and interfaces.</td></tr>
<tr><td align="center">NAKSts</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>NAK Status (NAKSts)<br>Indicates the following:<br>1’b0: The core is transmitting non-NAK handshakes based<br>on the FIFO status.<br>1’b1: The core is transmitting NAK handshakes on this<br>endpoint.<br>When either the application or the core sets this bit, the core<br>stops receiving data, even If there is space in the RxFIFO to<br>accommodate the incoming packet. Irrespective of this bit’s<br>setting, the core always responds to SETUP data packets with<br>an ACK handshake.</td></tr>
<tr><td align="center">EPType</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Type (EPType)<br>Hardcoded to 2’b00 For control.</td></tr>
<tr><td align="center">Snp</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Snoop Mode (Snp)<br>This bit configures the endpoint to Snoop mode. In Snoop mode,<br>the core does not check the correctness of OUT packets before<br>transferring them to application memory.</td></tr>
<tr><td align="center">Stall</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>STALL Handshake (Stall)<br>The application can only Set this bit, and the core clears it, when<br>a SETUP token is received For this endpoint. If a NAK bit or<br>Global OUT NAK is Set along with this bit, the STALL bit takes<br>priority. Irrespective of this bit’s setting, the core always<br>responds to SETUP data packets with an ACK handshake.</td></tr>
<tr><td align="center">CNAK</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Clear NAK (CNAK)<br>A write to this bit clears the NAK bit For the endpoint.</td></tr>
<tr><td align="center">SNAK</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">write-only</td><td><br>Set NAK (SNAK)<br>A write to this bit sets the NAK bit For the endpoint.<br>Using this bit, the application can control the transmission of<br>NAK handshakes on an endpoint. The core can also Set bit on a<br>Transfer Completed interrupt, or after a SETUP is received on<br>the endpoint.</td></tr>
<tr><td align="center">EPDis</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">read-only</td><td><br>Endpoint Disable (EPDis)<br>The application cannot disable control OUT endpoint 0.</td></tr>
<tr><td align="center">EPEna</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Enable (EPEna)<br>When Scatter/Gather DMA mode is enabled, For OUT<br>endpoints this bit indicates that the descriptor structure and<br>data buffer to receive data is setup.<br>When Scatter/Gather DMA mode is disabled(such as For<br>buffer-pointer based DMA mode)this bit indicates that the<br>application has allocated the memory to start receiving data<br>from the USB.<br>The core clears this bit before setting any of the following<br>interrupts on this endpoint:<br>SETUP Phase Done<br>Endpoint Disabled<br>Transfer Completed<br>Note: In DMA mode, this bit must be Set For the core to transfer<br>SETUP data packets into memory.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R8_15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00CA8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 15</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPINT15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00CAC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Interrupt Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPINT15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPINT15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferCompl</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Completed Interrupt (XferCompl)<br>Applies to IN and OUT endpoints.<br>When Scatter/Gather DMA mode is enabled<br>- For IN endpoint this field indicates that the requested data<br>from the descriptor is moved from external system memory<br>to internal FIFO.<br>- For OUT endpoint this field indicates that the requested<br>data from the internal FIFO is moved to external system<br>memory. This interrupt is generated only when the<br>corresponding endpoint descriptor is closed, and the IOC<br>bit For the corresponding descriptor is Set.<br>When Scatter/Gather DMA mode is disabled, this field<br>indicates that the programmed transfer is complete on the<br>AHB as well as on the USB, For this endpoint.</td></tr>
<tr><td align="center">EPDisbld</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Endpoint Disabled Interrupt (EPDisbld)<br>Applies to IN and OUT endpoints.<br>This bit indicates that the endpoint is disabled per the<br>application’s request.</td></tr>
<tr><td align="center">AHBErr</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>AHB Error (AHBErr)<br>Applies to IN and OUT endpoints.<br>This is generated only in Internal DMA mode when there is an<br>AHB error during an AHB read/write. The application can read<br>the corresponding endpoint DMA address register to get the<br>error address.</td></tr>
<tr><td align="center">SetUp</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Phase Done (SetUp)<br>Applies to control OUT endpoints only.<br>Indicates that the SETUP phase For the control endpoint is<br>complete and no more back-to-back SETUP packets were<br>received For the current control transfer. On this interrupt, the<br>application can decode the received SETUP data packet.</td></tr>
<tr><td align="center">OUTTknEPdis</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Token Received When Endpoint Disabled (OUTTknEPdis)<br>Applies only to control OUT endpoints.<br>Indicates that an OUT token was received when the endpoint<br>was not yet enabled. This interrupt is asserted on the endpoint<br>For which the OUT token was received.</td></tr>
<tr><td align="center">StsPhseRcvd</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Status Phase Received For Control Write (StsPhseRcvd)<br>This interrupt is valid only For Control OUT endpoints and only in<br>Scatter Gather DMA mode.<br>This interrupt is generated only after the core has transferred all<br>the data that the host has sent during the data phase of a control<br>write transfer, to the system memory buffer.<br>The interrupt indicates to the application that the host has<br>switched from data phase to the status phase of a Control Write<br>transfer. The application can use this interrupt to ACK or STALL<br>the Status phase, after it has decoded the data phase. This is<br>applicable only in Case of Scatter Gather DMA mode.</td></tr>
<tr><td align="center">Back2BackSETup</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Back-to-Back SETUP Packets Received (Back2BackSETup)<br>Applies to Control OUT endpoints only.<br>This bit indicates that the core has received more than three<br>back-to-back SETUP packets For this particular endpoint. For<br>information about handling this interrupt,</td></tr>
<tr><td align="center">OutPktErr</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>OUT Packet Error (OutPktErr)<br>Applies to OUT endpoints Only<br>This interrupt is valid only when OTG_EN_DED_TX_FIFO = 1<br>and thresholding is enabled. This interrupt is asserted when the<br>core detects an overflow or a CRC error For non-Isochronous<br>OUT packet.<br>Dependencies: This bit is valid only For when OTG_EN_DED_TX_FIFO == 1</td></tr>
<tr><td align="center">BNAIntr</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>BNA (Buffer Not Available) Interrupt (BNAIntr)<br>This bit is valid only when Scatter/Gather DMA mode is enabled.<br>The core generates this interrupt when the descriptor accessed<br>is not ready For the Core to process, such as Host busy or DMA<br>done</td></tr>
<tr><td align="center">PktDrpSts</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Drop Status (PktDrpSts)<br>This bit indicates to the application that an ISOC OUT packet has been dropped. This<br>bit does not have an associated mask bit and does not generate an interrupt.<br>Dependency: This bit is valid in non Scatter/Gather DMA mode when periodic transfer<br>interrupt feature is selected.</td></tr>
<tr><td align="center">BbleErr</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (BbleErr)<br>The core generates this interrupt when babble is received for the endpoint.</td></tr>
<tr><td align="center">NAKIntrpt</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NAK Interrupt (NAKInterrupt)<br>The core generates this interrupt when a NAK is transmitted or received by the device.<br>In case of isochronous IN endpoints the interrupt gets generated when a zero length<br>packet is transmitted due to un-availability of data in the TXFifo.</td></tr>
<tr><td align="center">NYETIntrpt</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>NYET Interrupt (NYETIntrpt)<br>The core generates this interrupt when a NYET response is transmitted for a non isochronous OUT endpoint.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R9_15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00CB0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved 15</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPTSIZ15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00CB4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Transfer Size Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPTSIZ15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPTSIZ15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XferSize</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Transfer Size (XferSize)<br>Indicates the transfer size in bytes For endpoint 0. The core<br>interrupts the application only after it has exhausted the transfer<br>size amount of data. The transfer size can be Set to the<br>maximum packet size of the endpoint, to be interrupted at the<br>end of each packet.<br>The core decrements this field every time a packet is read from<br>the RxFIFO and written to the external memory.</td></tr>
<tr><td align="center">PktCnt</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Packet Count (PktCnt)<br>This field is decremented to zero after a packet is written into the<br>RxFIFO.</td></tr>
<tr><td align="center">SUPCnt</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>SETUP Packet Count (SUPCnt)<br>This field specifies the number of back-to-back SETUP data<br>packets the endpoint can receive.<br>2’b01: 1 packet<br>2’b10: 2 packets<br>2’b11: 3 packets</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMA15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00CB8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i DMA Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMA15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMA15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/DOEPDMAB15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00CBC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: Device OUT Endpoint $i Buffer Address Register<br>Size: 32 bit<br>Address Offset: [format "0x%x" $de_offset]<br>Read/Write Access: read-only</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DOEPDMAB15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DOEPDMAB15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00CFD</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D01</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D05</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D09</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D0D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_5</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_6</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_6_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_7</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_7_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D19</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_8</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D1D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_9</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_10</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D21</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_10</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_10_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_10_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_11</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D25</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_11</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_11_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_11_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D29</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_12</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_13</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D2D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_13</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_13_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_13_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_14</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D31</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_14</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_14_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_14_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_15</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D35</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_15</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_15_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_15_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_16</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D39</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_16</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_16_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_16_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_17</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D3D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_17</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_17_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_17_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_18</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D41</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_18</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_18_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_18_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_19</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D45</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_19</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_19_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_19_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_20</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D49</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_20</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_20_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_20_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_21</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D4D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_21</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_21_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_21_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_22</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D51</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_22</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_22_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_22_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_23</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D55</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_23</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_23_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_23_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_24</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D59</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_24</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_24_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_24_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_25</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D5D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_25</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_25_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_25_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_26</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D61</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_26</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_26_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_26_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_27</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D65</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_27</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_27_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_27_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_28</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D69</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_28</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_28_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_28_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_29</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D6D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_29</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_29_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_29_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_30</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D71</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_30</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_30_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_30_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_31</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D75</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_31</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_31_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_31_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D79</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_32</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_33</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D7D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_33</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_33_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_33_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_34</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D81</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_34</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_34_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_34_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_35</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D85</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_35</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_35_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_35_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_36</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D89</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_36</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_36_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_36_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_37</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D8D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_37</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_37_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_37_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_38</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D91</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_38</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_38_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_38_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_39</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D95</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_39</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_39_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_39_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_40</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D99</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_40</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_40_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_40_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_41</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00D9D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_41</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_41_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_41_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_42</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DA1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_42</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_42_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_42_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_43</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DA5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_43</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_43_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_43_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_44</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DA9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_44</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_44_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_44_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_45</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DAD</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_45</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_45_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_45_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_46</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DB1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_46</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_46_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_46_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_47</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DB5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_47</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_47_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_47_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_48</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DB9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_48</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_48_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_48_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_49</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DBD</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_49</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_49_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_49_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_50</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DC1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_50</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_50_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_50_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_51</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DC5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_51</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_51_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_51_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_52</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DC9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_52</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_52_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_52_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_53</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DCD</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_53</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_53_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_53_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_54</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DD1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_54</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_54_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_54_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_55</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DD5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_55</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_55_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_55_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_56</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DD9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_56</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_56_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_56_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_57</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DDD</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_57</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_57_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_57_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_58</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DE1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_58</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_58_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_58_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_59</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DE5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_59</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_59_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_59_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_60</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DE9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_60</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_60_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_60_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_61</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DED</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_61</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_61_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_61_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_62</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DF1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_62</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_62_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_62_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_63</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DF5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_63</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_63_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_63_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/R10_64</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00DF9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reserved Register R10_64</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R10_64_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R10_64_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>USBDEV/REGS/PCGCCTL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x40E00E00</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Name: OTG Control and Status Register<br>Size: 32 bit<br>Address offset: E00h<br>Read/Write Access: Read/Write</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCGCCTL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCGCCTL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">StopPclk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Stop Pclk (StopPclk)<br>The application sets this bit to stop the PHY clock (phy_clk)<br>when the USB is suspended, the session is not valid, or the<br>device is disconnected. The application clears this bit when the<br>USB is resumed or a new session starts.</td></tr>
<tr><td align="center">GateHclk</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Gate Hclk (GateHclk)<br>The application sets this bit to gate hclk to modules other than<br>the AHB Slave and Master and wakeup logic when the USB is<br>suspended or the session is not valid. The application clears this<br>bit when the USB is resumed or a new session starts.</td></tr>
<tr><td align="center">RstPdwnModule</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">read-write</td><td><br>Reset Power-Down Modules (RstPdwnModule)<br>This bit is valid only in Partial Power-Down mode. The<br>application sets this bit when the power is turned off. The<br>application clears this bit after the power is turned on and the<br>PHY clock is up.</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_0</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E00000...0x40DFFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 0</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_1</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E01000...0x40E00FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 1</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_2</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E02000...0x40E01FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 2</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_3</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E03000...0x40E02FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 3</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_4</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E04000...0x40E03FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 4</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_5</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E05000...0x40E04FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 5</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_6</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E06000...0x40E05FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 6</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_7</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E07000...0x40E06FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 7</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_8</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E08000...0x40E07FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 8</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_9</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E09000...0x40E08FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 9</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_10</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E0A000...0x40E09FFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 10</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_11</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E0B000...0x40E0AFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 11</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_12</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E0C000...0x40E0BFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 12</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_13</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E0D000...0x40E0CFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 13</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_14</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E0E000...0x40E0DFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 14</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DWC_otg_DFIFO_15</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x40E0F000...0x40E0EFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Data FIFO Access Register Map 15</td></tr></tbody></table></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">STATIC_CS0</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x41000000...0x413FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">CS(0) memory space for 8-bit parallel memory interface for e.g. NAND flash, LCD controller</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('STATIC_CS0_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="STATIC_CS0_blocks" style="display: none;"></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">STATIC_CS1</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x41400000...0x417FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">CS(1) memory space for 8-bit parallel memory interface for e.g. NAND flash, LCD controller</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('STATIC_CS1_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="STATIC_CS1_blocks" style="display: none;"></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">STATIC</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x41C00000...0x41CFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Control/status registers for 8-bit parallel memory interface for e.g. NAND flash, LCD controller</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('STATIC_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="STATIC_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>STATIC/ID</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x41C00000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>ID</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ID_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ID_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">VERSION_ID</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Version ID register (returns 0x00000003 for current core version).</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>STATIC/Static Bank 0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x41C00004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Static Bank 0 register (Boot Bank) Reset val of top nibble dependant upon boot inputs</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Static%20Bank%200_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Static Bank 0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">width</td><td align="center">31:30</td><td align="center">0x0</td><td align="center">R/W</td><td>External memory width 00 8bit, 01 16bit, 10 32bit</td></tr>
<tr><td align="center">read_burst_enable</td><td align="center">29</td><td align="center">0x0</td><td align="center">R/W</td><td>Enable read bursts speeds access by not raising /CS between accesses</td></tr>
<tr><td align="center">buffer_present</td><td align="center">27:26</td><td align="center">0x0</td><td align="center">R/W</td><td>External 245 buffer required for this bank<br>,write_start</td></tr>
<tr><td align="center">turn_cycle</td><td align="center">25:24</td><td align="center">0x3</td><td align="center">R/W</td><td>Turn around time in AHB clocks. /CS high time.</td></tr>
<tr><td align="center">write_burst_enable</td><td align="center">22:21</td><td align="center">0x0</td><td align="center">R/W</td><td>Enable write bursts speeds access by not raising /CS between accesses<br>,Reserved</td></tr>
<tr><td align="center">write_pulse</td><td align="center">13:8</td><td align="center">0x0</td><td align="center">R/W</td><td>The number of clocks into the write cycle that the /WE strobes rise.<br>,reserved</td></tr>
<tr><td align="center">delay_oe</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>Specifies whether OE should be delayed 1 clock from CS<br>,reserved</td></tr>
<tr><td align="center">read_cycle</td><td align="center">5:0</td><td align="center">0xF</td><td align="center">R/W</td><td>The number of clocks that /CS is low for in the read cycle.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>STATIC/Static Bank 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x41C00008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Static Bank 1 register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Static%20Bank%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Static Bank 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">width</td><td align="center">31:30</td><td align="center">0x0</td><td align="center">R/W</td><td>External memory width 00 8bit, 01 16bit, 10 32bit</td></tr>
<tr><td align="center">read_burst_enable</td><td align="center">29</td><td align="center">0x0</td><td align="center">R/W</td><td>Enable read bursts speeds access by not raising /CS between accesses</td></tr>
<tr><td align="center">buffer_present</td><td align="center">27:26</td><td align="center">0x0</td><td align="center">R/W</td><td>External 245 buffer required for this bank<br>,write_start</td></tr>
<tr><td align="center">turn_cycle</td><td align="center">25:24</td><td align="center">0x3</td><td align="center">R/W</td><td>Turn around time in AHB clocks. /CS high time.</td></tr>
<tr><td align="center">write_burst_enable</td><td align="center">22:21</td><td align="center">0x0</td><td align="center">R/W</td><td>Enable write bursts speeds access by not raising /CS between accesses<br>,Reserved</td></tr>
<tr><td align="center">write_pulse</td><td align="center">13:8</td><td align="center">0x0</td><td align="center">R/W</td><td>The number of clocks into the write cycle that the /WE strobes rise.<br>,reserved</td></tr>
<tr><td align="center">delay_oe</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>Specifies whether OE should be delayed 1 clock from CS<br>,reserved</td></tr>
<tr><td align="center">read_cycle</td><td align="center">5:0</td><td align="center">0xF</td><td align="center">R/W</td><td>The number of clocks that /CS is low for in the read cycle.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>STATIC/Static Bank 2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x41C0000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Static Bank 2 register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Static%20Bank%202_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Static Bank 2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">width</td><td align="center">31:30</td><td align="center">0x0</td><td align="center">R/W</td><td>External memory width 00 8bit, 01 16bit, 10 32bit</td></tr>
<tr><td align="center">read_burst_enable</td><td align="center">29</td><td align="center">0x0</td><td align="center">R/W</td><td>Enable read bursts speeds access by not raising /CS between accesses</td></tr>
<tr><td align="center">buffer_present</td><td align="center">27:26</td><td align="center">0x0</td><td align="center">R/W</td><td>External 245 buffer required for this bank<br>,write_start</td></tr>
<tr><td align="center">turn_cycle</td><td align="center">25:24</td><td align="center">0x3</td><td align="center">R/W</td><td>Turn around time in AHB clocks. /CS high time.</td></tr>
<tr><td align="center">write_burst_enable</td><td align="center">22:21</td><td align="center">0x0</td><td align="center">R/W</td><td>Enable write bursts speeds access by not raising /CS between accesses<br>,Reserved</td></tr>
<tr><td align="center">write_pulse</td><td align="center">13:8</td><td align="center">0x0</td><td align="center">R/W</td><td>The number of clocks into the write cycle that the /WE strobes rise.<br>,reserved</td></tr>
<tr><td align="center">delay_oe</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>Specifies whether OE should be delayed 1 clock from CS<br>,reserved</td></tr>
<tr><td align="center">read_cycle</td><td align="center">5:0</td><td align="center">0xF</td><td align="center">R/W</td><td>The number of clocks that /CS is low for in the read cycle.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>STATIC/Static Bank 3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x41C00010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Static Bank 3 register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Static%20Bank%203_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Static Bank 3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">width</td><td align="center">31:30</td><td align="center">0x0</td><td align="center">R/W</td><td>External memory width 00 8bit, 01 16bit, 10 32bit</td></tr>
<tr><td align="center">read_burst_enable</td><td align="center">29</td><td align="center">0x0</td><td align="center">R/W</td><td>Enable read bursts speeds access by not raising /CS between accesses</td></tr>
<tr><td align="center">buffer_present</td><td align="center">27:26</td><td align="center">0x0</td><td align="center">R/W</td><td>External 245 buffer required for this bank<br>,write_start</td></tr>
<tr><td align="center">turn_cycle</td><td align="center">25:24</td><td align="center">0x3</td><td align="center">R/W</td><td>Turn around time in AHB clocks. /CS high time.</td></tr>
<tr><td align="center">write_burst_enable</td><td align="center">22:21</td><td align="center">0x0</td><td align="center">R/W</td><td>Enable write bursts speeds access by not raising /CS between accesses<br>,Reserved</td></tr>
<tr><td align="center">write_pulse</td><td align="center">13:8</td><td align="center">0x0</td><td align="center">R/W</td><td>The number of clocks into the write cycle that the /WE strobes rise.<br>,reserved</td></tr>
<tr><td align="center">delay_oe</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>Specifies whether OE should be delayed 1 clock from CS<br>,reserved</td></tr>
<tr><td align="center">read_cycle</td><td align="center">5:0</td><td align="center">0xF</td><td align="center">R/W</td><td>The number of clocks that /CS is low for in the read cycle.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>STATIC/Extended control register</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x41C00014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Extended control register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Extended%20control%20register_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Extended control register_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INT_ACTIVE_LOW</td><td align="center">1</td><td align="center">0x1</td><td align="center">R/W</td><td>Specifies the sense of the interrupt input<br>0 = When INT input pin is HIGH, the IRQ output of the core is activated<br>1 = When INT input pin is LOW, the IRQ output of the core is activated<br>(INT is safe sampled, and IRQ output is resynchronised to the clock)</td></tr>
<tr><td align="center">WAIT_ACTIVE_LOW</td><td align="center">0</td><td align="center">0x1</td><td align="center">R/W</td><td>Specifies the sense of the WAIT input<br>0 = Read/Write cycles will be extended while WAIT input pin is HIGH<br>1 = Read/Write cycles will be extended while WAIT input pin is LOW</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">CIPHER_DATA</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x42000000...0x423FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">data memory space for AES encryption/decryption</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('CIPHER_DATA_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="CIPHER_DATA_blocks" style="display: none;"></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">GPIOA</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44000000...0x440FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">GPIO for MF_A[31:0] pins</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('GPIOA_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="GPIOA_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO input</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO input</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20input_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO input_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns the state of the inputs (if present)</td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Sets the state of output register.<br>Value is only output to the pin if GPIO output enable(n) is also set<br>"NOTE: Do Not read / modify / write this register, the data read back is not necessarily the contents of the output register"</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO output enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO output enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20output%20enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO output enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>READ only output enable status for GPIO<br>0 = GPIO n is an input<br>1 = GPIO n is an output</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO IRQ enable mask</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO IRQ enable mask</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20IRQ%20enable%20mask_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO IRQ enable mask_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting
bit n enables the generation of interrupts on BOTH rising and falling
edges of input n (Only for pins set as inputs in the GPIO output enable
register)<br>NOTE: Data written to this register is actually written to
the registers; GPIO Rising Edge Interrupt Enable and GPIO Falling Edge
Interrupt Enable. This register is provided for legacy support only.
Use the individual registers at offsets 0x28 and 0x2C to independently
set rising and falling edge sensitivity) Reading this register gives
the logical 'AND' of RISING_INT_EN and FALLING_INT_EN.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO IRQ event</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO IRQ event</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20IRQ%20event_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO IRQ event_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>1 = Rising edge detected(n) AND rising edge IRQ enable(n) OR<br>Falling edge detected(n) AND falling edge IRQ enable(n)</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 = Rising_edge_detected(n)  and  falling_edge_detected(n) are both cleared.<br>0 = No affect</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO Output</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Output</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Output_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Output_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns state of GPIO Output. Not necessarily the state of the pin.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Sets the state of output register.<br>Value is only output to the pin if OE bit n is also set</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO Output Set</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Output Set</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Output%20Set_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Output Set_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Writing
a 1 to bit n causes corresponding bit in GPIO Output to be set. Writing
a 0 has no effect. (Allowing bits to be set without the need for a
read/modify/write)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO Output Clear</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Output Clear</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Output%20Clear_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Output Clear_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Writing
a 1 to bit n causes corresponding bit in GPIO Output to be clear.
Writing a 0 has no effect. (Allowing bits to be Clear without the need
for a read/modify/write)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO OE Set</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO OE Set</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20OE%20Set_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO OE Set_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Writing
a 1 to bit n causes corresponding bit in GPIO OE to be set. Writing a 0
has no effect. (Allowing bits to be set without the need for a
read/modify/write)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO OE Clear</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO OE Clear</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20OE%20Clear_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO OE Clear_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Writing
a 1 to bit n causes corresponding bit in GPIO OE to be clear. Writing a
0 has no effect. (Allowing bits to be Clear without the need for a
read/modify/write)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO Debounce</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Debounce</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Debounce_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Debounce_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">0xFFFFFFFF</td><td align="center">RW</td><td>Debounce enable for GPIO<br>0 = GPIO input is direct<br>1 = GPIO input to register/interrupt block via debounce circuit</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO RE IRQ enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO RE IRQ enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20RE%20IRQ%20enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO RE IRQ enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Rising Edge Interrupt Enable for GPIO<br>1 = interrupt generation when RISE_DETECTED is set</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO FE IRQ enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO FE IRQ enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20FE%20IRQ%20enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO FE IRQ enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Falling Edge Interrupt Enable for GPIO<br>1 = interrupt generation when FALL_DETECTED is set</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO Rise Detected</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Rise Detected</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Rise%20Detected_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Rise Detected_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Rise Detected for GPIO<br>Rise detected is automatically zeroed for GPIOs configured as an output</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 to bit n causes RISE_DETECTED(n) to be cleared</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO Fall Detected</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Fall Detected</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Fall%20Detected_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Fall Detected_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Fall Detected for GPIO (7:0).<br>Fall detected is automatically zeroed for GPIOs configured as an output</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 to bit n causes FALL_DETECTED(n) to be cleared</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/Interrupt Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field3</td><td align="center">31:3</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R</td><td>Timer interrupt asserted</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>Global FALL_DETECTED interrupt asserted</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>Global RISE_DETECTED interrupt asserted</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO Invert Enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Invert Enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Invert%20Enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Invert Enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO Invert Enable<br>0 = Normal operation<br>1 = GPIO output (including PWM waveform) inverted</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/Core Version</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Core Version</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Core%20Version_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Core Version_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field8</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">7:1</td><td align="center">0x8</td><td align="center">R</td><td>Core Version Number</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Slow clock mode</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/Clock Divider</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Default value is based on GENERIC to give default 1 MHz clock enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Clock%20Divider_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Clock Divider_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field30</td><td align="center">31:30</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">29:16</td><td align="center">0x176F</td><td align="center">RW</td><td>GPIO debounce counter(DBC). Debounce time is<br>Thus with 1MHz divider default DB time is 30 ms =&gt; suitable for USB VBUS</td></tr>
<tr><td align="center">Field9</td><td align="center">15:9</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">RW</td><td>Clock Divider counter reset.<br>Set
to 1 if necessary to reset the counter every time a new value is
written (else the new Clock Divider value will have effect when the
counter wraps). Self clearing.</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Clock Divider (CD) to generate clock_enable (1 MHz nominal)<br>PD is the ratio between system clock and slow clock<br>The RESET value is (G_CLK_FREQ/G_SLOW_CLOCK_DIV)-1 and is therefore implementation specific</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/Interrupt timer</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt timer</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20timer_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt timer_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">0xFF</td><td align="center">W</td><td>Interrupt timer (IT)<br>"Value written is start value of countdown timer, when timer reaches zero an interrupt is generated"<br>"To clear interrupt, reset the timer to a non-zero value"<br>0xFF = timer disabled</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns current value of timer</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO PE Pull Up/Down Enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO PE Pull Up/Down Enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20PE%20Pull%20Up/Down%20Enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO PE Pull Up/Down Enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Enables pull-up / pull-down resistor in IO cell (where implemented) for GPIO<br>1 = Enable pull-up / pull-down<br>0 = Disabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/GPIO PS Pull Up/Down Sense</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO PS Pull Up/Down Sense</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20PS%20Pull%20Up/Down%20Sense_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO PS Pull Up/Down Sense_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Sense of pull-up / pull-down resistor in IO cell (where implemented) for GPIO<br>1 = Pull-up<br>0 = Pull-down</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM0</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000080...0x44000083</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM0/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM0/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000084</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM1</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000088...0x4400008B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM1/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000088</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM1/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400008C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM2</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000090...0x44000093</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM2/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000090</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM2/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000094</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM3</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000098...0x4400009B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM3/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000098</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM3/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400009C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM4</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000A0...0x440000A3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM4/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM4/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM5</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000A8...0x440000AB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM5/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM5/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM6</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000B0...0x440000B3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM6/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM6/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM7</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000B8...0x440000BB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM7/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM7/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM8</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000C0...0x440000C3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM8/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM8/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM9</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000C8...0x440000CB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM9/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM9/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM10</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000D0...0x440000D3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM10/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM10/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM11</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000D8...0x440000DB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM11/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM11/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM12</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000E0...0x440000E3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM12/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM12/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM13</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000E8...0x440000EB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM13/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM13/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM14</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000F0...0x440000F3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM14/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM14/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM15</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x440000F8...0x440000FB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM15/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM15/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x440000FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM16</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000100...0x44000103</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM16/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM16/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM17</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000108...0x4400010B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM17/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM17/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400010C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM18</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000110...0x44000113</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM18/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM18/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM19</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000118...0x4400011B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM19/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM19/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400011C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM20</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000120...0x44000123</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM20/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM20/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000124</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM21</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000128...0x4400012B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM21/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000128</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM21/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400012C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM22</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000130...0x44000133</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM22/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000130</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM22/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000134</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM23</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000138...0x4400013B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM23/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000138</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM23/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400013C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM24</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000140...0x44000143</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM24/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM24/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000144</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM25</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000148...0x4400014B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM25/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000148</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM25/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400014C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM26</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000150...0x44000153</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM26/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000150</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM26/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000154</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM27</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000158...0x4400015B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM27/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000158</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM27/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400015C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM28</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000160...0x44000163</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM28/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000160</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM28/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000164</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM29</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000168...0x4400016B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM29/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000168</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM29/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400016C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM30</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000170...0x44000173</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM30/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000170</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM30/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000174</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM31</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44000178...0x4400017B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM31/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44000178</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOA/PWM31/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4400017C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">GPIOB</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44100000...0x441FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">GPIO for MF_B[17:0] pins</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('GPIOB_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="GPIOB_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO input</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO input</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20input_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO input_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns the state of the inputs (if present)</td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Sets the state of output register.<br>Value is only output to the pin if GPIO output enable(n) is also set<br>"NOTE: Do Not read / modify / write this register, the data read back is not necessarily the contents of the output register"</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO output enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO output enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20output%20enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO output enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>READ only output enable status for GPIO<br>0 = GPIO n is an input<br>1 = GPIO n is an output</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO IRQ enable mask</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO IRQ enable mask</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20IRQ%20enable%20mask_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO IRQ enable mask_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting
bit n enables the generation of interrupts on BOTH rising and falling
edges of input n (Only for pins set as inputs in the GPIO output enable
register)<br>NOTE: Data written to this register is actually written to
the registers; GPIO Rising Edge Interrupt Enable and GPIO Falling Edge
Interrupt Enable. This register is provided for legacy support only.
Use the individual registers at offsets 0x28 and 0x2C to independently
set rising and falling edge sensitivity) Reading this register gives
the logical 'AND' of RISING_INT_EN and FALLING_INT_EN.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO IRQ event</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO IRQ event</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20IRQ%20event_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO IRQ event_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>1 = Rising edge detected(n) AND rising edge IRQ enable(n) OR<br>Falling edge detected(n) AND falling edge IRQ enable(n)</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 = Rising_edge_detected(n)  and  falling_edge_detected(n) are both cleared.<br>0 = No affect</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO Output</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Output</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Output_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Output_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns state of GPIO Output. Not necessarily the state of the pin.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Sets the state of output register.<br>Value is only output to the pin if OE bit n is also set</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO Output Set</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Output Set</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Output%20Set_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Output Set_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Writing
a 1 to bit n causes corresponding bit in GPIO Output to be set. Writing
a 0 has no effect. (Allowing bits to be set without the need for a
read/modify/write)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO Output Clear</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Output Clear</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Output%20Clear_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Output Clear_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Writing
a 1 to bit n causes corresponding bit in GPIO Output to be clear.
Writing a 0 has no effect. (Allowing bits to be Clear without the need
for a read/modify/write)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO OE Set</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO OE Set</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20OE%20Set_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO OE Set_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Writing
a 1 to bit n causes corresponding bit in GPIO OE to be set. Writing a 0
has no effect. (Allowing bits to be set without the need for a
read/modify/write)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO OE Clear</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO OE Clear</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20OE%20Clear_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO OE Clear_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Writing
a 1 to bit n causes corresponding bit in GPIO OE to be clear. Writing a
0 has no effect. (Allowing bits to be Clear without the need for a
read/modify/write)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO Debounce</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Debounce</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Debounce_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Debounce_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">0xFFFFFFFF</td><td align="center">RW</td><td>Debounce enable for GPIO<br>0 = GPIO input is direct<br>1 = GPIO input to register/interrupt block via debounce circuit</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO RE IRQ enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO RE IRQ enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20RE%20IRQ%20enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO RE IRQ enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Rising Edge Interrupt Enable for GPIO<br>1 = interrupt generation when RISE_DETECTED is set</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO FE IRQ enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO FE IRQ enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20FE%20IRQ%20enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO FE IRQ enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Falling Edge Interrupt Enable for GPIO<br>1 = interrupt generation when FALL_DETECTED is set</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO Rise Detected</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Rise Detected</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Rise%20Detected_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Rise Detected_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Rise Detected for GPIO<br>Rise detected is automatically zeroed for GPIOs configured as an output</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 to bit n causes RISE_DETECTED(n) to be cleared</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO Fall Detected</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Fall Detected</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Fall%20Detected_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Fall Detected_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Fall Detected for GPIO (7:0).<br>Fall detected is automatically zeroed for GPIOs configured as an output</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 to bit n causes FALL_DETECTED(n) to be cleared</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/Interrupt Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field3</td><td align="center">31:3</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R</td><td>Timer interrupt asserted</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>Global FALL_DETECTED interrupt asserted</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>Global RISE_DETECTED interrupt asserted</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO Invert Enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO Invert Enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20Invert%20Enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO Invert Enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO Invert Enable<br>0 = Normal operation<br>1 = GPIO output (including PWM waveform) inverted</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/Core Version</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Core Version</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Core%20Version_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Core Version_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field8</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">7:1</td><td align="center">0x8</td><td align="center">R</td><td>Core Version Number</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Slow clock mode</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/Clock Divider</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Default value is based on GENERIC to give default 1 MHz clock enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Clock%20Divider_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Clock Divider_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field30</td><td align="center">31:30</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">29:16</td><td align="center">0x176F</td><td align="center">RW</td><td>GPIO debounce counter(DBC). Debounce time is<br>Thus with 1MHz divider default DB time is 30 ms =&gt; suitable for USB VBUS</td></tr>
<tr><td align="center">Field9</td><td align="center">15:9</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">RW</td><td>Clock Divider counter reset.<br>Set
to 1 if necessary to reset the counter every time a new value is
written (else the new Clock Divider value will have effect when the
counter wraps). Self clearing.</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Clock Divider (CD) to generate clock_enable (1 MHz nominal)<br>PD is the ratio between system clock and slow clock<br>The RESET value is (G_CLK_FREQ/G_SLOW_CLOCK_DIV)-1 and is therefore implementation specific</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/Interrupt timer</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt timer</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20timer_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt timer_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">0xFF</td><td align="center">W</td><td>Interrupt timer (IT)<br>"Value written is start value of countdown timer, when timer reaches zero an interrupt is generated"<br>"To clear interrupt, reset the timer to a non-zero value"<br>0xFF = timer disabled</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns current value of timer</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO PE Pull Up/Down Enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO PE Pull Up/Down Enable</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20PE%20Pull%20Up/Down%20Enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO PE Pull Up/Down Enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Enables pull-up / pull-down resistor in IO cell (where implemented) for GPIO<br>1 = Enable pull-up / pull-down<br>0 = Disabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/GPIO PS Pull Up/Down Sense</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>GPIO PS Pull Up/Down Sense</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GPIO%20PS%20Pull%20Up/Down%20Sense_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GPIO PS Pull Up/Down Sense_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Sense of pull-up / pull-down resistor in IO cell (where implemented) for GPIO<br>1 = Pull-up<br>0 = Pull-down</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM0</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100080...0x44100083</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM0/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM0/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100084</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM1</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100088...0x4410008B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM1/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100088</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM1/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410008C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM2</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100090...0x44100093</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM2/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100090</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM2/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100094</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM3</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100098...0x4410009B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM3/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100098</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM3/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410009C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM4</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000A0...0x441000A3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM4/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM4/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM5</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000A8...0x441000AB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM5/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM5/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM6</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000B0...0x441000B3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM6/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM6/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM7</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000B8...0x441000BB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM7/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM7/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM8</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000C0...0x441000C3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM8/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM8/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM9</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000C8...0x441000CB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM9/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM9/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM10</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000D0...0x441000D3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM10/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM10/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM11</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000D8...0x441000DB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM11/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM11/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM12</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000E0...0x441000E3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM12/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM12/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM13</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000E8...0x441000EB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM13/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM13/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM14</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000F0...0x441000F3</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM14/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM14/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM15</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x441000F8...0x441000FB</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM15/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM15/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x441000FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM16</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100100...0x44100103</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM16/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM16/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM17</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100108...0x4410010B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM17/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM17/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410010C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM18</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100110...0x44100113</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM18/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM18/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM19</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100118...0x4410011B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM19/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM19/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410011C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM20</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100120...0x44100123</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM20/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM20/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100124</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM21</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100128...0x4410012B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM21/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100128</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM21/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410012C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM22</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100130...0x44100133</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM22/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100130</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM22/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100134</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM23</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100138...0x4410013B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM23/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100138</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM23/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410013C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM24</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100140...0x44100143</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM24/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM24/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100144</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM25</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100148...0x4410014B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM25/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100148</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM25/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410014C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM26</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100150...0x44100153</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM26/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100150</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM26/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100154</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM27</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100158...0x4410015B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM27/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100158</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM27/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410015C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM28</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100160...0x44100163</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM28/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100160</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM28/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100164</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM29</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100168...0x4410016B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM29/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100168</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM29/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410016C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM30</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100170...0x44100173</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM30/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100170</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM30/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100174</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWM31</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44100178...0x4410017B</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM31/PWM_Value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44100178</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Value</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">PWM Value</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Value<br>Programming n will output a waveform with n/255 cycles high and (255-n)/255 cycles low<br>Note: Writes to GPIO Input, GPIO Output, GPIO Output Set &amp; GPIO Output Clear will set this value to 0 or 0xFF as appropriate</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>GPIOB/PWM31/PWM_Ramp_Rate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4410017C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PWM_Ramp_Rate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWM_Ramp_Rate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWM_Ramp_Rate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Ramp Direction</td><td align="center">7</td><td align="center">0x0</td><td align="center">RW</td><td>GPIO PWM Ramp Sign bit<br>0 - Increment PWM count<br>1 - Decrement PWM count</td></tr>
<tr><td align="center">RR</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>GPIO PWM Ramp Rate (RR)<br>Every (128-RR) complete PWM cycles the GPIO PWM value is incremented/decremented<br>0x00 - PWM ramp disabled<br>Ramp rate is proportional to 1/(128-RR)</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">UARTA</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44200000...0x442FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">UART for debug</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('UARTA_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="UARTA_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/THR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit data holding register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('THR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="THR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Data to be transmitted</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/RHR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Receive data holding register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RHR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RHR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Data received</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/IER</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200001</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Enable Register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('IER_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="IER_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Unused</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>XON /XOFF</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>interrupt enable</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Unused</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Modem interrupt mask enable*</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Rx Stat interruptenable</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>THRE interrupt enable</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>RxRDY interrupt enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/FCR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200002</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>FIFO Control Register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FCR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FCR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">W</td><td>RHR Trigger level</td></tr>
<tr><td align="center">Field3</td><td align="center">5:3</td><td align="center">&nbsp;</td><td align="center">W</td><td>Unused</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">W</td><td>Flush THR</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Flush RHR</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable FIFO</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/ISR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200002</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt status Register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ISR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ISR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">R</td><td>FIFOs enabled</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R</td><td>Unused</td></tr>
<tr><td align="center">Field0</td><td align="center">4:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Interrupt status</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/LCR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200003</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Line control register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LCR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LCR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Divisor latch access</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Tx Break</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Force parity</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Even parity</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Parity enable</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Number of stop bits</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Data length</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/MCR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Modem Control register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MCR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MCR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Unused</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Internal</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LoopbackEnable</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>OP2 reset=�1�</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>OP1 reset=�1�</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>RTS</td></tr>
<tr><td align="center">Field0,</td><td align="center">0,</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>DTR</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/LSR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200005</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>LSR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LSR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LSR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R</td><td>Data Error</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R</td><td>Tx Empty</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R</td><td>THR Empty</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Rx Break</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R</td><td>Framing Error</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parity Error</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Overrun Error</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>RxRDY</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/MSR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200006</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Modem Status Register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R</td><td>DCD</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R</td><td>RI</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R</td><td>DSR</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R</td><td>CTS</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R</td><td>Delta DCD</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Trailing RI edge</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Delta DSR</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Delta CTS</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/SPR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200007</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Scratchpad Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SPR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SPR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Temporary data storage register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/DLL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>require divisor latch access bit (LCR[7]) to be set to 1.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DLL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DLL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Divisor latch bits [7:0]  (Least significant byte)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/DLM</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200001</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>require divisor latch access bit (LCR[7]) to be set to 1.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DLM_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DLM_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Divisor latch bits [15:8]  (Most significant byte)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/Extended Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Extended Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Extended%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Extended Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">4x_SPEEDUP</td><td align="center">0</td><td align="center">0x0</td><td align="center">RW</td><td>"Operates at 4 clocks per bit, instead of the normal 16, facilitating a 4 fold increase in throughput for the same clock input"</td></tr>
<tr><td align="center">AUTO_CTS_RTS</td><td align="center">1</td><td align="center">0x0</td><td align="center">RW</td><td>"When
enabled RTS is automatically de-asserted when the Rx FIFO fill level is
14 or more, and data is only transmitted when CTS is asserted. NOTE:
The RTS control in the MCR register has no affect when this bit is set."</td></tr>
<tr><td align="center">AUTO_DSR_DTR</td><td align="center">3:2</td><td align="center">0x0</td><td align="center">RW</td><td>00 = DTR Is set as normal from the MCR register<br>01
= Auto DTR/DSR Flow control. DTR is automatically de-asserted when the
Rx FIFO fill level is reaches the Rx FIFO trigger level. Data is only
transmitted when the DSR input is asserted.<br>10 = DTR Buffer OE control: DTR Is high when the Tx is IDLE<br>11 = DTR Buffer OE control: DTR Is low when the Tx is IDLE</td></tr>
<tr><td align="center">AUTO_RX_XON_XOFF</td><td align="center">4</td><td align="center">0x0</td><td align="center">RW</td><td>When
set the receiver will match incoming data with the XON and XOFF
registers. XOFF will cause transmission to be disabled (and bit 6 of
this register to be cleared) as soon as the current character is
complete. XON will cause transmission to resume (and bit 6 to be
re-asserted). XON/XOFF characters are not entered into the Rx FIFO.
Parity and framing errors are ignored when matching XON/XOFF characters</td></tr>
<tr><td align="center">AUTO_TX_XON_XOFF</td><td align="center">5</td><td align="center">0x0</td><td align="center">RW</td><td>"When
set, an XOFF will be transmitted (in the next available tx slot), and
bit 7 of this register cleared, when the Rx FIFO fill level reaches the
Rx FIFO trigger level. When Rx FIFO fill level falls below the trigger
level, bit 7 of this register is set again, and an XON is transmitted
(in the next available tx slot)."</td></tr>
<tr><td align="center">TX_ENABLED</td><td align="center">6</td><td align="center">0x1</td><td align="center">R</td><td>"Cleared
whenever an XOFF is received in AUTO_RX_XON_XOFF mode, and reset when
an XON is received. When this bit changes state, and bit 5 of IER is
set, an XON/XOFF interrupt is generated"</td></tr>
<tr><td align="center">RX_ENABLED</td><td align="center">7</td><td align="center">0x1</td><td align="center">R</td><td>"Cleared whenever an XOFF is sent in AUTO_TX_XON_XOFF mode, and reset when an XON is sent"</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/Fractional Divisor</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200090</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Fractional Divisor</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Fractional%20Divisor_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Fractional Divisor_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">DLF</td><td align="center">7:5</td><td align="center">&nbsp;</td><td align="center">RW</td><td>The 3-bit fractional part of the divisor.<br>NOTE: This field occupies the UPPER 3 bits of this register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/Rx FIFO Fill Level</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x442000A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Rx FIFO Fill Level</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Rx%20FIFO%20Fill%20Level_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Rx FIFO Fill Level_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RX_FILL</td><td align="center">4:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>The number of characters available in the Rx FIFO</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/Tx FIFO Space</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x442000B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Tx FIFO Space</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Tx%20FIFO%20Space_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Tx FIFO Space_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_SPACE</td><td align="center">4:0</td><td align="center">0x10</td><td align="center">R</td><td>The number of characters that may be written to the Tx FIFO without causing an overrun</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/Wide Access</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4420000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>this is a 32-bit write covering addresses 000C to 000F � others are bytes</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Wide%20Access_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Wide Access_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_CHAR_0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>First character to be transferred to Tx FIFO</td></tr>
<tr><td align="center">TX_CHAR_1</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">W</td><td>Second character to be transferred to Tx FIFO</td></tr>
<tr><td align="center">TX_CHAR_2</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">W</td><td>Third character to be transferred to Tx FIFO</td></tr>
<tr><td align="center">TX_CHAR_3</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">W</td><td>Fourth character to be transferred to Tx FIFO</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/XON Character</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>XON Character</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('XON%20Character_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="XON Character_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XON</td><td align="center">4:0</td><td align="center">0x11</td><td align="center">RW</td><td>"The XON character used to match incoming data in AUTO_RX_XON_XOFF mode, and to send in AUTO_TX_XON_XOFF mode"</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/XOFF Character</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>XOFF Character</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('XOFF%20Character_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="XOFF Character_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XOFF</td><td align="center">4:0</td><td align="center">0x13</td><td align="center">RW</td><td>"The XOFF character used to match incoming data in AUTO_RX_XON_XOFF mode, and to send in AUTO_TX_XON_XOFF mode"</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTA/DMA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44200120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DMA</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DMA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DMA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">ALT_DMA_MODE</td><td align="center">0</td><td align="center">0x0</td><td align="center">RW</td><td>"Setting
this bit causes RXRDY# and TXRDY# signals to respond more rapidly to
accesses to the Rx and Tx FIFOs, enabling better compatibility with DMA
engines"</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">UARTB</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44300000...0x443FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">UART for debug</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('UARTB_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="UARTB_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/THR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit data holding register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('THR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="THR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Data to be transmitted</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/RHR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Receive data holding register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RHR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RHR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Data received</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/IER</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300001</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Enable Register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('IER_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="IER_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Unused</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>XON /XOFF</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>interrupt enable</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Unused</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Modem interrupt mask enable*</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Rx Stat interruptenable</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>THRE interrupt enable</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>RxRDY interrupt enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/FCR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300002</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>FIFO Control Register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FCR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FCR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">W</td><td>RHR Trigger level</td></tr>
<tr><td align="center">Field3</td><td align="center">5:3</td><td align="center">&nbsp;</td><td align="center">W</td><td>Unused</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">W</td><td>Flush THR</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Flush RHR</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable FIFO</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/ISR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300002</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt status Register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ISR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ISR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">R</td><td>FIFOs enabled</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R</td><td>Unused</td></tr>
<tr><td align="center">Field0</td><td align="center">4:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Interrupt status</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/LCR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300003</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Line control register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LCR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LCR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Divisor latch access</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Tx Break</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Force parity</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Even parity</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Parity enable</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Number of stop bits</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Data length</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/MCR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Modem Control register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MCR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MCR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Unused</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Internal</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LoopbackEnable</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>OP2 reset=�1�</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>OP1 reset=�1�</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>RTS</td></tr>
<tr><td align="center">Field0,</td><td align="center">0,</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>DTR</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/LSR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300005</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>LSR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LSR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LSR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R</td><td>Data Error</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R</td><td>Tx Empty</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R</td><td>THR Empty</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Rx Break</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R</td><td>Framing Error</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parity Error</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Overrun Error</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>RxRDY</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/MSR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300006</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Modem Status Register,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R</td><td>DCD</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R</td><td>RI</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R</td><td>DSR</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R</td><td>CTS</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R</td><td>Delta DCD</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Trailing RI edge</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Delta DSR</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Delta CTS</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/SPR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300007</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Scratchpad Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SPR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SPR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Temporary data storage register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/DLL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>require divisor latch access bit (LCR[7]) to be set to 1.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DLL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DLL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Divisor latch bits [7:0]  (Least significant byte)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/DLM</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300001</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>require divisor latch access bit (LCR[7]) to be set to 1.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DLM_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DLM_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Divisor latch bits [15:8]  (Most significant byte)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/Extended Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Extended Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Extended%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Extended Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">4x_SPEEDUP</td><td align="center">0</td><td align="center">0x0</td><td align="center">RW</td><td>"Operates at 4 clocks per bit, instead of the normal 16, facilitating a 4 fold increase in throughput for the same clock input"</td></tr>
<tr><td align="center">AUTO_CTS_RTS</td><td align="center">1</td><td align="center">0x0</td><td align="center">RW</td><td>"When
enabled RTS is automatically de-asserted when the Rx FIFO fill level is
14 or more, and data is only transmitted when CTS is asserted. NOTE:
The RTS control in the MCR register has no affect when this bit is set."</td></tr>
<tr><td align="center">AUTO_DSR_DTR</td><td align="center">3:2</td><td align="center">0x0</td><td align="center">RW</td><td>00 = DTR Is set as normal from the MCR register<br>01
= Auto DTR/DSR Flow control. DTR is automatically de-asserted when the
Rx FIFO fill level is reaches the Rx FIFO trigger level. Data is only
transmitted when the DSR input is asserted.<br>10 = DTR Buffer OE control: DTR Is high when the Tx is IDLE<br>11 = DTR Buffer OE control: DTR Is low when the Tx is IDLE</td></tr>
<tr><td align="center">AUTO_RX_XON_XOFF</td><td align="center">4</td><td align="center">0x0</td><td align="center">RW</td><td>When
set the receiver will match incoming data with the XON and XOFF
registers. XOFF will cause transmission to be disabled (and bit 6 of
this register to be cleared) as soon as the current character is
complete. XON will cause transmission to resume (and bit 6 to be
re-asserted). XON/XOFF characters are not entered into the Rx FIFO.
Parity and framing errors are ignored when matching XON/XOFF characters</td></tr>
<tr><td align="center">AUTO_TX_XON_XOFF</td><td align="center">5</td><td align="center">0x0</td><td align="center">RW</td><td>"When
set, an XOFF will be transmitted (in the next available tx slot), and
bit 7 of this register cleared, when the Rx FIFO fill level reaches the
Rx FIFO trigger level. When Rx FIFO fill level falls below the trigger
level, bit 7 of this register is set again, and an XON is transmitted
(in the next available tx slot)."</td></tr>
<tr><td align="center">TX_ENABLED</td><td align="center">6</td><td align="center">0x1</td><td align="center">R</td><td>"Cleared
whenever an XOFF is received in AUTO_RX_XON_XOFF mode, and reset when
an XON is received. When this bit changes state, and bit 5 of IER is
set, an XON/XOFF interrupt is generated"</td></tr>
<tr><td align="center">RX_ENABLED</td><td align="center">7</td><td align="center">0x1</td><td align="center">R</td><td>"Cleared whenever an XOFF is sent in AUTO_TX_XON_XOFF mode, and reset when an XON is sent"</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/Fractional Divisor</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300090</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Fractional Divisor</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Fractional%20Divisor_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Fractional Divisor_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">DLF</td><td align="center">7:5</td><td align="center">&nbsp;</td><td align="center">RW</td><td>The 3-bit fractional part of the divisor.<br>NOTE: This field occupies the UPPER 3 bits of this register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/Rx FIFO Fill Level</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x443000A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Rx FIFO Fill Level</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Rx%20FIFO%20Fill%20Level_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Rx FIFO Fill Level_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RX_FILL</td><td align="center">4:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>The number of characters available in the Rx FIFO</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/Tx FIFO Space</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x443000B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Tx FIFO Space</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Tx%20FIFO%20Space_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Tx FIFO Space_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_SPACE</td><td align="center">4:0</td><td align="center">0x10</td><td align="center">R</td><td>The number of characters that may be written to the Tx FIFO without causing an overrun</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/Wide Access</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4430000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>this is a 32-bit write covering addresses 000C to 000F � others are bytes</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Wide%20Access_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Wide Access_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TX_CHAR_0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>First character to be transferred to Tx FIFO</td></tr>
<tr><td align="center">TX_CHAR_1</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">W</td><td>Second character to be transferred to Tx FIFO</td></tr>
<tr><td align="center">TX_CHAR_2</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">W</td><td>Third character to be transferred to Tx FIFO</td></tr>
<tr><td align="center">TX_CHAR_3</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">W</td><td>Fourth character to be transferred to Tx FIFO</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/XON Character</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>XON Character</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('XON%20Character_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="XON Character_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XON</td><td align="center">4:0</td><td align="center">0x11</td><td align="center">RW</td><td>"The XON character used to match incoming data in AUTO_RX_XON_XOFF mode, and to send in AUTO_TX_XON_XOFF mode"</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/XOFF Character</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>XOFF Character</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('XOFF%20Character_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="XOFF Character_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">XOFF</td><td align="center">4:0</td><td align="center">0x13</td><td align="center">RW</td><td>"The XOFF character used to match incoming data in AUTO_RX_XON_XOFF mode, and to send in AUTO_TX_XON_XOFF mode"</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>UARTB/DMA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44300120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DMA</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DMA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DMA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">ALT_DMA_MODE</td><td align="center">0</td><td align="center">0x0</td><td align="center">RW</td><td>"Setting
this bit causes RXRDY# and TXRDY# signals to respond more rapidly to
accesses to the Rx and Tx FIFOs, enabling better compatibility with DMA
engines"</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">RPSA</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44400000...0x444FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Peripherals (Timers, interrupts, watchdog, GPI, GPO) intended for use by ARM</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('RPSA_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="RPSA_blocks" style="display: none;"><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">IRQ Interrupt Controller</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44400000...0x444000FF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/IRQ Interrupt Controller/Interrupt Mask Source</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status bit-mask of enabled IRQ sources. If any bit is set in the register, the IRQ output of the interrupt controller is active<br>Bit positions within the mask relate to IRQ sources as follows:<br>0 = Unused<br>1 = Software IRQ<br>2 = ARM COMMRX<br>3 = ARM COMMTX<br>4 = Local RPS Timer 1<br>5 = Local RPS Timer 2<br>6 = InfraRed Receiver<br>7 = USB Host<br>8 = GMAC A<br>9 = GMAC B<br>10 = Semaphore A<br>11 = Semaphore B<br>12 = Semaphore C<br>13 = SGDMA Channel 0<br>14 = SGDMA Channel 1<br>15 = SGDMA Channel 2<br>16 = SGDMA Channel 3<br>17 = GMAC A PMT<br>18 = SATA<br>19 = PCIE A<br>20 = PCIE B<br>21 = GPIO A<br>22 = GPIO B<br>23 = UART A<br>24 = UART B<br>25 = Audio<br>26 = Audio Error<br>27 = Video Output<br>28 = GMAC B PMT<br>29 = Secure Digital<br>30 = USB Device<br>31 = Reserved</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Mask%20Source_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Mask Source_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/IRQ Interrupt Controller/Interrupt Raw Source</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status bit-mask of all raw IRQ sources (before enable)<br>For bit positions within the mask, see Interrupt Mask Source register description</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Raw%20Source_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Raw Source_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/IRQ Interrupt Controller/Interrupt Enable Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>A bit-mask of interrupts to enable<br>A one in the bit-mask causes the corresponding enable to be set, a zero has no affect<br>For bit positions within the mask, see Interrupt Mask Source register description</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Enable%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Enable Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/IRQ Interrupt Controller/Interrupt Disable Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4440000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>A bit-mask of interrupts to disable<br>A one in the bit-mask causes the corresponding enable to be cleared, a zero has no affect<br>For bit positions within the mask, see Interrupt Mask Source register description</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Disable%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Disable Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/IRQ Interrupt Controller/Software Interrupt</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Software Interrupt</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Software%20Interrupt_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Software Interrupt_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Trigger S/W IRQ</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Writing
a one to this bit causes the software interrupt input to the interrupt
controller to be asserted. Writing a zero has no affect</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">FIQ Interrupt Controller</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44400100...0x444001FF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">The output of this controller is connected to the ARM-CPU1 FIQ input</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/FIQ Interrupt Controller/FIQ Mask Source</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400200</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Masked FIQ Source Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FIQ%20Mask%20Source_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FIQ Mask Source_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FIQ</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reflects the masked status of the FIQ input, (after the enable).<br>0 = This interrupt source is inactive or disabled<br>1 = This interrupt source is enable and active (activating the FIQ output)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/FIQ Interrupt Controller/FIQ Raw Source</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400204</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Raw FIQ Source Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FIQ%20Raw%20Source_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FIQ Raw Source_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FIQ</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reflects
the raw status of the FIQ input, (before the enable). This reflects the
raw status of the IRQ input that is selected with IRQ to FIQ map</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/FIQ Interrupt Controller/FIQ Enable Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400208</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>FIQ Enable Mask</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FIQ%20Enable%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FIQ Enable Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FIQ</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Write with 1 to set FIQ enable, writes with 0 have no affect</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/FIQ Interrupt Controller/FIQ Disable Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4440020C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>FIQ Disable Mask</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FIQ%20Disable%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FIQ Disable Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FIQ</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Write with 1 to clear FIQ enable, writes with 0 have no affect</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/FIQ Interrupt Controller/IRQ to FIQ map</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x444002FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Allows a single IRQ source to be connected as the FIQ source</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('IRQ%20to%20FIQ%20map_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="IRQ to FIQ map_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">IRQ to FIQ</td><td align="center">4:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Index (0 to 31) of the IRQ source to connect to the FIQ source<br>NOTE: This is an index, NOT a bitmask! IRQ indexes are as follows:<br>0 = Unused<br>1 = Software IRQ<br>2 = ARM COMMRX<br>3 = ARM COMMTX<br>4 = Local RPS Timer 1<br>5 = Local RPS Timer 2<br>6 = InfraRed Receiver<br>7 = USB Host<br>8 = GMAC A<br>9 = GMAC B<br>10 = Semaphore A<br>11 = Semaphore B<br>12 = Semaphore C<br>13 = SGDMA Channel 0<br>14 = SGDMA Channel 1<br>15 = SGDMA Channel 2<br>16 = SGDMA Channel 3<br>17 = GMAC A PMT<br>18 = SATA<br>19 = PCIE A<br>20 = PCIE B<br>21 = GPIO A<br>22 = GPIO B<br>23 = UART A<br>24 = UART B<br>25 = Audio<br>26 = Audio Error<br>27 = Video Output<br>28 = GMAC B PMT<br>29 = Secure Digital<br>30 = USB Device<br>31 = Reserved</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">Timer 1</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44400200...0x4440021F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/Timer 1/Timer Load</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400200</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Load</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Load_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Load_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Load value</td><td align="center">23:0</td><td align="center">0x0</td><td align="center">R/W</td><td>The
initial count value to load into the timer. This is also the value that
is loaded into the count value when Enable is set in the Timer Control
register, and also when the counter expires if Re-load mode is set to 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/Timer 1/Timer Current Count</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400204</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Current Count</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Current%20Count_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Current Count_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Current Count</td><td align="center">23:0</td><td align="center">0xFFFFFF</td><td align="center">R</td><td>The current count of the timer</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/Timer 1/Timer Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400208</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Enable</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>When
this bit is set, the counter value is loaded from the Timer Load
register, and begins counting down. When the value reaches zero, the
Timer IRQ will be activated.</td></tr>
<tr><td align="center">Re-load Mode</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>Determines the behaviour of the count value when it reaches zero:<br>0 = The count value is re-loaded with 0xFFFFFF<br>1 = The count is re-loaded with the contents of the Timer Load register</td></tr>
<tr><td align="center">Prescale Divider</td><td align="center">3:2</td><td align="center">0x0</td><td align="center">R/W</td><td>The number of system timer ticks that are required to decrement the timer by 1<br>The system timer tick is a fixed period tick of 160ns (6.25MHz)<br>0 = 1 (160ns)<br>1 = 16 (2.56us)<br>2 = 256 (40.96us)<br>3 = Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/Timer 1/Timer Clear Interrupt</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4440020C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Any write to the register will de-activate the Timer IRQ</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Clear%20Interrupt_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Clear Interrupt_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">Timer 2</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44400220...0x4440023F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/Timer 2/Timer Load</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400220</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Load</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Load_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Load_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Load value</td><td align="center">23:0</td><td align="center">0x0</td><td align="center">R/W</td><td>The
initial count value to load into the timer. This is also the value that
is loaded into the count value when Enable is set in the Timer Control
register, and also when the counter expires if Re-load mode is set to 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/Timer 2/Timer Current Count</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400224</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Current Count</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Current%20Count_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Current Count_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Current Count</td><td align="center">23:0</td><td align="center">0xFFFFFF</td><td align="center">R</td><td>The current count of the timer</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/Timer 2/Timer Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44400228</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Enable</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>When
this bit is set, the counter value is loaded from the Timer Load
register, and begins counting down. When the value reaches zero, the
Timer IRQ will be activated.</td></tr>
<tr><td align="center">Re-load Mode</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>Determines the behaviour of the count value when it reaches zero:<br>0 = The count value is re-loaded with 0xFFFFFF<br>1 = The count is re-loaded with the contents of the Timer Load register</td></tr>
<tr><td align="center">Prescale Divider</td><td align="center">3:2</td><td align="center">0x0</td><td align="center">R/W</td><td>The number of system timer ticks that are required to decrement the timer by 1<br>The system timer tick is a fixed period tick of 160ns (6.25MHz)<br>0 = 1 (160ns)<br>1 = 16 (2.56us)<br>2 = 256 (40.96us)<br>3 = Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/Timer 2/Timer Clear Interrupt</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4440022C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Any write to the register will de-activate the Timer IRQ</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Clear%20Interrupt_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Clear Interrupt_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">Miscellaneous Registers</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44400300...0x444003FF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/Miscellaneous Registers/Chip configuration</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x444006C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Chip configuration bitfield, bits defined as follows:<br>0  : HIGHZ_N<br>1  : JTAG_EN<br>2  : reserved<br>3  : reserved<br>4  : reserved<br>5  : reserved<br>6  : usbphya_lvtrans_ind[0]<br>7  : usbphya_lvtrans_ind[1]<br>8  : usbphya_lvtrans_ind[2]<br>9  : usbphya_lvtrans_ind[3]<br>10 : usbphya_lvtrans_ind[4]<br>11 : usbphya_lvtrans_ind[5]<br>12 : usbphya_lvtrans_ind[6]<br>13 : usbphya_lvtrans_ind[7]<br>14 : reserved<br>15 : reserved<br>16 : reserved<br>17 : FPGA<br>18 : FPGA Only: clocks @ FPGA rate<br>19 : FPGA Only: use virtual periph<br>20 : reserved<br>21 : reserved<br>22 : reserved<br>23 : bond_mode[0]<br>24 : bond_mode[1]<br>25 : bond_mode[2]<br>26 : bond_mode[3]<br>27 : bond_mode[4]<br>28 : reserved<br>29 : boot_source[0]<br>30 : boot_source[1]<br>31 : boot_source[2]</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Chip%20configuration_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Chip configuration_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSA/Miscellaneous Registers/Chip ID Register</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x444006FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Chip ID, Reads back 0x38323500 for PLXNAS7825, 0x38323000 for PLXNAS7820,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Chip%20ID%20Register_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Chip ID Register_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">RPSC</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44500000...0x445FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Peripherals (Timers, interrupts, watchdog, GPI, GPO) intended for use by LEON</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('RPSC_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="RPSC_blocks" style="display: none;"><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">IRQ Interrupt Controller</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44500000...0x445000FF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/IRQ Interrupt Controller/Interrupt Mask Source</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status bit-mask of enabled IRQ sources. If any bit is set in the register, the IRQ output of the interrupt controller is active<br>Bit positions within the mask relate to IRQ sources as follows:<br>0 = Unused<br>1 = Software IRQ<br>2 = ARM COMMRX<br>3 = ARM COMMTX<br>4 = Local RPS Timer 1<br>5 = Local RPS Timer 2<br>6 = InfraRed Receiver<br>7 = USB Host<br>8 = GMAC A<br>9 = GMAC B<br>10 = Semaphore A<br>11 = Semaphore B<br>12 = Semaphore C<br>13 = SGDMA Channel 0<br>14 = SGDMA Channel 1<br>15 = SGDMA Channel 2<br>16 = SGDMA Channel 3<br>17 = GMAC A PMT<br>18 = SATA<br>19 = PCIE A<br>20 = PCIE B<br>21 = GPIO A<br>22 = GPIO B<br>23 = UART A<br>24 = UART B<br>25 = Audio<br>26 = Audio Error<br>27 = Video Output<br>28 = GMAC B PMT<br>29 = Secure Digital<br>30 = USB Device<br>31 = Reserved</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Mask%20Source_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Mask Source_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/IRQ Interrupt Controller/Interrupt Raw Source</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status bit-mask of all raw IRQ sources (before enable)<br>For bit positions within the mask, see Interrupt Mask Source register description</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Raw%20Source_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Raw Source_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/IRQ Interrupt Controller/Interrupt Enable Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>A bit-mask of interrupts to enable<br>A one in the bit-mask causes the corresponding enable to be set, a zero has no affect<br>For bit positions within the mask, see Interrupt Mask Source register description</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Enable%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Enable Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/IRQ Interrupt Controller/Interrupt Disable Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4450000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>A bit-mask of interrupts to disable<br>A one in the bit-mask causes the corresponding enable to be cleared, a zero has no affect<br>For bit positions within the mask, see Interrupt Mask Source register description</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Disable%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Disable Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/IRQ Interrupt Controller/Software Interrupt</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Software Interrupt</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Software%20Interrupt_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Software Interrupt_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Trigger S/W IRQ</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Writing
a one to this bit causes the software interrupt input to the interrupt
controller to be asserted. Writing a zero has no affect</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">FIQ Interrupt Controller</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44500100...0x445001FF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">The output of this controller is connected to the ARM-CPU1 FIQ input</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/FIQ Interrupt Controller/FIQ Mask Source</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500200</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Masked FIQ Source Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FIQ%20Mask%20Source_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FIQ Mask Source_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FIQ</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reflects the masked status of the FIQ input, (after the enable).<br>0 = This interrupt source is inactive or disabled<br>1 = This interrupt source is enable and active (activating the FIQ output)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/FIQ Interrupt Controller/FIQ Raw Source</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500204</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Raw FIQ Source Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FIQ%20Raw%20Source_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FIQ Raw Source_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FIQ</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reflects
the raw status of the FIQ input, (before the enable). This reflects the
raw status of the IRQ input that is selected with IRQ to FIQ map</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/FIQ Interrupt Controller/FIQ Enable Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500208</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>FIQ Enable Mask</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FIQ%20Enable%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FIQ Enable Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FIQ</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Write with 1 to set FIQ enable, writes with 0 have no affect</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/FIQ Interrupt Controller/FIQ Disable Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4450020C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>FIQ Disable Mask</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FIQ%20Disable%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FIQ Disable Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FIQ</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Write with 1 to clear FIQ enable, writes with 0 have no affect</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/FIQ Interrupt Controller/IRQ to FIQ map</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x445002FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Allows a single IRQ source to be connected as the FIQ source</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('IRQ%20to%20FIQ%20map_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="IRQ to FIQ map_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">IRQ to FIQ</td><td align="center">4:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Index (0 to 31) of the IRQ source to connect to the FIQ source<br>NOTE: This is an index, NOT a bitmask! IRQ indexes are as follows:<br>0 = Unused<br>1 = Software IRQ<br>2 = ARM COMMRX<br>3 = ARM COMMTX<br>4 = Local RPS Timer 1<br>5 = Local RPS Timer 2<br>6 = InfraRed Receiver<br>7 = USB Host<br>8 = GMAC A<br>9 = GMAC B<br>10 = Semaphore A<br>11 = Semaphore B<br>12 = Semaphore C<br>13 = SGDMA Channel 0<br>14 = SGDMA Channel 1<br>15 = SGDMA Channel 2<br>16 = SGDMA Channel 3<br>17 = GMAC A PMT<br>18 = SATA<br>19 = PCIE A<br>20 = PCIE B<br>21 = GPIO A<br>22 = GPIO B<br>23 = UART A<br>24 = UART B<br>25 = Audio<br>26 = Audio Error<br>27 = Video Output<br>28 = GMAC B PMT<br>29 = Secure Digital<br>30 = USB Device<br>31 = Reserved</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">Timer 1</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44500200...0x4450021F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/Timer 1/Timer Load</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500200</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Load</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Load_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Load_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Load value</td><td align="center">23:0</td><td align="center">0x0</td><td align="center">R/W</td><td>The
initial count value to load into the timer. This is also the value that
is loaded into the count value when Enable is set in the Timer Control
register, and also when the counter expires if Re-load mode is set to 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/Timer 1/Timer Current Count</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500204</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Current Count</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Current%20Count_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Current Count_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Current Count</td><td align="center">23:0</td><td align="center">0xFFFFFF</td><td align="center">R</td><td>The current count of the timer</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/Timer 1/Timer Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500208</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Enable</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>When
this bit is set, the counter value is loaded from the Timer Load
register, and begins counting down. When the value reaches zero, the
Timer IRQ will be activated.</td></tr>
<tr><td align="center">Re-load Mode</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>Determines the behaviour of the count value when it reaches zero:<br>0 = The count value is re-loaded with 0xFFFFFF<br>1 = The count is re-loaded with the contents of the Timer Load register</td></tr>
<tr><td align="center">Prescale Divider</td><td align="center">3:2</td><td align="center">0x0</td><td align="center">R/W</td><td>The number of system timer ticks that are required to decrement the timer by 1<br>The system timer tick is a fixed period tick of 160ns (6.25MHz)<br>0 = 1 (160ns)<br>1 = 16 (2.56us)<br>2 = 256 (40.96us)<br>3 = Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/Timer 1/Timer Clear Interrupt</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4450020C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Any write to the register will de-activate the Timer IRQ</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Clear%20Interrupt_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Clear Interrupt_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">Timer 2</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44500220...0x4450023F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/Timer 2/Timer Load</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500220</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Load</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Load_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Load_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Load value</td><td align="center">23:0</td><td align="center">0x0</td><td align="center">R/W</td><td>The
initial count value to load into the timer. This is also the value that
is loaded into the count value when Enable is set in the Timer Control
register, and also when the counter expires if Re-load mode is set to 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/Timer 2/Timer Current Count</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500224</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Current Count</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Current%20Count_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Current Count_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Current Count</td><td align="center">23:0</td><td align="center">0xFFFFFF</td><td align="center">R</td><td>The current count of the timer</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/Timer 2/Timer Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44500228</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Timer Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Enable</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>When
this bit is set, the counter value is loaded from the Timer Load
register, and begins counting down. When the value reaches zero, the
Timer IRQ will be activated.</td></tr>
<tr><td align="center">Re-load Mode</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>Determines the behaviour of the count value when it reaches zero:<br>0 = The count value is re-loaded with 0xFFFFFF<br>1 = The count is re-loaded with the contents of the Timer Load register</td></tr>
<tr><td align="center">Prescale Divider</td><td align="center">3:2</td><td align="center">0x0</td><td align="center">R/W</td><td>The number of system timer ticks that are required to decrement the timer by 1<br>The system timer tick is a fixed period tick of 160ns (6.25MHz)<br>0 = 1 (160ns)<br>1 = 16 (2.56us)<br>2 = 256 (40.96us)<br>3 = Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/Timer 2/Timer Clear Interrupt</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4450022C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Any write to the register will de-activate the Timer IRQ</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20Clear%20Interrupt_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer Clear Interrupt_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">Miscellaneous Registers</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44500300...0x445003FF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">&nbsp;</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/Miscellaneous Registers/Chip configuration</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x445006C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Chip configuration bitfield, bits defined as follows:<br>0  : Dual CPU?<br>1  : ETHA Included?<br>2  : NETOEA Included?<br>3  : ETHB Included?<br>4  : NETOEB Included?<br>5  : PCIEA Included?<br>6  : PCIEB Included?<br>7  : CIPHER Included?<br>8  : USBMPH Included?<br>9  : USBDEV Included?<br>10 : SATA Included?<br>11 : Dual SATA?<br>12 : SATA CIPHER Included?<br>13 : Samsung SATA PHY?<br>14 : LEON is sysx2 capable?<br>15 : LEON Included?<br>16 : SD_COMBO Included?<br>17 : AUDIO Included?<br>18 : STATIC Included?<br>19 : DDR Included?<br>20 : UARTB Included?<br>21 : FANTACHO Included?<br>22 : IRRX Included?<br>23 : ETM_MONITORS Included?<br>24 : DDR AHBS4 Included?<br>25 : ARM uses DDR AHBS4?<br>26 : reserved<br>27 : reserved<br>28 : reserved<br>29 : RGMII Capable? SHOULD BE 1<br>30 : reserved<br>31 : BOOTROM_we_n_gate</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Chip%20configuration_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Chip configuration_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>RPSC/Miscellaneous Registers/Chip ID Register</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x445006FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Chip ID, Reads back 0x38323500 for PLXNAS7825, 0x38323000 for PLXNAS7820,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Chip%20ID%20Register_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Chip ID Register_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">FANTACHO</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44600000...0x446FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Fan tachmeter/thermistor controller</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('FANTACHO_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="FANTACHO_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>FANTACHO/Fan tacho counter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44600000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Fan tacho counter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Fan%20tacho%20counter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Fan tacho counter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field17</td><td align="center">31:17</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">R</td><td>Fan Counter Valid (used for One-Shot mode)</td></tr>
<tr><td align="center">Field10</td><td align="center">15:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field00</td><td align="center">9:00</td><td align="center">&nbsp;</td><td align="center">R</td><td>Fan counter value. (See text for conversion to rpm)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>FANTACHO/Thermistor RC counter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44600004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Thermistor RC counter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Thermistor%20RC%20counter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Thermistor RC counter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field10</td><td align="center">31:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field00</td><td align="center">9:00</td><td align="center">&nbsp;</td><td align="center">R</td><td>Thermistor counter value (See text for conversion to temperature)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>FANTACHO/Thermistor control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44600008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Thermistor control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Thermistor%20control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Thermistor control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field2</td><td align="center">31:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>THERM_VALID<br>1 � THERM_COUNT value is valid</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>THERM_ENABLE<br>Set to 1 to enable thermistor PWM output</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>FANTACHO/Clock divider</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4460000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The
default clock divider ratio is set by a generic dependant upon the pclk
value. The Generic value should aim to gives an approximate 128KHz
clock.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Clock%20divider_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Clock divider_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Core Version<br>0x0000 = First core used in OX800 &amp; UFS936QS<br>0x0100 = Second core used in OX810<br>"0x0200 = Third core used in J144, K149 etc."</td></tr>
<tr><td align="center">Field00</td><td align="center">15:00</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Clock Divider<br>set effective clock frequency to a division of pclk<br>0x0000 = pclk divided by 1 (=pclk)<br>0x0001 = pclk divided by 2<br>�<br>0x1023 =  pclk divided by 1024<br>Reset value is dependent on GENERIC.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>FANTACHO/Fan tacho control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44600010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This register is not present in Core version 0x0000 and has an extra field for version 0x0100</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Fan%20tacho%20control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Fan tacho control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">31:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>Fan Tacho Mode<br>�0� = Continuous running mode<br>�1� = One-Shot mode</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>FANTACHO/Fan tacho one-shot control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44600014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This register is not present in Core version 0x0000.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Fan%20tacho%20one-shot%20control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Fan tacho one-shot control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">31:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Start One-Shot Tacho<br>�1� = initiate a one-shot FAN tacho measurement. (Self clearing)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>FANTACHO/Fan Motor PWM divider</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44600018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This register is not present in Core version 0x0000 or 0x01000.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Fan%20Motor%20PWM%20divider_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Fan Motor PWM divider_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field00</td><td align="center">15:00</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PWM Clock Divider<br>set effective clock frequency to a division of pclk<br>0x0000 = pclk divided by 1 (=pclk)<br>0x0001 = pclk divided by 2<br>�<br>0x1023 =  pclk divided by 1024</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>FANTACHO/Fan Motor PWM value</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4460001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This register is not present in Core version 0x0000 or 0x01000.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Fan%20Motor%20PWM%20value_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Fan Motor PWM value_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field8</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PWM Value</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">DDR</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44700000...0x4477FFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">DDR2 SDRAM controller</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('DDR_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="DDR_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/Configuration</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>General SDRAM type configuration</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Configuration_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Configuration_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CFG_MODE</td><td align="center">31:30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CFG_MODE : Obsolete<br>Formerly specifed the SDRAM type. Now only DDR2 supported.<br>00 = SDR<br>01 = DDR<br>10 = DDR2<br>11 = Reserved</td></tr>
<tr><td align="center">Reserved</td><td align="center">29:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">CFG_BANKS8</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Specify number of banks in SDRAM<br>'0' = 4 bank<br>'1' = 8-bank (1 and 2 Gb DDR2s)</td></tr>
<tr><td align="center">CFG_WIDTH</td><td align="center">22:21</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Obsolete to specify SDRAM width<br>Only 16-bit wide memory is supported.<br>Note: this is the width per rank (i.e. per chip select).<br>A
16-bit wide memory may be formed by two 8-bit wide SDRAMs side-by-side
if the number of banks, rows and columns are such that it looks like a
single 16-bit wide memory to the controller.</td></tr>
<tr><td align="center">CFG_SIZE</td><td align="center">20:17</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CFG_SIZE : Specify SDRAM size per rank<br>0000 = Reserved<br>0001 = 16 Mbits (2 MBytes)<br>0010 = 32 Mbits (4 MBytes)<br>0011 = 64 Mbits (8 MBytes)<br>0100 = 128 Mbits (16 MBytes)<br>0101 = 256 Mbits (32 MBytes)<br>0110 = 512 Mbits (64 MBytes)<br>0111 = 1024 Mbits (128 MBytes)<br>1000 = 2048 Mbits (256 MBytes)</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CFG_REFRESH_ENABLE<br>"Refresh
Enable. When set, refresh commands will be send to the SDRAM at the
interval set by CFG_REFRESH_RATE. The reset state of this bit is
cleared, but should be set for normal operation (after initialisation
has completed). The first refresh will occur immediately after setting
this bit. Further ones occur at the specified interval."<br>'0' = Disabled<br>'1' = Enabled</td></tr>
<tr><td align="center">CFG_REFRESH_RATE</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>The
number of DDR_CK SDRAM clock cycles between refresh commands
automatically issued to the SDRAM whenever CFG_REFRESH_ENABLE is set<br>Period is typically 15.6us for DDR, 7.8us for DDR2.<br>The reset value for this register is 0 which is invalid.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/Block_Enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Enabling of controller and client interfaces</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Block_Enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Block_Enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">BLKEN_DDR</td><td align="center">31</td><td align="center">0x0</td><td align="center">R/W</td><td>BLKEN_DDR<br>When
BLKEN_DDR=0 (the default value), the client-adapters, the arbiter, the
sequencer, the read-data capturer and the monitor are held in reset.<br>'0' = Disabled<br>'1' = Enabled</td></tr>
<tr><td align="center">Reserved</td><td align="center">30:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">BLKEN_CLIENT</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td><br>When
BLKEN_CLIENT(i)=0 (the default value), the client-interface block for
client i is held in reset. It must be brought out of reset to allow the
client to make requests."<br>'0' = Disabled<br>'1' = Enabled<br>Client 0: ARM Instruction Read<br>Client 1: ARM Instruction Write<br>Client 2: ARM Data Read<br>Client 3: ARM Data Write<br>Client 4: SATA<br>Client 5: 'other': USBMPH, USBDEV, PCIEA, PCIEB, DMA, LEON<br>Client 6: 'Ethernet': ETHA/ETHB/NETOEA/NETOEB<br>Client 7: VIDEO</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">STAT_BUSY</td><td align="center">31</td><td align="center">0x0</td><td align="center">R</td><td>STAT_BUSY<br>The STAT_BUSY flag may be asserted for any of the following reasons:<br>(1)
Command pending. A command has been requested but has not been
processed yet. (Firmware should poll STAT_BUSY prior to issuing
commands.)<br>(2) Requests outstanding. Not all clients' Request_FIFOs are empty.<br>'0' = Idle<br>'1' = Busy</td></tr>
<tr><td align="center">Reserved</td><td align="center">30:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">STAT_ID</td><td align="center">23:16</td><td align="center">0x5</td><td align="center">R</td><td>Version Identification<br>OXE800 = 0x02<br>OXE810 = 0x04<br>PLX771x,PLX782x, = 0x05</td></tr>
<tr><td align="center">Reserved</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/Command</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4470000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Command</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Command_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Command_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CMD_REQUEST</td><td align="center">31</td><td align="center">0x0</td><td align="center">W</td><td>CMD_REQUEST<br>'1' = Issue Command<br>Commands can be issued directly to the SDRAM(s) via the CMD register. Writing to the register will initiate a command.<br>Commands
that may be needed to be issued on start-up prior to use include 'load
mode register' and 'precharge (all banks)'. Commands that may be
required subsequently include 'self-refresh' (prior to going into SDRAM
power down mode).<br>The value programmed into an SDRAM's Mode register
select burst length, burst type and CAS latency. DDR SDRAM's may also
have an 'Extended Mode' register which can reduce I/O drive strength or
disable the internal DLL.<br>If CMD_REQUEST is asserted, a single
command will be issued (i.e. the values of CMD_CS, CMD_CKE, CMD_RAS,
CMD_CAS, CMD_WE, CMD_BA and CMD_A will be put onto the respective SDRAM
pins for one clock cycle) and then NOP's will be resumed (assuming the
Arbiter is idle).</td></tr>
<tr><td align="center">Reserved</td><td align="center">30:25</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">CMD_BA</td><td align="center">24</td><td align="center">0x0</td><td align="center">R/W</td><td>Command value of SDRAM CMD_BA(2) (Bank Address) pin</td></tr>
<tr><td align="center">CMD_CS_N</td><td align="center">23:22</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Command value of SDRAM CS (chip select) pin(s)</td></tr>
<tr><td align="center">CMD_CKE</td><td align="center">21</td><td align="center">0x0</td><td align="center">R/W</td><td>Command value of SDRAM CKE (clock enable) pin<br>Unlike
other command values, the CMD_CKE value is sticky and will be held at
the previously programmed value. This permits the proper transition
between normal and 'self-refresh' (power down) SDRAM modes.</td></tr>
<tr><td align="center">CMD_RAS_N</td><td align="center">20</td><td align="center">0x0</td><td align="center">R/W</td><td>Command value of SDRAM RAS_N (Row Address Strobe) pin</td></tr>
<tr><td align="center">CMD_CAS_N</td><td align="center">19</td><td align="center">0x0</td><td align="center">R/W</td><td>Command value of SDRAM CAS_N (Column Address Strobe) pin</td></tr>
<tr><td align="center">CMD_WE_N</td><td align="center">18</td><td align="center">0x0</td><td align="center">R/W</td><td>Command value of SDRAM WE_N (Write Enable) pin</td></tr>
<tr><td align="center">CMD_BA</td><td align="center">17:16</td><td align="center">0x0</td><td align="center">R/W</td><td>Command value of SDRAM BA(1:0) (Bank Address) pins</td></tr>
<tr><td align="center">Reserved</td><td align="center">15:14</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">CMD_A</td><td align="center">13:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Command value of SDRAM A (Address) pins</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/AHB</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Client interface control: caching</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('AHB_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="AHB_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">AHB_NO_RCACHE</td><td align="center">30:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB_NO_RCACHE(i) : Selectively disable read cache of AHB client(i)<br>'0' = Read Cache Enabled<br>'1' = Read Cache Disabled</td></tr>
<tr><td align="center">AHB_INVALIDATE_RCACHE</td><td align="center">14:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>AHB_INVALIDATE_RCACHE(i) : Invalidate read cache of AHB client(i)<br>Setting
AHB_INVALIDATE_RCACHE(i) will cause the read buffer of client it's AHB
interfaces to become invalidated, forcing the controller to re-fetch
any access that might 'hit' the buffers currently buffered address.
AHB_INVALIDATE_RCACHE bits are self-clearing and have no effect if
there is no client to correspond to the bit or that client is a
'direct' client.<br>'1' = Invalidate Read Cache</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/DLL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Obsolete</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DLL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DLL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">ITRANGE,31:0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved - was used in OXE800</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/MON</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The register controls the monitoring of SDRAM diagnostic values.<br>Diagnostics
are collected over a refresh period, determined by CFG_REFRESH_RATE
(there are typically 4096 refresh periods every 64ms, or one every
15.625us).<br>Writing to the MON register will arm the monitor and reset the counters in the DIAG register.<br>At
the start of the next refresh command, the counters will be enabled. At
the start of the following refresh command the counters will be
stopped. The diagnostic counters should then be read.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MON_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MON_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:5</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">MON_ALL</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>MON_ALL<br>'0' = Monitor Client specified by MON CLIENT field<br>'1' = Monitor All clients<br>When
MON_ALL is set, the diagnostics counters will increment regardless of
the client. When MON_ALL is clear, they will only increment when the
current client matches the value in MON_CLIENT.</td></tr>
<tr><td align="center">MON_CLIENT</td><td align="center">3:0</td><td align="center">0x0</td><td align="center">R/W</td><td>Specifies which client will be monitored.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/DIAG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4470001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This read-only register returns diagnostic values controlled by the MON register. See the MON register for more detail.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIAG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIAG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">DIAG_Hold_offs_counter</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>DIAG_Hold_offs_counter<br>When
enabled, this counter is incremented on every CK cycle that the SDRAM
controller wants to start an access (read or write) from the selected
client(s) but is unable to do so. This will be because of a bank or
data-bus clash.</td></tr>
<tr><td align="center">DIAG_WRITES_COUNTER</td><td align="center">19:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>When
enabled, this counter is incremented when the SDRAM controller is about
to start a write originating from the selected client(s).</td></tr>
<tr><td align="center">DIAG_READS_COUNTER</td><td align="center">9:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>When
enabled, this counter is incremented when the SDRAM controller is about
to start a read originating from the selected client(s).</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/DIAG2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This read-only register returns diagnostic values controlled by the MON register. See the MON register for more detail.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DIAG2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DIAG2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">DIAG2_DIRCHANGES</td><td align="center">9:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Access Direction Changes counter<br>When
enabled, this counter is incremented whenever the SDRAM transfer
direction changes from a write to a read, or vice-versa, for a transfer
originating from the selected client(s).</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/IOC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>IOC</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('IOC_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="IOC_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved - was used in OXE800</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/ARB</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Arbiter control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ARB_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ARB_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">ARB_CLIENT_MIDBUFF_EN</td><td align="center">31:16</td><td align="center">0xFFFF</td><td align="center">R/W</td><td>Arbiter mid-buffer follow-on prioritisation<br>'0' = Disable mid-buffer follow-on prioritisation in arbiter for client i<br>'1' = Enable mid-buffer follow-on prioritisation in arbiter for client i</td></tr>
<tr><td align="center">Field5</td><td align="center">15:5</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">ARB_MID_BUF_EN</td><td align="center">4</td><td align="center">0x1</td><td align="center">R/W</td><td>Arbiter mid-buffer follow-on prioritisation<br>'0' = Disable mid-buffer follow-on prioritisation in arbiter for all clients<br>'1' = Enable mid-buffer follow-on prioritisation in arbiter for all clients</td></tr>
<tr><td align="center">ARB_LRUBANK_EN</td><td align="center">3</td><td align="center">0x1</td><td align="center">R/W</td><td>Arbiter least-recently-used bank prioritisation<br>'0' = Disable least-recently-used bank prioritisation in arbiter<br>'1' = Enable least-recently-used bank prioritisation in arbiter</td></tr>
<tr><td align="center">ARB_REQAGE_EN</td><td align="center">2</td><td align="center">0x1</td><td align="center">R/W</td><td>Arbiter age-of-request prioritisation<br>'0' = Disable age-of-request prioritisation in arbiter<br>'1' = Enable age-of-request prioritisation in arbiter</td></tr>
<tr><td align="center">ARB_DATDIR_EN</td><td align="center">1</td><td align="center">0x1</td><td align="center">R/W</td><td>Arbiter data direction prioritisation<br>'0' = Disable data direction prioritisation in arbiter<br>'1' = Enable data direction prioritisation in arbiter</td></tr>
<tr><td align="center">ARB_DATDIR_NCH</td><td align="center">0</td><td align="center">0x1</td><td align="center">R/W</td><td>Arbiter data direction prioritisation<br>'0' = Priority is given to writes<br>'1' = Arbiter tries to avoid changing the access data direction (reads to writes and vice versa)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/AHB2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4470002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Client interface control: Wrapping and protection</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('AHB2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="AHB2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">AHB_IGNORE_WRAP</td><td align="center">30:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB_IGNORE_WRAP(i) : Selectively disable WRAP4/8 burst acceleration for AHB client(i)<br>Selectively
disable the more efficient ordering of WRAP4 and WRAP8 accesses for
client i. This is a debug feature. For normal operation, keep these
bits cleared."<br>'0' = WRAP burst acceleration enabled (normal)<br>'1' = WRAP burst acceleration disabled</td></tr>
<tr><td align="center">AHB_IGNORE_HPROT</td><td align="center">14:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB_IGNORE_HPROT(i) : Selectively disable non-bufferable write detection for AHB client(i)<br>Selectively
disable the non bufferable write detection for client i. When this bit
is set for a client, the client will ignore HPROT i.e. even if a write
is marked as non-bufferable, it will be entered into the client buffer
without hold off and the write will complete at some time in the
future."<br>Clearing this bit causes the client interface to hold off
(stall) the client until a non-bufferable write has actually completed.
This is less efficient, but safer in terms of coherency issues.
Bufferable writes are unaffected (not stalled). These bits are cleared
by default."<br>'0' = HPROT non-bufferable write detection enabled<br>'1' = HPROT non-bufferable write detection disabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/Busy</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Busy</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Busy_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Busy_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved<br>Busy bits from client AHB interfaces. Each bit indicates that its client has deasserted hready, or has buffered writes pending.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/Timing0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Sequencer timing</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timing0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timing0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:28</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">TIM_HOLDOFF_CMD_PC</td><td align="center">27:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time precharge n to new cmd</td></tr>
<tr><td align="center">TIM_HOLDOFF_CMD_W</td><td align="center">23:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time Active n via Write n to Active m for Write m</td></tr>
<tr><td align="center">TIM_HOLDOFF_CMD_R</td><td align="center">19:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time Active n via Read n to Active m for Read m</td></tr>
<tr><td align="center">TIM_HOLDOFF_CMD_LM</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time Load Mode to new cmd</td></tr>
<tr><td align="center">TIM_HOLDOFF_CMD_N</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reserved. Hold off time Nop (not used)</td></tr>
<tr><td align="center">TIM_HOLDOFF_CMD_ARW</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time Active n to Read/Write n</td></tr>
<tr><td align="center">TIM_HOLDOFF_CMD_A</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time Active n to Active m</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/Timing1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Sequencer timing</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timing1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timing1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">TIM_HOLDOFF_DIR_WR</td><td align="center">31:28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time Active n via Write n to Active m for Read m</td></tr>
<tr><td align="center">TIM_HOLDOFF_DIR_RW</td><td align="center">27:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time Active n via Read n to Active m for Write m</td></tr>
<tr><td align="center">TIM_HOLDOFF_BANK_W</td><td align="center">21:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time Active n via Write n to Active n</td></tr>
<tr><td align="center">TIM_HOLDOFF_BANK_R</td><td align="center">13:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time Active n via Read n to Active n</td></tr>
<tr><td align="center">TIM_HOLDOFF_CMD_RF</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time Refresh n to Active n</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/Timing2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4470003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Sequencer timing</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timing2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timing2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">32:21</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">TIM_WIDTH_UPDATE</td><td align="center">20:16</td><td align="center">0x9</td><td align="center">R/W</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">14:13</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">TIM_HOLDOFF_FAW</td><td align="center">12:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hold off time Four Actives (when 8 banks)</td></tr>
<tr><td align="center">TIM_LATENCY_WL</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Write latency</td></tr>
<tr><td align="center">TIM_LATENCY_CAS</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CAS latency</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/AHB3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Client interface control: Caching and burst order</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('AHB3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="AHB3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">AHB_DIS_NONCACHE</td><td align="center">30:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB_DIS_NONCACHE(i) : Disables READ cache for non-cacheable reads on AHB client(i)<br>Selectively
disable the ability of the read cache to address hit on non-sequential
access data for client i. When this bit is set for a client, the
DDR_AHB_IF will fetch the requested data from the DRAM if the
non-sequential access is flagged as NON_CACHEABLE according to HPROT
bit 3. Ability to drive HPROT(3) is dependant on AHB master."<br>'0' = All reads cached. AHB HPROT(3) ignored.<br>'1' = Reads cached only if AHB HPROT(3) is set.</td></tr>
<tr><td align="center">BURST_ORDER_DISABLE</td><td align="center">14:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>BURST_ORDER_DISABLE(i) : Disable the fetching of data in optimal burst order for client(i)<br>'0' = Enabled. 4 quadlet (16 byte) bursts will be fetched in the optimal order for read latency<br>'1' = Disabled. Data will be fetched in linear order incurring greater read latencies.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/AHB4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Client interface control: Caching</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('AHB4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="AHB4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">AHB_WR_BEHIND_EN</td><td align="center">30:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB_WR_BEHIND_EN(i) : Enable write behind protection to invalidate the read buffer of AHB client(i).<br>Selectively
enable the read cache invalidation when a write behind coherency event
occurs for client i. When this bit is set for a client, the DDR_AHB_IF
will invalidate the read cache upon the next non-sequential access
forcing the read to access the DRAM memory even if the read cache is an
address hit.<br>'0' = Write behind protection disabled<br>'1' = Write behind protection enabled</td></tr>
<tr><td align="center">AHB_TIMEOUT_EN</td><td align="center">14:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB_TIMEOUT_EN(i) : Enable simple timeout protection to read buffer of AHB client(i)<br>Selectively
enable the read cache invalidation when a 128 clock timeout event
occurs for client i (0 to 15). When this bit is set for a client, the
DDR_AHB_IF will invalidate the read cache upon the next non-sequential
access forcing the read to access the DRAM memory even if the read
cache is an address hit.<br>'0' = AHB Timeout protection disabled<br>'1' = AHB Timeout protection enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/PHY0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Phy control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PHY0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PHY0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">ctrl_loopback</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>1=Force DDRPHY into loopback mode (for self-test only).</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/PHY0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Obsolete Phy control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PHY0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PHY0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/PHY1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4470004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Obsolete Phy control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PHY1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PHY1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/PHY2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Obsolete Phy control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PHY2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PHY2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/PHY3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Obsolete Phy control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PHY3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PHY3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/ARB_START_AGE0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Arbiter client starting age</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ARB_START_AGE0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ARB_START_AGE0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:29</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Client 3 start age</td><td align="center">28:24</td><td align="center">0xF</td><td align="center">R/W</td><td>Client 3 start age</td></tr>
<tr><td align="center">Reserved</td><td align="center">23:21</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Client 2 start age</td><td align="center">20:16</td><td align="center">0xF</td><td align="center">R/W</td><td>Client 2 start age</td></tr>
<tr><td align="center">Reserved</td><td align="center">15:13</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Client 1 start age</td><td align="center">12:8</td><td align="center">0xF</td><td align="center">R/W</td><td>Client 1 start age</td></tr>
<tr><td align="center">Reserved</td><td align="center">7:5</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Client 0 start age</td><td align="center">4:0</td><td align="center">0xF</td><td align="center">R/W</td><td>Client 0 start age</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/ARB_START_AGE1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4470005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Arbiter client starting age</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ARB_START_AGE1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ARB_START_AGE1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:29</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Client 7 start age</td><td align="center">28:24</td><td align="center">0xF</td><td align="center">R/W</td><td>Client 7 start age</td></tr>
<tr><td align="center">Reserved</td><td align="center">23:21</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Client 6 start age</td><td align="center">20:16</td><td align="center">0xF</td><td align="center">R/W</td><td>Client 6 start age</td></tr>
<tr><td align="center">Reserved</td><td align="center">15:13</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Client 5 start age</td><td align="center">12:8</td><td align="center">0xF</td><td align="center">R/W</td><td>Client 5 start age</td></tr>
<tr><td align="center">Reserved</td><td align="center">7:5</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Client 4 start age</td><td align="center">4:0</td><td align="center">0xF</td><td align="center">R/W</td><td>Client 4 start age</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDR/GENERIC_VALUES</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44700060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDR controller configuration</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GENERIC_VALUES_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GENERIC_VALUES_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">wrbuffaddrbits7</td><td align="center">31:30</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 7 write buffer address bits<br>0=4, 1=5, 2=6 - translates to 4/8/16 quad buffers</td></tr>
<tr><td align="center">wrbuffaddrbits6</td><td align="center">29:28</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 6 write buffer address bits</td></tr>
<tr><td align="center">wrbuffaddrbits5</td><td align="center">27:26</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 5 write buffer address bits</td></tr>
<tr><td align="center">wrbuffaddrbits4</td><td align="center">25:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 4 write buffer address bits</td></tr>
<tr><td align="center">wrbuffaddrbits3</td><td align="center">23:22</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 3 write buffer address bits</td></tr>
<tr><td align="center">wrbuffaddrbits2</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 2 write buffer address bits</td></tr>
<tr><td align="center">wrbuffaddrbits1</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 1 write buffer address bits</td></tr>
<tr><td align="center">wrbuffaddrbits0</td><td align="center">17:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 0 write buffer address bits</td></tr>
<tr><td align="center">rdbuffaddrbits7</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 7 read buffer address bits</td></tr>
<tr><td align="center">rdbuffaddrbits6</td><td align="center">13:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 6 read buffer address bits</td></tr>
<tr><td align="center">rdbuffaddrbits5</td><td align="center">11:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 5 read buffer address bits</td></tr>
<tr><td align="center">rdbuffaddrbits4</td><td align="center">9:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 4 read buffer address bits</td></tr>
<tr><td align="center">rdbuffaddrbits3</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 3 read buffer address bits</td></tr>
<tr><td align="center">rdbuffaddrbits2</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 2 read buffer address bits</td></tr>
<tr><td align="center">rdbuffaddrbits1</td><td align="center">3:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 1 read buffer address bits</td></tr>
<tr><td align="center">rdbuffaddrbits0</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value of client 0 read buffer address bits</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">DDRPHY</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44780000...0x447FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">DDR PHY</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('DDRPHY_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="DDRPHY_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDRPHY/DDRPHY_CTRL_DRAM_PARAM</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44780020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDRPHY_CTRL_DRAM_PARAM</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DDRPHY_CTRL_DRAM_PARAM_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DDRPHY_CTRL_DRAM_PARAM_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_phy_mode_ddr1_ddr2</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">RW</td><td>0 - DDR/mobile_ddr; 1 - DDR2</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDRPHY/DDRPHY_CTRL_ODT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44780048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDRPHY_CTRL_ODT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DDRPHY_CTRL_ODT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DDRPHY_CTRL_ODT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_phy_idle_local_odt</td><td align="center">17:16</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Value to drive on the 2 bit local odt PHY out when PHY is IDLE.<br>00: No termination<br>01: 75 Ohm<br>01: 150 Ohm<br>11: Reserved<br>Normal: no termination when idle</td></tr>
<tr><td align="center">reg_phy_wr_local_odt</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Value
to drive on the 2-bit local_odt PHY outputs when output is enabled for
DQ and DQS Note: This 2-bit value should be connected to the ODT
enable, a.k.a. termination enable, pin(s) on the IO. If the IO has only
one termination enable pin, it is recommended that bit 0 be used from
reg_phy_wr_local_odt and reg_phy_rd_local_odt and bit 0 of the PHY's
local_odt output be connected to the IO pad. Bit 1 will be unused in
these instances.<br>00: No termination<br>01: 75 Ohm<br>01: 150 Ohm<br>11: Reserved<br>Normal: no termination during write</td></tr>
<tr><td align="center">reg_phy_rd_local_odt</td><td align="center">13:12</td><td align="center">&nbsp;</td><td align="center">RW</td><td>Value
to drive on the 2-bit local_odt PHY outputs when output is NOT enabled
on DQ and DQS Note: This 2-bit value should be connected to the ODT
enable, a.k.a. termination enable, pin(s) on the IO. If the IO has only
one termination enable pin, it is recommended that bit 0 be used from
reg_phy_wr_local_odt and reg_phy_rd_local_odt and bit 0 of the PHY's
local_odt output be connected to the IO pad. Bit 1 will be unused in
these instances.<br>00: No termination<br>01: 75 Ohm<br>01: 150 Ohm<br>11: Reserved<br>Normal:
75 Ohm termination during read. This gets applied 3 CK cycles before
first rising read DQS and released 4.5 CK cycles after last falling
read DQS.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDRPHY/DDRPHY_CTRL_DEBUG_STAT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4478004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDRPHY_CTRL_DEBUG_STAT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DDRPHY_CTRL_DEBUG_STAT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DDRPHY_CTRL_DEBUG_STAT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">phy_reg_bc_fifo_re1</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">R</td><td>debug read capture fifo read enable for data slice 1</td></tr>
<tr><td align="center">phy_reg_bc_fifo_we1</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">R</td><td>debug read capture fifo write enable, for data slice 1</td></tr>
<tr><td align="center">phy_reg_bc_dqs_oe1</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">R</td><td>debug dqs output enable for data slice 1</td></tr>
<tr><td align="center">phy_reg_bc_dq_oe1</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">R</td><td>debug dq output enable for data slice 1</td></tr>
<tr><td align="center">phy_reg_bc_fifo_re0</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R</td><td>debug read capture fifo read enable for data slice 0</td></tr>
<tr><td align="center">phy_reg_bc_fifo_we0</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R</td><td>debug read capgure fifo write enable, for data slice 0</td></tr>
<tr><td align="center">phy_reg_bc_dqs_oe0</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R</td><td>debug dqs output enable for data slice 0</td></tr>
<tr><td align="center">phy_reg_bc_dq_oe0</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R</td><td>debug dq output enable for data slice 0</td></tr>
<tr><td align="center">phy_reg_rdc_fifo_rst_err_cnt</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Value
of the counter that counts the number of times the Read Data Capture
FIFO has been reset when the FIFO was not empty. The counter saturates
at 0xF and can be cleared by setting rdc_fifo_rst_err_cnt_clr bit to 1.
The FIFO is reset whenever a DLL calibration is done and
reg_phy_rdc_fifo_rst_disable=0. Setting reg_phy_rds_fifo_rst_disable=1
will disable this reset mechanism, therefore disabling any counting of
reset errors</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDRPHY/DDRPHY_CTRL_CMD</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44780050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDRPHY_CTRL_CMD</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DDRPHY_CTRL_CMD_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DDRPHY_CTRL_CMD_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_phy_use_fixed_re</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>When 1: Indicates PHY to use fixed re delay method. When 0: PHY uses the not_empty method to do the read enable</td></tr>
<tr><td align="center">reg_phy_rdc_fifo_rst_disable</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>When 1, disable counting the number of times the Read Data Capture FIFO has been reset when the FIFO was not empty.</td></tr>
<tr><td align="center">reg_phy_rdc_fifo_rst_err_cnt_clr</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>When
1, clear the counter that counts the number of times the Read Data
Capture FIFO has been reset when the FIFO was not empty
(phy_reg_rdc_fifo_rst_err_cnt). Applicable only when
reg_phy_rdc_fifo_rst_disable=0</td></tr>
<tr><td align="center">reg_phy_rdc_we_to_re_delay</td><td align="center">9:8</td><td align="center">0x2</td><td align="center">R/W</td><td>This
register value + 1 gives the number of clock cycles between writing
into the Read Capture FIFO and the read operation. This is used only if
reg_phy_use_fixed_re=1</td></tr>
<tr><td align="center">reg_phy_wr_cmd_to_data</td><td align="center">7:4</td><td align="center">0x3</td><td align="center">R/W</td><td>Write
Latency. Number of clocks between the write command and first write
data (first rising edge of DQS). This is required to time the DQ output
enable during all write operations DRAM RELATED</td></tr>
<tr><td align="center">reg_phy_rd_cmd_to_data</td><td align="center">3:0</td><td align="center">0x4</td><td align="center">R/W</td><td>DRAM read latency (AL + CL). DRAM RELATED</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDRPHY/DDRPHY_CTRL_WRITE_DLL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44780068</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDRPHY_CTRL_WRITE_DLL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DDRPHY_CTRL_WRITE_DLL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DDRPHY_CTRL_WRITE_DLL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_phy_wl_dll_value0</td><td align="center">9:1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If
reg_phy_wll_dll_force0 is one, replace: Fine value going to Write Slave
0 from the Master DLL with reg_phy_wl_dll_value0[1:0] Coarse Value
going to Write Slave 0 from the Master .</td></tr>
<tr><td align="center">reg_phy_wl_dll_force0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>1:
Overwrite the coarse and fine values calculated by the Master DLL going
to the write slave 0, with the value in the reg_phy_wl_dll_value0 bus
0: Use the value from the Master DLL</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDRPHY/DDRPHY_CTRL_READ_DLL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4478006C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDRPHY_CTRL_READ_DLL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DDRPHY_CTRL_READ_DLL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DDRPHY_CTRL_READ_DLL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_phy_rc_dll_value1</td><td align="center">25:17</td><td align="center">&nbsp;</td><td align="center">RW</td><td>The
coarse and slave delay values that will be overwritten on the Read
Slave DLL1. This will be used when reg_phy_rc_dll_force1 is set to 1</td></tr>
<tr><td align="center">reg_phy_rc_dll_force1</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">RW</td><td> 0  Use the values driven by the master DLL</td></tr>
<tr><td align="center">reg_phy_rc_dll_value0</td><td align="center">9:1</td><td align="center">&nbsp;</td><td align="center">RW</td><td>The
coarse and slave delay values that will be overwritten on the Read
Slave DLL0. This will be used when reg_phy_rc_dll_force0 is set to 1</td></tr>
<tr><td align="center">reg_phy_rc_dll_force0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>0  Use the values driven by the master DLL</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDRPHY/DDRPHY_ CTRL_WRITE_RATIO</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44780074</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDRPHY_ CTRL_WRITE_RATIO</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DDRPHY_%20CTRL_WRITE_RATIO_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DDRPHY_ CTRL_WRITE_RATIO_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_phy_wr_slave_ratio0</td><td align="center">7:0</td><td align="center">0x40</td><td align="center">RW</td><td>For eg: 255: slave is 255/256 of master delay (almost 1 clock cycle) 1: slave is 1/256 of the master delay</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDRPHY/DDRPHY_ CTRL_READ_RATIO</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44780078</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDRPHY_ CTRL_READ_RATIO</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DDRPHY_%20CTRL_READ_RATIO_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DDRPHY_ CTRL_READ_RATIO_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_phy_rd_slave_ratio1</td><td align="center">15:8</td><td align="center">0x40</td><td align="center">RW</td><td>For eg: 255: slave is 255/256 of master delay (almost 1 clock cycle) 1: slave is 1/256 of the master delay</td></tr>
<tr><td align="center">reg_phy_rd_slave_ratio0</td><td align="center">7:0</td><td align="center">0x40</td><td align="center">RW</td><td>DLL slave/master ratio control for Read Slave 0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDRPHY/DDRPHY_CTRL_DLL_STAT1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4478007C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDRPHY_CTRL_DLL_STAT1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DDRPHY_CTRL_DLL_STAT1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DDRPHY_CTRL_DLL_STAT1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">phy_reg_master_dll_0_slave_value</td><td align="center">9:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>[1:0]  Fine value out of Master DLL 0 [8:2]  Coarse value out of Master DLL 0</td></tr>
<tr><td align="center">phy_reg_master_dll_0_lock</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>1  Master DLL 0 is in Lock 0  Master DLL 0 is not in Lock</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDRPHY/DDRPHY_CTRL_DLL_STAT2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44780080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDRPHY_CTRL_DLL_STAT2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DDRPHY_CTRL_DLL_STAT2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DDRPHY_CTRL_DLL_STAT2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">phy_reg_debug_wr_slave_dll_value</td><td align="center">26:18</td><td align="center">&nbsp;</td><td align="center">R</td><td>Write slave dll delay value</td></tr>
<tr><td align="center">phy_reg_rc_dll_slave_value1</td><td align="center">17:9</td><td align="center">&nbsp;</td><td align="center">R</td><td>[1:0]
Fine value [8:2] Coarse value This is the value which is actually going
to the read slave 1 (after going through adjustment and forcing logic)</td></tr>
<tr><td align="center">phy_reg_rc_dll_slave_value0</td><td align="center">8:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>[1:0]
Fine value [8:2] Coarse value This is the value which is actually going
to the read slave 0 (after going through adjustment and forcing logic)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DDRPHY/DDRPHY_CTRL_DLL_STAT3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44780088</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DDRPHY_CTRL_DLL_STAT3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DDRPHY_CTRL_DLL_STAT3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DDRPHY_CTRL_DLL_STAT3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">phy_reg_of_out_delay_value_0</td><td align="center">19:11</td><td align="center">&nbsp;</td><td align="center">R</td><td>Delay value coming out of the output filter in Master DLL 0</td></tr>
<tr><td align="center">phy_reg_of_in_delay_value_0</td><td align="center">10:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Delay value going into the output filer in Master DLL 0 [17:16]  Fine value</td></tr>
<tr><td align="center">phy_reg_of_in_lock_state_0</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Lock state of the Master DLL 0 [28]  Fine locked [29]  Coarse locked</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">IRRX</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44800000...0x448FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Infrared remote receiver</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('IRRX_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="IRRX_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>IRRX/Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44800000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Unused</td><td align="center">31:21</td><td align="center">&nbsp;</td><td align="center">-</td><td>Unused</td></tr>
<tr><td align="center">CPU_CLEAR_COUNT</td><td align="center">20</td><td align="center">0x0</td><td align="center">W</td><td>Setting this (Self clearing) bit will reset the tick counter to ZERO</td></tr>
<tr><td align="center">FALLING_TRIGGER</td><td align="center">19</td><td align="center">0x0</td><td align="center">R/W</td><td>When set the following occurs every falling edge of the input:<br>� Tick counter is transferred to DELTA_TIME<br>� PREV_PIN_STATE is set to '1'<br>� An Interrupt is generated</td></tr>
<tr><td align="center">RISING_TRIGGER</td><td align="center">18</td><td align="center">0x0</td><td align="center">R/W</td><td>When set the following occurs every rising edge of the input:<br>� Tick counter is transferred to DELTA_TIME<br>� PREV_PIN_STATE is set to '0'<br>� An Interrupt is generated</td></tr>
<tr><td align="center">FALLING_CLEARS_COUNT</td><td align="center">17</td><td align="center">0x0</td><td align="center">R/W</td><td>When set a falling edge will reset the tick counter to ZERO (AFTER it has been transferred to DELTA_TIME where appropriate)</td></tr>
<tr><td align="center">RISING_CLEARS_COUNT</td><td align="center">16</td><td align="center">0x0</td><td align="center">R/W</td><td>When set a rising edge will reset the tick counter to ZERO (AFTER it has been transferred to DELTA_TIME where appropriate)</td></tr>
<tr><td align="center">Unused</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">-</td><td>Unused</td></tr>
<tr><td align="center">PRESCALE_DIVIDER</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets division of PCLK clock used for tick counter increment.<br>Set to (MHz clock speed � 1) to get 1us resolution.<br>Other settings may be used if required.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>IRRX/Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44800040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Unused</td><td align="center">31:19</td><td align="center">&nbsp;</td><td align="center">-</td><td>Unused</td></tr>
<tr><td align="center">POST_TRIG_PIN_STATE</td><td align="center">18</td><td align="center">0x1</td><td align="center">R</td><td>The state of the input pin after the most recent trigger event<br>0 � last input state was high<br>1 � last input state was low</td></tr>
<tr><td align="center">PRE_TRIG_PIN_STATE</td><td align="center">17</td><td align="center">0x0</td><td align="center">R</td><td>The state of the input pin before the most recent trigger event<br>0 � last input state was high<br>1 � last input state was low</td></tr>
<tr><td align="center">OVERFLOW</td><td align="center">16</td><td align="center">0x0</td><td align="center">R</td><td>Set if more than one trigger has occurred since the last read of the status register This event also generates an interrupt.<br>Reading the status register clears the interrupt.</td></tr>
<tr><td align="center">DELTA_TIME</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>16-bit count of ticks between trigger events specified by bits 19:16 of the control register. Saturates at 0xFFFF<br>(1 tick = PRESCALER_DIVIDER + 1 clock cycles).</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">SATAPHY</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44900000...0x449FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">SATA PHY control/status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('SATAPHY_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="SATAPHY_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATAPHY/CR_STAT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44900000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CR_STAT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CR_STAT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CR_STAT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">cr_read_valid</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface read valid flag.</td></tr>
<tr><td align="center">cr_ack</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface ack response.</td></tr>
<tr><td align="center">cr_read</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface read enable.</td></tr>
<tr><td align="center">cr_write</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface write enable.</td></tr>
<tr><td align="center">cr_cap_data</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface data capture enable.</td></tr>
<tr><td align="center">cr_cap_addr</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface address capture enable.</td></tr>
<tr><td align="center">cr_data_out</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel data out.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATAPHY/CR_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44900000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CR_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CR_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CR_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">cr_data_in</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Parallel data in. Asserts cap_addr to latch address in.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATAPHY/CR_CTRL_DATA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44900004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CR_CTRL_DATA</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CR_CTRL_DATA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CR_CTRL_DATA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">cr_cap_data</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">W</td><td>Parallel interface data capture enable.</td></tr>
<tr><td align="center">cr_write</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">W</td><td>Parallel interface write enable.</td></tr>
<tr><td align="center">cr_read</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">W</td><td>Parallel interface read enable.</td></tr>
<tr><td align="center">cr_data_in</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Parallel data in.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATAPHY/CR_JTAG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44900008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CR_JTAG</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CR_JTAG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CR_JTAG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">cr_jtag_ntrst</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>JTAG NTRST reset</td></tr>
<tr><td align="center">cr_jtag_tdo</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R</td><td>JTAG TDO data out</td></tr>
<tr><td align="center">cr_jtag_tdi</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>JTAG TDI data in</td></tr>
<tr><td align="center">cr_jtag_tms</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>JTAG NTRST mode select</td></tr>
<tr><td align="center">cr_jtag_tck</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>JTAG NTRST clock</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">PCIEPHY</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44A00000...0x44AFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">PCIe PHY control/status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('PCIEPHY_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="PCIEPHY_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEPHY/CR_STAT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44A00000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CR_STAT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CR_STAT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CR_STAT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">cr_read_valid</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface read valid flag.</td></tr>
<tr><td align="center">cr_ack</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface ack response.</td></tr>
<tr><td align="center">cr_read</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface read enable.</td></tr>
<tr><td align="center">cr_write</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface write enable.</td></tr>
<tr><td align="center">cr_cap_data</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface data capture enable.</td></tr>
<tr><td align="center">cr_cap_addr</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel interface address capture enable.</td></tr>
<tr><td align="center">cr_data_out</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Parallel data out.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEPHY/CR_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44A00000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CR_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CR_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CR_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">cr_data_in</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Parallel data in. Asserts cap_addr to latch address in.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEPHY/CR_CTRL_DATA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44A00004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CR_CTRL_DATA</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CR_CTRL_DATA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CR_CTRL_DATA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">cr_cap_data</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">W</td><td>Parallel interface data capture enable.</td></tr>
<tr><td align="center">cr_write</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">W</td><td>Parallel interface write enable.</td></tr>
<tr><td align="center">cr_read</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">W</td><td>Parallel interface read enable.</td></tr>
<tr><td align="center">cr_data_in</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Parallel data in.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEPHY/CR_JTAG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44A00008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CR_JTAG</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CR_JTAG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CR_JTAG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">cr_jtag_ntrst</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>JTAG NTRST reset</td></tr>
<tr><td align="center">cr_jtag_tdo</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R</td><td>JTAG TDO data out</td></tr>
<tr><td align="center">cr_jtag_tdi</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>JTAG TDI data in</td></tr>
<tr><td align="center">cr_jtag_tms</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>JTAG NTRST mode select</td></tr>
<tr><td align="center">cr_jtag_tck</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>JTAG NTRST clock</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">MON</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44D00000...0x44DFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">AMBA bus monitors</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('MON_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="MON_blocks" style="display: none;"><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">ETMIA</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44D00000...0x44D0FFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">ETM monitor for 1st ARM CPU instruction bus,ETM monitor for 1st ARM CPU instruction bus</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIA/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D00000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Enable_counters</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables the monitoring and cycle counting functions</td></tr>
<tr><td align="center">Zero_counters</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Causes all internal counters to be zeroed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIA/Lower Address Bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D00040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower Address Bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20Address%20Bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower Address Bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Addr_lo</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inclusive
lower address of address range to monitor. The hit counter will only
include instructions at addresses greater than or equal to this value</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIA/Upper Address Bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D00080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper Address Bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20Address%20Bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper Address Bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Addr_hi</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inclusive
upper address of address range to monitor. The hit counter will only
include instructions at addresses less than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIA/Cycle Count</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D000C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Cycle Count</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Cycle%20Count_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Cycle Count_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Cycle counter</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>An incrementing count of the number of CPU cycles since the counter was enabled (or last zeroed).<br>Count value saturates at 0xFFFFFFFF</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIA/ Hit Count</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D00100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td> Hit Count</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('%20Hit%20Count_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class=" Hit Count_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Address range hits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>An
incrementing count of the number of executed instructions that fall in
the range defined by Upper &amp; Lower Address Bound registers.<br>Count value saturates at 0xFFFFFFFF</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIA/Miss Count</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D00140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Miss Count</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Miss%20Count_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Miss Count_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Address range misses</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>An
incrementing count of the number of executed instructions that fall
outside the range defined by Upper &amp; Lower Address Bound registers.<br>Count value saturates at 0xFFFFFFFF</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIA/Cycle Counter Zeroing</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D00180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Cycle Counter Zeroing</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Cycle%20Counter%20Zeroing_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Cycle Counter Zeroing_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Cycle counter (zeroing)</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"As cycle counter, but also zeroes all counters immediately after reading."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">ETMIB</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44D10000...0x44D1FFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">ETM monitor for 2nd ARM CPU instruction bus,ETM monitor for 2nd ARM CPU instruction bus</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIB/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D10000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Enable_counters</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables the monitoring and cycle counting functions</td></tr>
<tr><td align="center">Zero_counters</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Causes all internal counters to be zeroed</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIB/Lower Address Bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D10040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower Address Bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20Address%20Bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower Address Bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Addr_lo</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inclusive
lower address of address range to monitor. The hit counter will only
include instructions at addresses greater than or equal to this value</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIB/Upper Address Bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D10080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper Address Bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20Address%20Bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper Address Bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Addr_hi</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inclusive
upper address of address range to monitor. The hit counter will only
include instructions at addresses less than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIB/Cycle Count</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D100C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Cycle Count</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Cycle%20Count_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Cycle Count_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Cycle counter</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>An incrementing count of the number of CPU cycles since the counter was enabled (or last zeroed).<br>Count value saturates at 0xFFFFFFFF</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIB/ Hit Count</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D10100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td> Hit Count</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('%20Hit%20Count_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class=" Hit Count_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Address range hits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>An
incrementing count of the number of executed instructions that fall in
the range defined by Upper &amp; Lower Address Bound registers.<br>Count value saturates at 0xFFFFFFFF</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIB/Miss Count</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D10140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Miss Count</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Miss%20Count_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Miss Count_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Address range misses</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>An
incrementing count of the number of executed instructions that fall
outside the range defined by Upper &amp; Lower Address Bound registers.<br>Count value saturates at 0xFFFFFFFF</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETMIB/Cycle Counter Zeroing</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D10180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Cycle Counter Zeroing</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Cycle%20Counter%20Zeroing_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Cycle Counter Zeroing_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Cycle counter (zeroing)</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"As cycle counter, but also zeroes all counters immediately after reading."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">AXIRA</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44D20000...0x44D2FFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">1st AXI monitor on ARM AR AXI read bus,1st AXI monitor on ARM AR AXI read bus</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D20000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D20080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D200C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/BURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D20100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_burst_match</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for BURST to match after masking.</td></tr>
<tr><td align="center">reg_burst_mask</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�BURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/PROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D20140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_prot_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for PROT to match after masking.</td></tr>
<tr><td align="center">reg_prot_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�PROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D20180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:00</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = Data ID matches<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>0011 = counter 3 (address) trigger<br>0100 = counter 3 (address) increment<br>0101 = Request ID matches<br>0110 = LEN matches<br>0111 = SIZE matches<br>1000 = CACHE matches<br>1001 = counter 2 (waits) increment<br>1010 = counter 1 (data) increment<br>1011 = PROT matches<br>1100 = BURST matches<br>1101 = LOCK matches<br>1110 = ADDR matches<br>1111 = A*VALID &amp; A*READY cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/ID filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D201C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>ID filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ID%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ID filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_id_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for ID to match after masking.</td></tr>
<tr><td align="center">reg_id_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�ID before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/LEN filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D20200</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>LEN filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LEN%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LEN filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_len_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for LEN to match after masking.</td></tr>
<tr><td align="center">reg_len_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�LEN before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/SIZE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D20240</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SIZE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SIZE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SIZE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_size_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for SIZE to match after masking.</td></tr>
<tr><td align="center">reg_size_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�SIZE before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/CACHE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D20280</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CACHE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CACHE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CACHE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_cache_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for CACHE to match after masking.</td></tr>
<tr><td align="center">reg_cache_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�CACHE before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/LOCK filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D202C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>LOCK filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LOCK%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LOCK filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lock_match</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for LOCK to match after masking.</td></tr>
<tr><td align="center">reg_lock_mask</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�LOCK before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D20000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D20040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match ADDR, BURST, CACHE, ID, LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D20080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number
of wait cycles on data transfers that match ADDR, BURST, CACHE, ID,
LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRA/Counter 3: Address cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D200C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 3: Address cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%203:%20Address%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 3: Address cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of address transactions that match ADDR, BURST, CACHE, ID, LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">AXIRB</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44D30000...0x44D3FFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">2nd AXI monitor on ARM AR AXI read bus,2nd AXI monitor on ARM AR AXI read bus</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D30000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D30080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D300C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/BURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D30100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_burst_match</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for BURST to match after masking.</td></tr>
<tr><td align="center">reg_burst_mask</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�BURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/PROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D30140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_prot_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for PROT to match after masking.</td></tr>
<tr><td align="center">reg_prot_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�PROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D30180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:00</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = Data ID matches<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>0011 = counter 3 (address) trigger<br>0100 = counter 3 (address) increment<br>0101 = Request ID matches<br>0110 = LEN matches<br>0111 = SIZE matches<br>1000 = CACHE matches<br>1001 = counter 2 (waits) increment<br>1010 = counter 1 (data) increment<br>1011 = PROT matches<br>1100 = BURST matches<br>1101 = LOCK matches<br>1110 = ADDR matches<br>1111 = A*VALID &amp; A*READY cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/ID filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D301C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>ID filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ID%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ID filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_id_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for ID to match after masking.</td></tr>
<tr><td align="center">reg_id_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�ID before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/LEN filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D30200</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>LEN filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LEN%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LEN filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_len_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for LEN to match after masking.</td></tr>
<tr><td align="center">reg_len_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�LEN before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/SIZE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D30240</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SIZE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SIZE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SIZE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_size_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for SIZE to match after masking.</td></tr>
<tr><td align="center">reg_size_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�SIZE before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/CACHE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D30280</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CACHE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CACHE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CACHE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_cache_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for CACHE to match after masking.</td></tr>
<tr><td align="center">reg_cache_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�CACHE before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/LOCK filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D302C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>LOCK filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LOCK%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LOCK filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lock_match</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for LOCK to match after masking.</td></tr>
<tr><td align="center">reg_lock_mask</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�LOCK before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D30000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D30040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match ADDR, BURST, CACHE, ID, LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D30080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number
of wait cycles on data transfers that match ADDR, BURST, CACHE, ID,
LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIRB/Counter 3: Address cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D300C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 3: Address cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%203:%20Address%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 3: Address cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of address transactions that match ADDR, BURST, CACHE, ID, LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">AXIWA</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44D40000...0x44D4FFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">1st AXI monitor on ARM AW AXI write bus,1st AXI monitor on ARM AW AXI write bus</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D40000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D40080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D400C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/BURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D40100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_burst_match</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for BURST to match after masking.</td></tr>
<tr><td align="center">reg_burst_mask</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�BURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/PROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D40140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_prot_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for PROT to match after masking.</td></tr>
<tr><td align="center">reg_prot_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�PROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D40180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:00</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = Data ID matches<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>0011 = counter 3 (address) trigger<br>0100 = counter 3 (address) increment<br>0101 = Request ID matches<br>0110 = LEN matches<br>0111 = SIZE matches<br>1000 = CACHE matches<br>1001 = counter 2 (waits) increment<br>1010 = counter 1 (data) increment<br>1011 = PROT matches<br>1100 = BURST matches<br>1101 = LOCK matches<br>1110 = ADDR matches<br>1111 = A*VALID &amp; A*READY cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/ID filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D401C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>ID filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ID%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ID filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_id_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for ID to match after masking.</td></tr>
<tr><td align="center">reg_id_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�ID before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/LEN filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D40200</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>LEN filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LEN%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LEN filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_len_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for LEN to match after masking.</td></tr>
<tr><td align="center">reg_len_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�LEN before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/SIZE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D40240</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SIZE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SIZE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SIZE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_size_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for SIZE to match after masking.</td></tr>
<tr><td align="center">reg_size_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�SIZE before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/CACHE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D40280</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CACHE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CACHE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CACHE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_cache_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for CACHE to match after masking.</td></tr>
<tr><td align="center">reg_cache_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�CACHE before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/LOCK filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D402C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>LOCK filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LOCK%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LOCK filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lock_match</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for LOCK to match after masking.</td></tr>
<tr><td align="center">reg_lock_mask</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�LOCK before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D40000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D40040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match ADDR, BURST, CACHE, ID, LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D40080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number
of wait cycles on data transfers that match ADDR, BURST, CACHE, ID,
LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWA/Counter 3: Address cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D400C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 3: Address cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%203:%20Address%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 3: Address cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of address transactions that match ADDR, BURST, CACHE, ID, LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">AXIWB</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44D50000...0x44D5FFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">2nd AXI monitor on ARM AW AXI write bus,2nd AXI monitor on ARM AW AXI write bus</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D50000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D50080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D500C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/BURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D50100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_burst_match</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for BURST to match after masking.</td></tr>
<tr><td align="center">reg_burst_mask</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�BURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/PROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D50140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_prot_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for PROT to match after masking.</td></tr>
<tr><td align="center">reg_prot_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�PROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D50180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:00</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = Data ID matches<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>0011 = counter 3 (address) trigger<br>0100 = counter 3 (address) increment<br>0101 = Request ID matches<br>0110 = LEN matches<br>0111 = SIZE matches<br>1000 = CACHE matches<br>1001 = counter 2 (waits) increment<br>1010 = counter 1 (data) increment<br>1011 = PROT matches<br>1100 = BURST matches<br>1101 = LOCK matches<br>1110 = ADDR matches<br>1111 = A*VALID &amp; A*READY cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/ID filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D501C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>ID filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ID%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ID filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_id_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for ID to match after masking.</td></tr>
<tr><td align="center">reg_id_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�ID before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/LEN filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D50200</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>LEN filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LEN%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LEN filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_len_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for LEN to match after masking.</td></tr>
<tr><td align="center">reg_len_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�LEN before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/SIZE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D50240</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SIZE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SIZE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SIZE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_size_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for SIZE to match after masking.</td></tr>
<tr><td align="center">reg_size_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�SIZE before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/CACHE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D50280</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CACHE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CACHE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CACHE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_cache_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for CACHE to match after masking.</td></tr>
<tr><td align="center">reg_cache_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�CACHE before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/LOCK filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D502C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>LOCK filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LOCK%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LOCK filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lock_match</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for LOCK to match after masking.</td></tr>
<tr><td align="center">reg_lock_mask</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�LOCK before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D50000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D50040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match ADDR, BURST, CACHE, ID, LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D50080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number
of wait cycles on data transfers that match ADDR, BURST, CACHE, ID,
LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/AXIWB/Counter 3: Address cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D500C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 3: Address cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%203:%20Address%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 3: Address cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of address transactions that match ADDR, BURST, CACHE, ID, LEN, LOCK, PROT and SIZE whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">ETHA</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44D60000...0x44D6FFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">AHB monitor</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHA/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D60000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHA/HWRITE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D60040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HWRITE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HWRITE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HWRITE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hwrite_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB writes.</td></tr>
<tr><td align="center">reg_hread_en</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB reads.<br>reg_hread_en &amp; reg_hwrite_en:<br>00b : The data transfer counter is inactive<br>01b : The data transfer counter will count writes<br>10b : The data transfer counter will count reads<br>11b : The data transfer counter will count reads and writes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHA/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D60080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHA/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D600C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHA/HBURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D60100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HBURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HBURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HBURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hburst_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HBURST to match after masking.</td></tr>
<tr><td align="center">reg_hburst_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HBURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHA/HPROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D60140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HPROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hprot_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HPROT to match after masking.</td></tr>
<tr><td align="center">reg_hprot_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HPROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHA/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D60180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = counter 0 (cycles) trigger =1<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>1001 = HREADY<br>1010 = qualified data phase (from HTRANS to last data transfer)<br>1011 = HPROT matches<br>1100 = HBURST matches<br>1101 = HWRITE matches<br>1110 = HADDR matches<br>1111 = Valid HTRANS cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHA/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D60000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHA/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D60040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHA/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D60080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of wait cycles on data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">ETHB</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44D70000...0x44D7FFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">AHB monitor</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHB/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D70000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHB/HWRITE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D70040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HWRITE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HWRITE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HWRITE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hwrite_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB writes.</td></tr>
<tr><td align="center">reg_hread_en</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB reads.<br>reg_hread_en &amp; reg_hwrite_en:<br>00b : The data transfer counter is inactive<br>01b : The data transfer counter will count writes<br>10b : The data transfer counter will count reads<br>11b : The data transfer counter will count reads and writes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHB/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D70080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHB/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D700C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHB/HBURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D70100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HBURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HBURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HBURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hburst_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HBURST to match after masking.</td></tr>
<tr><td align="center">reg_hburst_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HBURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHB/HPROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D70140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HPROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hprot_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HPROT to match after masking.</td></tr>
<tr><td align="center">reg_hprot_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HPROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHB/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D70180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = counter 0 (cycles) trigger =1<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>1001 = HREADY<br>1010 = qualified data phase (from HTRANS to last data transfer)<br>1011 = HPROT matches<br>1100 = HBURST matches<br>1101 = HWRITE matches<br>1110 = HADDR matches<br>1111 = Valid HTRANS cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHB/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D70000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHB/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D70040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/ETHB/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D70080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of wait cycles on data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">SATA</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44D80000...0x44D8FFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">AHB monitor</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SATA/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D80000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SATA/HWRITE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D80040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HWRITE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HWRITE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HWRITE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hwrite_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB writes.</td></tr>
<tr><td align="center">reg_hread_en</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB reads.<br>reg_hread_en &amp; reg_hwrite_en:<br>00b : The data transfer counter is inactive<br>01b : The data transfer counter will count writes<br>10b : The data transfer counter will count reads<br>11b : The data transfer counter will count reads and writes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SATA/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D80080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SATA/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D800C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SATA/HBURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D80100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HBURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HBURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HBURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hburst_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HBURST to match after masking.</td></tr>
<tr><td align="center">reg_hburst_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HBURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SATA/HPROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D80140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HPROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hprot_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HPROT to match after masking.</td></tr>
<tr><td align="center">reg_hprot_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HPROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SATA/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D80180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = counter 0 (cycles) trigger =1<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>1001 = HREADY<br>1010 = qualified data phase (from HTRANS to last data transfer)<br>1011 = HPROT matches<br>1100 = HBURST matches<br>1101 = HWRITE matches<br>1110 = HADDR matches<br>1111 = Valid HTRANS cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SATA/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D80000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SATA/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D80040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SATA/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D80080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of wait cycles on data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">LEON</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44D90000...0x44D9FFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">AHB monitor</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/LEON/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D90000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/LEON/HWRITE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D90040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HWRITE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HWRITE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HWRITE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hwrite_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB writes.</td></tr>
<tr><td align="center">reg_hread_en</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB reads.<br>reg_hread_en &amp; reg_hwrite_en:<br>00b : The data transfer counter is inactive<br>01b : The data transfer counter will count writes<br>10b : The data transfer counter will count reads<br>11b : The data transfer counter will count reads and writes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/LEON/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D90080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/LEON/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D900C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/LEON/HBURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D90100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HBURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HBURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HBURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hburst_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HBURST to match after masking.</td></tr>
<tr><td align="center">reg_hburst_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HBURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/LEON/HPROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D90140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HPROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hprot_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HPROT to match after masking.</td></tr>
<tr><td align="center">reg_hprot_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HPROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/LEON/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D90180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = counter 0 (cycles) trigger =1<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>1001 = HREADY<br>1010 = qualified data phase (from HTRANS to last data transfer)<br>1011 = HPROT matches<br>1100 = HBURST matches<br>1101 = HWRITE matches<br>1110 = HADDR matches<br>1111 = Valid HTRANS cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/LEON/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D90000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/LEON/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D90040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/LEON/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44D90080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of wait cycles on data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">VIDEO</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44DA0000...0x44DAFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">AHB monitor</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/VIDEO/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DA0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/VIDEO/HWRITE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DA0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HWRITE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HWRITE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HWRITE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hwrite_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB writes.</td></tr>
<tr><td align="center">reg_hread_en</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB reads.<br>reg_hread_en &amp; reg_hwrite_en:<br>00b : The data transfer counter is inactive<br>01b : The data transfer counter will count writes<br>10b : The data transfer counter will count reads<br>11b : The data transfer counter will count reads and writes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/VIDEO/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DA0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/VIDEO/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DA00C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/VIDEO/HBURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DA0100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HBURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HBURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HBURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hburst_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HBURST to match after masking.</td></tr>
<tr><td align="center">reg_hburst_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HBURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/VIDEO/HPROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DA0140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HPROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hprot_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HPROT to match after masking.</td></tr>
<tr><td align="center">reg_hprot_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HPROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/VIDEO/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DA0180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = counter 0 (cycles) trigger =1<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>1001 = HREADY<br>1010 = qualified data phase (from HTRANS to last data transfer)<br>1011 = HPROT matches<br>1100 = HBURST matches<br>1101 = HWRITE matches<br>1110 = HADDR matches<br>1111 = Valid HTRANS cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/VIDEO/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DA0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/VIDEO/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DA0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/VIDEO/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DA0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of wait cycles on data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">SGDMA</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44DB0000...0x44DBFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">AHB monitor</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SGDMA/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DB0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SGDMA/HWRITE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DB0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HWRITE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HWRITE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HWRITE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hwrite_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB writes.</td></tr>
<tr><td align="center">reg_hread_en</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB reads.<br>reg_hread_en &amp; reg_hwrite_en:<br>00b : The data transfer counter is inactive<br>01b : The data transfer counter will count writes<br>10b : The data transfer counter will count reads<br>11b : The data transfer counter will count reads and writes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SGDMA/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DB0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SGDMA/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DB00C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SGDMA/HBURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DB0100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HBURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HBURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HBURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hburst_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HBURST to match after masking.</td></tr>
<tr><td align="center">reg_hburst_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HBURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SGDMA/HPROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DB0140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HPROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hprot_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HPROT to match after masking.</td></tr>
<tr><td align="center">reg_hprot_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HPROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SGDMA/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DB0180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = counter 0 (cycles) trigger =1<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>1001 = HREADY<br>1010 = qualified data phase (from HTRANS to last data transfer)<br>1011 = HPROT matches<br>1100 = HBURST matches<br>1101 = HWRITE matches<br>1110 = HADDR matches<br>1111 = Valid HTRANS cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SGDMA/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DB0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SGDMA/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DB0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/SGDMA/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DB0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of wait cycles on data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PCIEA</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44DC0000...0x44DCFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">AHB monitor</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEA/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DC0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEA/HWRITE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DC0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HWRITE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HWRITE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HWRITE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hwrite_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB writes.</td></tr>
<tr><td align="center">reg_hread_en</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB reads.<br>reg_hread_en &amp; reg_hwrite_en:<br>00b : The data transfer counter is inactive<br>01b : The data transfer counter will count writes<br>10b : The data transfer counter will count reads<br>11b : The data transfer counter will count reads and writes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEA/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DC0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEA/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DC00C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEA/HBURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DC0100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HBURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HBURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HBURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hburst_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HBURST to match after masking.</td></tr>
<tr><td align="center">reg_hburst_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HBURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEA/HPROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DC0140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HPROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hprot_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HPROT to match after masking.</td></tr>
<tr><td align="center">reg_hprot_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HPROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEA/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DC0180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = counter 0 (cycles) trigger =1<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>1001 = HREADY<br>1010 = qualified data phase (from HTRANS to last data transfer)<br>1011 = HPROT matches<br>1100 = HBURST matches<br>1101 = HWRITE matches<br>1110 = HADDR matches<br>1111 = Valid HTRANS cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEA/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DC0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEA/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DC0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEA/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DC0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of wait cycles on data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PCIEB</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44DD0000...0x44DDFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">AHB monitor</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEB/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DD0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEB/HWRITE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DD0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HWRITE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HWRITE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HWRITE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hwrite_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB writes.</td></tr>
<tr><td align="center">reg_hread_en</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB reads.<br>reg_hread_en &amp; reg_hwrite_en:<br>00b : The data transfer counter is inactive<br>01b : The data transfer counter will count writes<br>10b : The data transfer counter will count reads<br>11b : The data transfer counter will count reads and writes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEB/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DD0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEB/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DD00C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEB/HBURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DD0100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HBURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HBURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HBURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hburst_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HBURST to match after masking.</td></tr>
<tr><td align="center">reg_hburst_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HBURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEB/HPROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DD0140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HPROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hprot_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HPROT to match after masking.</td></tr>
<tr><td align="center">reg_hprot_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HPROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEB/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DD0180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = counter 0 (cycles) trigger =1<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>1001 = HREADY<br>1010 = qualified data phase (from HTRANS to last data transfer)<br>1011 = HPROT matches<br>1100 = HBURST matches<br>1101 = HWRITE matches<br>1110 = HADDR matches<br>1111 = Valid HTRANS cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEB/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DD0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEB/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DD0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/PCIEB/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DD0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of wait cycles on data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">USBMPH</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44DE0000...0x44DEFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">AHB monitor</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBMPH/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DE0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBMPH/HWRITE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DE0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HWRITE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HWRITE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HWRITE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hwrite_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB writes.</td></tr>
<tr><td align="center">reg_hread_en</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB reads.<br>reg_hread_en &amp; reg_hwrite_en:<br>00b : The data transfer counter is inactive<br>01b : The data transfer counter will count writes<br>10b : The data transfer counter will count reads<br>11b : The data transfer counter will count reads and writes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBMPH/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DE0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBMPH/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DE00C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBMPH/HBURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DE0100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HBURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HBURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HBURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hburst_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HBURST to match after masking.</td></tr>
<tr><td align="center">reg_hburst_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HBURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBMPH/HPROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DE0140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HPROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hprot_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HPROT to match after masking.</td></tr>
<tr><td align="center">reg_hprot_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HPROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBMPH/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DE0180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = counter 0 (cycles) trigger =1<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>1001 = HREADY<br>1010 = qualified data phase (from HTRANS to last data transfer)<br>1011 = HPROT matches<br>1100 = HBURST matches<br>1101 = HWRITE matches<br>1110 = HADDR matches<br>1111 = Valid HTRANS cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBMPH/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DE0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBMPH/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DE0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBMPH/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DE0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of wait cycles on data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">USBDEV</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x44DF0000...0x44DFFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">AHB monitor</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBDEV/MODE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DF0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MODE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MODE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MODE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_mode</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Monitor mode:<br>00b IDLE :�Counters are idle and so can be read.<br>01b ACTIVE : Counters are running in this mode<br>10b RESET : Setting this mode resets all counters</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBDEV/HWRITE filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DF0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HWRITE filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HWRITE%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HWRITE filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hwrite_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB writes.</td></tr>
<tr><td align="center">reg_hread_en</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enable monitoring of AHB reads.<br>reg_hread_en &amp; reg_hwrite_en:<br>00b : The data transfer counter is inactive<br>01b : The data transfer counter will count writes<br>10b : The data transfer counter will count reads<br>11b : The data transfer counter will count reads and writes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBDEV/Lower address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DF0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lower address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Lower%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Lower address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_lower_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses greater than or equal to this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBDEV/Upper address bound</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DF00C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Upper address bound</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Upper%20address%20bound_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Upper address bound_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_upper_addr</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>The data transfer counter will only include accesses to addresses�less or equal to than�this value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBDEV/HBURST filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DF0100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HBURST filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HBURST%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HBURST filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hburst_match</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HBURST to match after masking.</td></tr>
<tr><td align="center">reg_hburst_mask</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HBURST before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBDEV/HPROT filter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DF0140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>HPROT filter</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HPROT%20filter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HPROT filter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_hprot_match</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Value for HPROT to match after masking.</td></tr>
<tr><td align="center">reg_hprot_mask</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Mask to apply to (AND with)�HPROT before matching.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBDEV/Trigger</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DF0180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Trigger</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Trigger_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Trigger_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_trigger</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Select signal that can be route off-chip via MONMUXes.<br>0000 = counter 0 (cycles) trigger =1<br>0001 = counter 1 (data) trigger<br>0010 = counter 2 (waits) trigger<br>1001 = HREADY<br>1010 = qualified data phase (from HTRANS to last data transfer)<br>1011 = HPROT matches<br>1100 = HBURST matches<br>1101 = HWRITE matches<br>1110 = HADDR matches<br>1111 = Valid HTRANS cycle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBDEV/Counter 0: Clock cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DF0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 0: Clock cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%200:%20Clock%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 0: Clock cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_cycles</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Number of bus clock cycles that the monitor is active.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBDEV/Counter 1: Data cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DF0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 1: Data cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%201:%20Data%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 1: Data cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_data</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>MON/USBDEV/Counter 2: Wait cycles</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44DF0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counter 2: Wait cycles</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Counter%202:%20Wait%20cycles_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Counter 2: Wait cycles_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">reg_counter_waits</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Number of wait cycles on data transfers that match HWRITE, HADDR, HBURST and HPROT whilst the monitor is active."</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">SYSCTRL</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44E00000...0x44EFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Chip general/miscellaneous configuration/status registers</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('SYSCTRL_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="SYSCTRL_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_MFA_SECSEL_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_MFA_SECSEL_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_MFA_SECSEL_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_MFA_SECSEL_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfa_sec_sel[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If sec_sel[x]=1, pin MF_A[x] will become its secondary function as defined in the MF pin mapping table.<br>Default: 32'b0. (GPIO functionality)<br>0: fan_temp (Bidirectional) Fan thermistor input<br>1: fan_tacho (Input) Fan speed input<br>2: fan_pwm (Output) Fan PWM output drive<br>3: etha_mdc (Output) 1st Ethernet port MDIO clock<br>4: etha_mdio (Bidirectional) 1st Ethernet port MDIO data<br>5: sd_clk (Output) SD common SD/SPI clock<br>6: sda_cmd (Bidirectional) SD slot A command / SPI MOSI data<br>7: sda_dat0 (Bidirectional) SD slot A data / SPI MISO data<br>8: sda_dat3cd (Bidirectional) SD slot A data and card detect / SPI chip select<br>9: pllb_bck (Output) Bit clock derived from PLLB<br>10: usba_pwro (Output) USB port A (host) power enable<br>11: usba_overi (Input) USB port A (host) overcurrent input<br>12: static_data(0) (Bidirectional) Static memory bus data<br>13: static_data(1) (Bidirectional) Static memory bus data<br>14: static_data(2) (Bidirectional) Static memory bus data<br>15: static_data(3) (Bidirectional) Static memory bus data<br>16: static_data(4) (Bidirectional) Static memory bus data<br>17: static_data(5) (Bidirectional) Static memory bus data<br>18: static_data(6) (Bidirectional) Static memory bus data<br>19: static_data(7) (Bidirectional) Static memory bus data<br>20: static_we_n (Output) Static memory bus write enable<br>21: static_oe_n (Output) Static memory bus output enable<br>22: static_cs_n(0) (Output) Static memory bus chip select #1<br>23: static_addr(18) (Output) Static memory bus address<br>24: static_addr(19) (Output) Static memory bus address<br>25: static_cs_n(1) (Output) Static memory bus chip select #2<br>26: sda_dat1 (Bidirectional) SD slot A data (SPI: not used)<br>27: sda_dat2 (Bidirectional) SD slot A data (SPI: not used)<br>28: usbb_pwro (Output) USB port B (host) power enable<br>29: usbb_overi (Input) USB port B (host) overcurrent input<br>30: static_addr(20) (Output) Static memory bus address<br>31: static_addr(21) (Output) Static memory bus address</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_CKEN_STAT_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_CKEN_STAT_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_CKEN_STAT_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_CKEN_STAT_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">cken_vec</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Status
of the SYS_CTRL CKEN block clock enables. These enables are
controllable via the C_SYSCTRL_CKEN_SET_CTRL_ADDR and
C_SYSCTRL_CKEN_CLR_CTRL_ADDR registers.<br>[0]:  LEON<br>[1]:  DMA_SGDMA<br>[2]:  CIPHER<br>[3]:  SD<br>[4]:  SATA<br>[5]:  AUDIO<br>[6]:  USBMPH<br>[7]:  ETHA<br>[8]:  PCIEA<br>[9]:  STATIC<br>[10]: ETHB<br>[11]: PCIEB<br>[12]: REF600<br>[13]: USBDEV<br>[14]: DDRAM<br>[15]: DDRAMPHY<br>[16]: DDRAMCK</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_RSTEN_STAT_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_RSTEN_STAT_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_RSTEN_STAT_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_RSTEN_STAT_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">rsten_vec</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Status
of the SYS_CTRL RSTEN block reset enables. These enables are
controllable via the C_SYSCTRL_RSTEN_SET_CTRL_ADDR and
C_SYSCTRL_RSTEN_CLR_CTRL_ADDR registers.<br>[0]: ARM SCU,              Self-clearing<br>[1]:
LEON, Default: asserted. LEON has synchronous resets: its clock must be
running before releasing this reset.<br>[2]: ARM CPU0,             Self-clearing<br>[3]: ARM CPU1,             Self-clearing<br>[4]: USBMPH,               Default: asserted<br>[5]: USBPHYA,              Default: asserted<br>[6]: ETHA,                 Default: asserted<br>[7]: PCIEA,                Default: asserted<br>[8]: DMA_SGDMA,            Default: asserted<br>[9]: CIPHER,               Default: asserted<br>[10]: DDRAM,               Default: asserted<br>[11]: SATA,                Default: asserted. For SATA core sys_clk<br>[12]: SATALINK,            Default: asserted. For SATA core link clocks<br>[13]: SATAPHY,             Default: asserted. For SATA PHY<br>[14]: PCIEPHY,             Default: asserted. For PCIE PHY<br>[15]: STATIC,              Default: asserted<br>[16]: GPIOA and GPIOB,     Default: NOT asserted<br>[17]: UARTA,               Default: asserted<br>[18]: UARTB,               Default: asserted<br>[19]: FAN and IRRX,        Default: asserted<br>[20]: AUDIO,               Default: asserted<br>[21]: SD,                  Default: asserted<br>[22]: ETHB,                Default: asserted<br>[23]: PCIEB,               Default: asserted<br>[24]: VIDEO,               Default: asserted<br>[25]: DDRAMPHY,            Default: asserted<br>[26]: USBPHYB,             Default: asserted<br>[27]: USBDEV,              Default: asserted<br>[28]: reserved,<br>[29]: ARM DBG / WDOG0/1,   Self-clearing<br>[30]: PLLA,                Default: NOT asserted (PLL must be bypassed before asserting and assertion should be &gt;5us)<br>[31]: PLLB,                Default: asserted (PLL must be bypassed before asserting and assertion should be &gt;5us)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_CKEN_SET_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_CKEN_SET_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_CKEN_SET_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_CKEN_SET_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">cken_vec = cken_vec | wdata</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Write [n]=1 to set cken_vec[n]=1 (see above)<br>Effect is readable via C_SYSCTRL_CKEN_ STAT_ADDR<br>[0]:  LEON<br>[1]:  DMA_SGDMA<br>[2]:  CIPHER<br>[3]:  SD<br>[4]:  SATA<br>[5]:  AUDIO<br>[6]:  USBMPH<br>[7]:  ETHA<br>[8]:  PCIEA<br>[9]:  STATIC<br>[10]: ETHB<br>[11]: PCIEB<br>[12]: REF600<br>[13]: USBDEV<br>[14]: DDRAM<br>[15]: DDRAMPHY<br>[16]: DDRAMCK</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_CKEN_CLR_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_CKEN_CLR_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_CKEN_CLR_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_CKEN_CLR_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">cken_vec = cken_vec &amp; ~wdata</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">C1</td><td>Write [n]=1 to clear cken_vec[n]=0 (see above)<br>Effect is readable via C_SYSCTRL_CKEN_ STAT_ADDR<br>[0]:  LEON<br>[1]:  DMA_SGDMA<br>[2]:  CIPHER<br>[3]:  SD<br>[4]:  SATA<br>[5]:  AUDIO<br>[6]:  USBMPH<br>[7]:  ETHA<br>[8]:  PCIEA<br>[9]:  STATIC<br>[10]: ETHB<br>[11]: PCIEB<br>[12]: REF600<br>[13]: USBDEV<br>[14]: DDRAM<br>[15]: DDRAMPHY<br>[16]: DDRAMCK</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_RSTEN_SET_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_RSTEN_SET_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_RSTEN_SET_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_RSTEN_SET_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">rsten_vec = rsten_vec | wdata</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Write [n]=1 to set rsten_vec[n]=1 (see above)<br>Effect is readable via C_SYSCTRL_RSTEN_ STAT_ADDR<br>[0]: ARM SCU,              Self-clearing<br>[1]:
LEON, Default: asserted. LEON has synchronous resets: its clock must be
running before releasing this reset.<br>[2]: ARM CPU0,             Self-clearing<br>[3]: ARM CPU1,             Self-clearing<br>[4]: USBMPH,               Default: asserted<br>[5]: USBPHYA,              Default: asserted<br>[6]: ETHA,                 Default: asserted<br>[7]: PCIEA,                Default: asserted<br>[8]: DMA_SGDMA,            Default: asserted<br>[9]: CIPHER,               Default: asserted<br>[10]: DDRAM,               Default: asserted<br>[11]: SATA,                Default: asserted. For SATA core sys_clk<br>[12]: SATALINK,            Default: asserted. For SATA core link clocks<br>[13]: SATAPHY,             Default: asserted. For SATA PHY<br>[14]: PCIEPHY,             Default: asserted. For PCIE PHY<br>[15]: STATIC,              Default: asserted<br>[16]: GPIOA and GPIOB,     Default: NOT asserted<br>[17]: UARTA,               Default: asserted<br>[18]: UARTB,               Default: asserted<br>[19]: FAN and IRRX,        Default: asserted<br>[20]: AUDIO,               Default: asserted<br>[21]: SD,                  Default: asserted<br>[22]: ETHB,                Default: asserted<br>[23]: PCIEB,               Default: asserted<br>[24]: VIDEO,               Default: asserted<br>[25]: DDRAMPHY,            Default: asserted<br>[26]: USBPHYB,             Default: asserted<br>[27]: USBDEV,              Default: asserted<br>[28]: reserved,<br>[29]: ARM DBG / WDOG0/1,   Self-clearing<br>[30]: PLLA,                Default: NOT asserted (PLL must be bypassed before asserting and assertion should be &gt;5us)<br>[31]: PLLB,                Default: asserted (PLL must be bypassed before asserting and assertion should be &gt;5us)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_RSTEN_CLR_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_RSTEN_CLR_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_RSTEN_CLR_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_RSTEN_CLR_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">rsten_vec = rsten_vec &amp; ~wdata</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">C1</td><td>Write [n]=1 to clear rsten_vec[n]=0 (see above)<br>Effect is readable via C_SYSCTRL_RSTEN_STAT_ADDR<br>[0]: ARM SCU,              Self-clearing<br>[1]:
LEON, Default: asserted. LEON has synchronous resets: its clock must be
running before releasing this reset.<br>[2]: ARM CPU0,             Self-clearing<br>[3]: ARM CPU1,             Self-clearing<br>[4]: USBMPH,               Default: asserted<br>[5]: USBPHYA,              Default: asserted<br>[6]: ETHA,                 Default: asserted<br>[7]: PCIEA,                Default: asserted<br>[8]: DMA_SGDMA,            Default: asserted<br>[9]: CIPHER,               Default: asserted<br>[10]: DDRAM,               Default: asserted<br>[11]: SATA,                Default: asserted. For SATA core sys_clk<br>[12]: SATALINK,            Default: asserted. For SATA core link clocks<br>[13]: SATAPHY,             Default: asserted. For SATA PHY<br>[14]: PCIEPHY,             Default: asserted. For PCIE PHY<br>[15]: STATIC,              Default: asserted<br>[16]: GPIOA and GPIOB,     Default: NOT asserted<br>[17]: UARTA,               Default: asserted<br>[18]: UARTB,               Default: asserted<br>[19]: FAN and IRRX,        Default: asserted<br>[20]: AUDIO,               Default: asserted<br>[21]: SD,                  Default: asserted<br>[22]: ETHB,                Default: asserted<br>[23]: PCIEB,               Default: asserted<br>[24]: VIDEO,               Default: asserted<br>[25]: DDRAMPHY,            Default: asserted<br>[26]: USBPHYB,             Default: asserted<br>[27]: USBDEV,              Default: asserted<br>[28]: reserved,<br>[29]: ARM DBG / WDOG0/1,   Self-clearing<br>[30]: PLLA,                Default: NOT asserted (PLL must be bypassed before asserting and assertion should be &gt;5us)<br>[31]: PLLB,                Default: asserted (PLL must be bypassed before asserting and assertion should be &gt;5us)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_USBMPH_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_USBMPH_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_USBMPH_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_USBMPH_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">usb_ifg_hs[6:0]</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>High speed inter-frame gap (in 60MHz cycles).��<br>IP_DELAY_PRELOAD_HS_60MHZ-3<br>Default��9 =&gt; 200ns�.</td></tr>
<tr><td align="center">usb_ifg_hs_sof[6:0]</td><td align="center">24:18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>High speed inter-frame gap (in 60MHz cycles) for SOFs.��<br>IP_DELAY_PRELOAD_SOF_HS_60MHZ+1�<br>Default��21 =&gt; 333ns.</td></tr>
<tr><td align="center">usb_ifg_fs[6:0]</td><td align="center">17:11</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Full speed inter-frame gap (in 60MHz cycles). IP_DELAY_PRELOAD_FS_60MHZ-6�<br>Default��6 =&gt; 200ns�.</td></tr>
<tr><td align="center">usb_ifg_ls[6:0]</td><td align="center">10:4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Low speed inter-frame gap (in 60MHz cycles).��<br>IP_DELAY_PRELOAD_LS_60MHZ-6�<br>Default��94 =&gt; 1667ns�.</td></tr>
<tr><td align="center">usb_pwro_active_low[1:0]</td><td align="center">3:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets power switch output signal polarity.<br>"[n]=1 for USB switch overcurrent. active low, 0 for active high."<br>[1] USBB (high-speed). Default: 0<br>[0] USBA (high-speed). Default: 0</td></tr>
<tr><td align="center">usb_overi_active_low[1:0]</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets overcurrent input signal polarity.<br>"[n]=1 for USB switch overcurrent. active low, 0 for active high."<br>[1] USBB (high-speed). Default: 0<br>[0] USBA (high-speed). Default: 0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_USBMPH_STAT_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Obsolete,,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_USBMPH_STAT_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_USBMPH_STAT_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">usbhsmph_utmi_phy_enable</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Asserted when USBA UTMI interface is selected.</td></tr>
<tr><td align="center">usbhsmph_utmi_xcvrselect</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Asserted when low speed.<br>[n]=1 when low speed selected.<br>[1] USBB (high-speed). Default: 0<br>[0] USBA (high-speed). Default: 0<br>(Bit [0] is actually �ddir� output.)<br>Obsolete.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_PLLA_CTRL_ADDR Replaced by registers from 0x200.</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Obsolete,,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_PLLA_CTRL_ADDR%20Replaced%20by%20registers%20from%200x200._fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_PLLA_CTRL_ADDR Replaced by registers from 0x200._fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_SEMA_STAT_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_SEMA_STAT_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_SEMA_STAT_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_SEMA_STAT_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Semaphore[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Semaphore register status (for ARM � COPRO software control interaction). Writable only via the C_SYSCTRL_SEMA_SET_CTRL_ADDR<br>and C_SYSCTRL_SEMA_CLR_CTRL_ADDR registers.<br>Default : 32�b0.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_SEMA_SET_ADDR (Dummy Register)</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_SEMA_SET_ADDR (Dummy Register)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_SEMA_SET_ADDR%20(Dummy%20Register)_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_SEMA_SET_ADDR (Dummy Register)_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Semaphore[31:0] = Semaphore[31:0]  | wdata</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Write [n]=1 to set semaphore[n]=1.<br>Effect is readable via C_SYSCTRL_SEMA_STAT_ADDR</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_SEMA_CLRL_ADDR (Dummy Register)</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_SEMA_CLRL_ADDR (Dummy Register)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_SEMA_CLRL_ADDR%20(Dummy%20Register)_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_SEMA_CLRL_ADDR (Dummy Register)_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Semaphore[31:0] = Semaphore[31:0]  &amp; ~wdata</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">C1</td><td>Write [n]=1 to clear semaphore[n]=0.<br>Effect is readable via C_SYSCTRL_SEMA_STAT_ADDR.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_SEMA_MASKA_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_SEMA_MASKA_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_SEMA_MASKA_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_SEMA_MASKA_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MaskA[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Interrupt mask for semaphore  interrupt A (to RPSA; intended for ARM). Masks out Semaphore[31:0 (see above).<br>Default 32�b0.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_SEMA_MASKB_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_SEMA_MASKB_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_SEMA_MASKB_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_SEMA_MASKB_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MaskB[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Interrupt mask for semaphore interrupt B ((to RPSA; intended for ARM). Masks out Semaphore[31:0 (see above).<br>Default 32�b0.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_SEMA_MASKC_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_SEMA_MASKC_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_SEMA_MASKC_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_SEMA_MASKC_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MaskC[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Interrupt mask for semaphore interrupt C (to RPSC; intented for COPRO). Masks out Semaphore[31:0 (see above).<br>Default 32�b0.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_PLLA_KEY_CTRL_ADDR Obsolete</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0006C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Obsolete</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_PLLA_KEY_CTRL_ADDR%20Obsolete_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_PLLA_KEY_CTRL_ADDR Obsolete_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">plla_key</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Obsolete:
Key to protect accidental programming of the C_SYSCTRL_PLLA_CTRL_ADDR
register. Must write 0xBEADFACE immediately prior to writing to
C_SYSCTRL_PLLA_CTRL_ADDR for the latter write to have any effect.<br>This key is self-clearing. (It will be cleared on the next write to SYS_CTRL.)<br>Default: 32�b0.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_AUDIO_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00070</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_AUDIO_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_AUDIO_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_AUDIO_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">audio_rx_neg_edge</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables inversion of the AUDIO_RX_BITCK GPIO input pin. Default 0 (non-inverted).</td></tr>
<tr><td align="center">audio_tx_neg_edge</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables inversion of the AUDIO_TX_BITCK GPIO input pin. Default 0 (non-inverted).</td></tr>
<tr><td align="center">audio_rx_spdif_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"Enables
clock recovery of the audio receive clock from the receive data, for
S/P-DIF mode. (The AUDIO core must also be programmed for S/P-DIF
operation.) Affects CK_CTRL."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_GMACA_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00078</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_GMACA_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_GMACA_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_GMACA_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">gmaca_cken_rx_in</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables input to both gmaca_rx_vardelay and gmaca_rxn_vardelay variable delay lines.</td></tr>
<tr><td align="center">gmaca_cken_rxn_out</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables clk_gmaca_rx_n output of gmaca_rxn_vardelay variable delay line (NOT_ORed).</td></tr>
<tr><td align="center">gmaca_cken_rx_out</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables clk_gmaca_rx output of gmaca_rx_vardelay variable delay line (ANDed).</td></tr>
<tr><td align="center">gmaca_cken_tx_in</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables input to both gmaca_tx_vardelay and gmaca_txn_vardelay variable delay lines.</td></tr>
<tr><td align="center">gmaca_cken_txn_out</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables clk_gmaca_tx_n output of gmaca_txn_vardelay variable delay line (NOT_ORed).</td></tr>
<tr><td align="center">gmaca_cken_tx_out</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables clk_gmaca_tx output of gmaca_tx_vardelay variable delay line (ANDed).</td></tr>
<tr><td align="center">gmaca_rx_source</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Selects receive clock source:<br>0: ETHA_RXCLKI (2.5/25/125MHz input).<br>1: CLKI_125M (125MHz reference input).</td></tr>
<tr><td align="center">gmaca_tx_source</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Selects transmit clock source:<br>0: �low speed transmit clock source� (see register below)<br>1: CLKI_125M (125MHz reference input).</td></tr>
<tr><td align="center">gmaca_low_tx_source</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Selects �low speed transmit clock source�:<br>0: clk_ref25/10 (2.5MHz).<br>1: clk_ref25 (25MHz).</td></tr>
<tr><td align="center">gmaca_auto_tx_source</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"When set, GMACA 10/100/1000 speed indication automatically selects between transmit clock sources."</td></tr>
<tr><td align="center">gmaca_rgmii</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Always returns �1� (indicates interface is RGMII).</td></tr>
<tr><td align="center">gmaca_simple_mux</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"When
set, the multiplexing of transmit clock sources are done by simple
multiplexers that do not rely upon the input clocks to be running for
it to switch but may produce glitches on switching."<br>NB: Receive clock multiplexing is always simple glitchy because it never needs changing dynamically.</td></tr>
<tr><td align="center">gmaca_cken_gtx</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables the ETHA_TXCLKO to follow the transmit clock. This is required for source-synchronous RGMII transmission.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_ARM_STAT_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_ARM_STAT_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_ARM_STAT_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_ARM_STAT_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">arm_standbywfi</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"Read
state of each ARM CPU�s STANDBYWFI (�standby, wait for interrupt�)
output. May be used by COPRO to monitor ARM in order to wake up the
ARM."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_USBAPHY_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00084</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_USBAPHY_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_USBAPHY_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_USBAPHY_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">usbaphy_siddq</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Test feature.</td></tr>
<tr><td align="center">usbaphy_loopbackenb</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Test feature.</td></tr>
<tr><td align="center">usbaphy_vatest_en</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Test feature.</td></tr>
<tr><td align="center">usbaphy_suspendm_manual_enable</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"When
set, the active-low SUSPENDM suspend control of the USBAPHY is
controlled by the �usbaphy_suspendm_manual_state� bit (see below)
rather than from the USBMPH core."</td></tr>
<tr><td align="center">usbaphy_suspendm_manual_state</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>See above. Default 1�b0</td></tr>
<tr><td align="center">usbaphy_ate_reset</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBAPHY test control interface reset signal. Default 1�b0</td></tr>
<tr><td align="center">usbaphy_test_din</td><td align="center">13:6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBAPHY test control interface write data signal. Default 8�b0</td></tr>
<tr><td align="center">usbaphy_test_addr</td><td align="center">5:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBAPHY test control interface address signal. Default 4�b0</td></tr>
<tr><td align="center">usbaphy_test_dout_sel</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBAPHY test control interface read data multiplexer select  signal. Default 1�b0</td></tr>
<tr><td align="center">usbaphy_test_clk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBAPHY
test control interface clock signal. Default 1�b0. Bit-blasted clock.
The test control interface can be used to program special PHY modes.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_USBAPHY_STAT_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00088</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_USBAPHY_STAT_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_USBAPHY_STAT_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_USBAPHY_STAT_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">usbaphy_test_dout</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>USBAPHY test control interface read data signal.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_MFA_TERSEL_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0008C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_MFA_TERSEL_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_MFA_TERSEL_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_MFA_TERSEL_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfa_ter_sel[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If mfa_ter_sel[x]=1, pin MF_A[x] will become its �tertiary  function� as defined in the MF pin mapping table.<br>Default: 32�b0. (GPIO functionality)<br>0: usbb_overi (Input) USB port B (host) overcurrent input<br>1: INVALID<br>2: INVALID<br>3: sda_dat1 (Bidirectional) SD slot A data (SPI: not used)<br>4: sda_dat2 (Bidirectional) SD slot A data (SPI: not used)<br>5: usbb_pwro (Output) USB port B (host) power enable<br>6: ref300_wck (Output) Word clock derived from 300MHz clock<br>7: ref300_bck (Output) Bit clock derived from 300MHz clock<br>8: pllb_wck (Output) Word clock derived from PLLB<br>9: INVALID<br>10: usba_vbus (Input) USB device on port A VBUS detect<br>11: irrx_in (Input) Infra-red receiver input<br>12: sd_clk (Output) SD common SD/SPI clock<br>13: sdb_cmd (Bidirectional) SD slot B command / SPI MOSI data<br>14: sdb_dat1 (Bidirectional) SD slot B data (SPI: not used)<br>15: sdb_dat2 (Bidirectional) SD slot B data (SPI: not used)<br>16: sdb_dat0 (Bidirectional) SD slot B data / SPI MISO data<br>17: sdb_dat3cd (Bidirectional) SD slot B data and card detect / SPI chip select<br>18: etha_mdc (Output) 1st Ethernet port MDIO clock<br>19: etha_mdio (Bidirectional) 1st Ethernet port MDIO data<br>20: INVALID<br>21: INVALID<br>22: INVALID<br>23: INVALID<br>24: INVALID<br>25: INVALID<br>26: ethb_mdc (Output) 2nd Ethernet port MDIO clock<br>27: ethb_mdio (Bidirectional) 2nd Ethernet port MDIO data<br>28: INVALID<br>29: INVALID<br>30: pciea_wake_n (((Open drain out (((PCIEA (endpoint) open-drain WAKE# active low<br>31: pcieb_wake_n (((Open drain out (((PCIEB (endpoint) open-drain WAKE# active low</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_USB_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00090</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_USB_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_USB_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_USB_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">usbaphy_cksel[1:0]</td><td align="center">6:5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBA phy mode (controlled by USBAMUX):<br>00: Crystal across USB_XTALI/USB_XTALO (USBAPHY XO).<br>01: 2.5V signal on USB_XTALO.<br>10: Internal clock, source selected by usb_cko_sel.<br>Default: 10.<br>NB: USBBPHY always uses internal clock.</td></tr>
<tr><td align="center">usbamux_device</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBA phy mode (controlled by USBAMUX):<br>0: Host.<br>1: Device.</td></tr>
<tr><td align="center">usbphy_refclkdiv</td><td align="center">3:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USB phy�s reference clock:<br>00: 12MHz.<br>01: 24MHz.<br>10: 48MHz.</td></tr>
<tr><td align="center">usb_cko_sel</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Clock source for USB ports (clk_ref12 to USB phy CLKCORE pins):<br>00: Buffered USBAPHY XO.<br>10: Buffered ref300_bck<br>11: Buffered pllb_bck</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_MFA_QUATSEL_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00094</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_MFA_QUATSEL_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_MFA_QUATSEL_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_MFA_QUATSEL_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfa_quat_sel[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If mfa_quat_sel[x]=1, pin MF_A[x] will become its �quaternary  function� as defined in the MF pin mapping table.<br>Default: 32�b0. (GPIO functionality)<br>0: INVALID<br>1: INVALID<br>2: INVALID<br>3: INVALID<br>4: INVALID<br>5: vdo_vs_valid (Output) Video VSYNC / picxel clock<br>6: vdo_blue[0] (Output) Video Blue data<br>7: INVALID<br>8: INVALID<br>9: vdo_blue[1] (Output) Video Blue data<br>10: vdo_green[1] (Output) Video Green data<br>11: vdo_red[1] (Output) Video Red data<br>12: INVALID<br>13: INVALID<br>14: INVALID<br>15: INVALID<br>16: INVALID<br>17: INVALID<br>18: INVALID<br>19: INVALID<br>20: INVALID<br>21: INVALID<br>22: INVALID<br>23: INVALID<br>24: INVALID<br>25: INVALID<br>26: vdo_hs_pix (Output) Video HSYNC / valid flag<br>27: vdo_blue[2] (Output) Video Blue data<br>28: vdo_blue[3] (Output) Video Blue data<br>29: vdo_blue[4] (Output) Video Blue data<br>30: vdo_green[0] (Output) Video Green data<br>31: vdo_red[0] (Output) Video Red data</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_MFA_DEBUGSEL_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0009C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_MFA_DEBUGSEL_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_MFA_DEBUGSEL_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_MFA_DEBUGSEL_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfa_debug_sel[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If mfa_debug_sel[x]=1, pin MF_A[x] will become its �debug  function� as defined in the MF pin mapping table.<br>Default: 32�b0. (GPIO functionality)<br>0: INVALID<br>1: INVALID<br>2: INVALID<br>3: INVALID<br>4: INVALID<br>5: uartb_cts_n (Input) UARTB Clear To Send<br>6: uartb_rts_n (Output) UARTB Request To Send<br>7: uartb_sin (Input) UARTB Serial Input<br>8: uartb_sout  (Output) UARTB Serial Output<br>9: mon_muxa (Output) 1st monitor multiplexed trigger output<br>10: mon_muxb (Output) 2nd monitor multiplexed trigger output<br>11: INVALID (((INVALID (((INVALID<br>12: mon_muxa (Output) 1st monitor multiplexed trigger output<br>13: mon_muxb (Output) 2nd monitor multiplexed trigger output<br>14: uarta_sin   (Input) UARTA Serial Input<br>15: uarta_sout  (Output) UARTA Serial Output<br>16: uarta_cts_n (Input) UARTA Clear To Send<br>17: uarta_rts_n (Output) UARTA Request To Send<br>18: INVALID<br>19: INVALID<br>20: INVALID<br>21: INVALID<br>22: INVALID<br>23: INVALID<br>24: uarta_ri_n   (Input) UARTA Ring Indicator<br>25: uarta_cd_n (Input) UARTA Carrier Detect<br>26: uarta_dsr_n (Input) UARTA Data Set Ready<br>27: uarta_dtr_n (Output) UARTA Data Terminal Ready<br>28: INVALID<br>29: INVALID<br>30: INVALID<br>31: INVALID</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_MFA_ALTSEL_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E000A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_MFA_ALTSEL_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_MFA_ALTSEL_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_MFA_ALTSEL_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfa_alt_sel[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If mfa_alt_sel[x]=1, pin MF_A[x] will become its �alternative  function� as defined in the MF pin mapping table.<br>Alternative
functions are generally duplicates of secondary, tertiary and debug
functions. They permit these functions to be routed to alternative pins
where there are clashes on a particular pin or for more convenient
routing.<br>Default: 32�b0. (GPIO functionality)<br>0: INVALID<br>1: INVALID<br>2: INVALID<br>3: INVALID<br>4: INVALID<br>5: div8_sys (Output) clk_sys/8 test point<br>6: div8_pipe (Output) PCIe clk_pipe/8 test point<br>7: div4_utmia (Output) clk_usba (UTMI clock) test point<br>8: div4_utmib (Output) clk_usbb (UTMI clock) test point<br>9: irrx_in (Input) Infra-red receiver input<br>10: pllb_wck (Output) Word clock derived from PLLB<br>11: pllb_bck (Output) Bit clock derived from PLLB<br>12: INVALID<br>13: INVALID<br>14: INVALID<br>15: INVALID<br>16: INVALID<br>17: INVALID<br>18: ref300_wck (Output) Word clock derived from 300MHz clock<br>19: ref300_bck (Output) Bit clock derived from 300MHz clock<br>20: INVALID<br>21: INVALID<br>22: INVALID<br>23: INVALID<br>24: INVALID<br>25: INVALID<br>26: INVALID<br>27: INVALID<br>28: uarta_cts_n (Input) UARTA Clear To Send<br>29: uarta_rts_n (Output) UARTA Request To Send<br>30: uarta_sin   (Input) UARTA Serial Input<br>31: uarta_sout  (Output) UARTA Serial Output</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_MFA_PULLUP_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E000AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_MFA_PULLUP_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_MFA_PULLUP_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_MFA_PULLUP_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfa_pullup_sel_n[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"If mfa_pullup_sel_n[x]=0, internal pullup for pin MF_A[x] will be enabled. "</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_SCRATCHWORD0_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E000C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_SCRATCHWORD0_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_SCRATCHWORD0_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_SCRATCHWORD0_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">scratchword0[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Scratch word for interprocessor communication.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_SCRATCHWORD1_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E000C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_SCRATCHWORD1_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_SCRATCHWORD1_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_SCRATCHWORD1_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">scratchword1[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Scratch word for interprocessor communication.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_SCRATCHWORD2_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E000CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_SCRATCHWORD2_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_SCRATCHWORD2_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_SCRATCHWORD2_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">scratchword2[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Scratch word for interprocessor communication.<br>This register is not reset hence its value persists across a hard reset.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_SCRATCHWORD3_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E000D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_SCRATCHWORD3_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_SCRATCHWORD3_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_SCRATCHWORD3_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">scratchword3[31:0]</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Scratch word for interprocessor communication.<br>This register is not reset hence its value persists across a hard reset.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_MONMUX_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E000D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_MONMUX_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_MONMUX_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_MONMUX_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mon_mux_stretch[3:0]</td><td align="center">27:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Each
trigger output is stretched by mon_mux_stretch clk_sys clock cycles in
order to get through the MF output buffers and be easily datable by a
scope.</td></tr>
<tr><td align="center">mon_muxb_sel[4:0]</td><td align="center">12:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Select
which monitor�s trigger output is multiplexed onto mon_muxb which may
be routed to an MF pin for observability. See mapping spreadsheet for
assignment of values.</td></tr>
<tr><td align="center">mon_muxa_sel[4:0]</td><td align="center">4:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Select
which monitor�s trigger output is multiplexed onto mon_muxa which may
be routed to an MF pin for observability. See mapping spreadsheet for
assignment of values.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_GMACB_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E000EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_GMACB_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_GMACB_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_GMACB_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">gmacb_cken_rx_in</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables input to both gmacb_rx_vardelay and gmacb_rxn_vardelay variable delay lines.</td></tr>
<tr><td align="center">gmacb_cken_rxn_out</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables clk_gmacb_rx_n output of gmacb_rxn_vardelay variable delay line (NOT_ORed).</td></tr>
<tr><td align="center">gmacb_cken_rx_out</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables clk_gmacb_rx output of gmacb_rx_vardelay variable delay line (ANDed).</td></tr>
<tr><td align="center">gmacb_cken_tx_in</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables input to both gmacb_tx_vardelay and gmacb_txn_vardelay variable delay lines.</td></tr>
<tr><td align="center">gmacb_cken_txn_out</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables clk_gmacb_tx_n output of gmacb_txn_vardelay variable delay line (NOT_ORed).</td></tr>
<tr><td align="center">gmacb_cken_tx_out</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables clk_gmacb_tx output of gmacb_tx_vardelay variable delay line (ANDed).</td></tr>
<tr><td align="center">gmacb_rx_source</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Selects receive clock source:<br>0: ETHB_RXCLKI (2.5/25/125MHz input).<br>1: CLKI_125M (125MHz reference input).</td></tr>
<tr><td align="center">gmacb_tx_source</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Selects transmit clock source:<br>0: �low speed transmit clock source� (see register below)<br>1: CLKI_125M (125MHz reference input).</td></tr>
<tr><td align="center">gmacb_low_tx_source</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Selects �low speed transmit clock source�:<br>0: clk_ref25/10 (2.5MHz).<br>1: clk_ref25 (25MHz).</td></tr>
<tr><td align="center">gmacb_auto_tx_source</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"When set, GMACB 10/100/1000 speed indication automatically selects between transmit clock sources."</td></tr>
<tr><td align="center">gmacb_rgmii</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Always returns �1� (indicates interface is RGMII).</td></tr>
<tr><td align="center">gmacb_simple_mux</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"When
set, the multiplexing of transmit clock sources are done by simple
multiplexers that do not rely upon the input clocks to be running for
it to switch but may produce glitches on switching."<br>NB: Receive clock multiplexing is always simple glitchy because it never needs changing dynamically.</td></tr>
<tr><td align="center">gmacb_cken_gtx</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enables the ETHB_TXCLKO to follow the transmit clock. This is required for source-synchronous RGMII transmission.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_USBBPHY_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E000F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_USBBPHY_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_USBBPHY_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_USBBPHY_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">usbbphy_siddq</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Test feature.</td></tr>
<tr><td align="center">usbbphy_loopback_enb</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Test feature.</td></tr>
<tr><td align="center">usbbphy_vatest_en</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Test feature.</td></tr>
<tr><td align="center">usbbphy_suspendm_manual_enable</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"When
set, the active-low SUSPENDM suspend control of the USBBPHY is
controlled by the �usbbphy_suspendm_manual_state� bit (see below)
rather than from the USBMPH core. "</td></tr>
<tr><td align="center">usbbphy_suspendm_manual_state</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>See above. Default 1�b0</td></tr>
<tr><td align="center">usbbphy_ate_reset</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBBPHY test control interface reset signal. Default 1�b0</td></tr>
<tr><td align="center">usbbphy_test_din</td><td align="center">13:6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBBPHY test control interface write data signal. Default 8�b0</td></tr>
<tr><td align="center">usbbphy_test_addr</td><td align="center">5:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBBPHY test control interface address signal. Default 4�b0</td></tr>
<tr><td align="center">usbbphy_test_dout_sel</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBBPHY test control interface read data multiplexer select  signal. Default 1�b0</td></tr>
<tr><td align="center">usbbphy_test_clk</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>USBBPHY
test control interface clock signal. Default 1�b0. Bit-blasted clock.
The test control interface can be used to program special PHY modes.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_USBBPHY_STAT_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E000F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_USBBPHY_STAT_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_USBBPHY_STAT_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_USBBPHY_STAT_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">usbbphy_test_dout</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>USBHSPHY test control interface read data signal.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_REF300_DIV_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E000F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_REF300_DIV_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_REF300_DIV_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_REF300_DIV_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">ref300_wck_duty[1:0]</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Controls ref300_wck duty cycle:<br>00: duty cycle is 50:50 (or close to 50:50 if div_word is odd).<br>01: wck is high for 1 bck period only.<br>10: wck is high for 8 bck periods.<br>11: wck is high for 16 bck periods.</td></tr>
<tr><td align="center">ref300_bck_inv</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"When set, will invert ref300_bck so that falling edge is coincident with ref300_wck changes instead of rising edges."</td></tr>
<tr><td align="center">ref300_div_word[9:0]</td><td align="center">27:18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Divider used to produce ref300_wck word clock (from ref300_bck bit  clock) that can be routed out on an MF pin.</td></tr>
<tr><td align="center">ref300_div_int[9:0]</td><td align="center">17:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"Integer
part of divider, used to produce ref300_bck bit clock (from 300MHz
ref_300 SATA clock) that can be routed out on an MF pin."</td></tr>
<tr><td align="center">ref300_div_frac[7:0]</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"Fractional
part of divider, used to produce ref300_bck bit clock (from 300MHz
ref_300 SATA output clock) that can be routed out on an MF pin."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_GMACA_DELAY_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_GMACA_DELAY_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_GMACA_DELAY_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_GMACA_DELAY_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">gmaca_rxn_vardelay[7:0]</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets clk_gmaca_rx_n variable delay line value (1=minimum delay)</td></tr>
<tr><td align="center">gmaca_rx_vardelay[7:0]</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets clk_gmaca_rx variable delay line value (1=minimum delay)</td></tr>
<tr><td align="center">gmaca_txn_vardelay[5:0]</td><td align="center">13:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets clk_gmaca_tx_n variable delay line value (1=minimum delay)</td></tr>
<tr><td align="center">gmaca_tx_vardelay[5:0]</td><td align="center">5:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets clk_gmaca_tx variable delay line value (1=minimum delay)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_GMACB_DELAY_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_GMACB_DELAY_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_GMACB_DELAY_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_GMACB_DELAY_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">gmacb_rxn_vardelay[7:0]</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets clk_gmacb_rx_n variable delay line value (1=minimum delay)</td></tr>
<tr><td align="center">gmacb_rx_vardelay[7:0]</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets clk_gmacb_rx variable delay line value (1=minimum delay)</td></tr>
<tr><td align="center">gmacb_txn_vardelay[5:0]</td><td align="center">13:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets clk_gmacb_tx_n variable delay line value (1=minimum delay)</td></tr>
<tr><td align="center">gmacb_tx_vardelay[5:0]</td><td align="center">5:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets clk_gmacb_tx variable delay line value (1=minimum delay)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_GMAC_DLL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_GMAC_DLL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_GMAC_DLL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_GMAC_DLL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">gmac_dll_source[1:0]</td><td align="center">10:9</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Select DLL clock source:<br>00: ETHA_RXCLKI<br>01: ETHA_RXCLKI<br>10: CLKI_125M<br>11: reserved</td></tr>
<tr><td align="center">gmac_dll_delay[8:0]</td><td align="center">8:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sets DLL delay line value.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_GMAC_SAMP_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0010C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_GMAC_SAMP_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_GMAC_SAMP_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_GMAC_SAMP_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">gmac_dll_sample</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns DLL sample register value.<br>DLL can be used to measure the period and duty cycle of clock sources.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_AMBA_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_AMBA_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_AMBA_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_AMBA_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">amba_dynamic_arb[5:0]</td><td align="center">5:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>enable dynamic arbitration on AMBA arbiters.<br>0 = fixed priority<br>1 = Round-Robin arbitration.<br>Default = all 1s i.e. dynamic arbitration.<br>Each bit selects different arbiter:<br>�[0] icm_DDRAME<br>�[1] icm_DDRAMO<br>�[2] icm_SCRATCH_L2<br>�[3] icm_SCRATCH<br>�[4] icm_PCIEA<br>�[5] icm_PCIEB</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_HCSL_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_HCSL_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_HCSL_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_HCSL_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">hcsl_pcieb_enable</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable clock output onto PCIEB_REFCLKO[P|M]. Intended to clock PCIe endpoint device connected to PCIEB.</td></tr>
<tr><td align="center">hcsl_pciea_enable</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable clock output onto PCIEA_REFCLKO[P|M]. Intended to clock PCIe endpoint device connected to PCIEA.</td></tr>
<tr><td align="center">hcsl_pcie_enable</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable
clock output onto PCIE_REFCLKO[P|M]. Intended to be looped back to
PCIE_REFCLKI[P|M] to clock the PCIEPHY (and hence both PCIEA and PCIEB
ports).</td></tr>
<tr><td align="center">hcsl_bias_en</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable bias current for HCSL buffers.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_USBAPHY_TUNE_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_USBAPHY_TUNE_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_USBAPHY_TUNE_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_USBAPHY_TUNE_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">usbaphy_txhsxvtune[1:0]</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TXHSXVTUNE0[1:0] parameter to phy. Default: �11�.</td></tr>
<tr><td align="center">usbaphy_vreftune[3:0]</td><td align="center">17:14</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TXVREFTUNE0[3:0] parameter to phy. Default: �1000�.</td></tr>
<tr><td align="center">usbaphy_risetune</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TXRISETUNE0 parameter to phy. Default: �0�.</td></tr>
<tr><td align="center">usbaphy_preemphasistune</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TXPREEMPHASISTUNE0 parameter to phy. Default: �0�.</td></tr>
<tr><td align="center">usbaphy_fslstune[3:0]</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>COMPDISTUNE[3:0] parameter to phy. Default: �0011�.</td></tr>
<tr><td align="center">usbaphy_sqrxtune[2:0]</td><td align="center">7:5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>SQRXTUNE0 [2:0] parameter to phy. Default: �011�.</td></tr>
<tr><td align="center">usbaphy_plltune</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PLLTUNE parameter to phy. Default: �0�. USB phy documentation says �tie to DVSS directly�; should this be programmable?<br>not on current PHY but is in v4.1a databook!</td></tr>
<tr><td align="center">usbaphy_compdistune[2:0]</td><td align="center">3:1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>COMPDISTUNE[2:0] parameter to phy. Default: �100�.</td></tr>
<tr><td align="center">usbaphy_biastune</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>BIASTUNE parameter to phy. Default: �1� USB phy documentation says �tie to DVDD directly�; should this be programmable?</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_USBBPHY_TUNE_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0011C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_USBBPHY_TUNE_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_USBBPHY_TUNE_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_USBBPHY_TUNE_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">usbbphy_txhsxvtune[1:0]</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TXHSXVTUNE0[1:0] parameter to phy. Default: �11�.</td></tr>
<tr><td align="center">usbbphy_vreftune[3:0]</td><td align="center">17:14</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TXVREFTUNE0[3:0] parameter to phy. Default: �1000�.</td></tr>
<tr><td align="center">usbbphy_risetune</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TXRISETUNE0 parameter to phy. Default: �0�.</td></tr>
<tr><td align="center">usbbphy_preemphasistune</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TXPREEMPHASISTUNE0 parameter to phy. Default: �0�.</td></tr>
<tr><td align="center">usbbphy_fslstune[3:0]</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>COMPDISTUNE[3:0] parameter to phy. Default: �0011�.</td></tr>
<tr><td align="center">usbbphy_sqrxtune[2:0]</td><td align="center">7:5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>SQRXTUNE0 [2:0] parameter to phy. Default: �011�.</td></tr>
<tr><td align="center">usbbphy_plltune</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PLLTUNE parameter to phy. Default: �0�. USB phy documentation says �tie to DVSS directly�; should this be programmable?<br>not on current PHY but is in v4.1a databook!</td></tr>
<tr><td align="center">usbbphy_compdistune[2:0]</td><td align="center">3:1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>COMPDISTUNE[2:0] parameter to phy. Default: �100�.</td></tr>
<tr><td align="center">usbbphy_biastune</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>BIASTUNE parameter to phy. Default: �1� USB phy documentation says �tie to DVDD directly�; should this be programmable?</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_PCIEA_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_PCIEA_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_PCIEA_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_PCIEA_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_ob_translation_enable</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound Address Translation Enable</td></tr>
<tr><td align="center">pciea_link_up</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates that the LINK between the PCIe Endpoint and PCIe Root Complex is complete.</td></tr>
<tr><td align="center">pciea_req_entr_l1</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>???</td></tr>
<tr><td align="center">pciea_ready_entr_l23</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indication
from the CPU that it is ready to enter the L23 state. The core will
delay sending PM_Enter_L23 (in response to PM_Turn_Off) until this
signal becomes active. Set to 1 for applications that do not require
this feature.</td></tr>
<tr><td align="center">pciea_req_exit_l1</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"CPU request to Exit ASPM state L1, only effective if L1 is enabled."</td></tr>
<tr><td align="center">pciea_init_rst</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">W</td><td>Request
from the CPU to send a Hot Reset to the downstream device. The Hot
Reset request is sent when �1� is written to this bit (self clearing).
Only applicable when the controller is configured as a Root Complex.</td></tr>
<tr><td align="center">pciea_req_retry_en</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>#################################</td></tr>
<tr><td align="center">pciea_sys_int</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"When
sys_int goes from low to high, the core generates an Assert_INTA
Message. When sys_int goes from high to low, the core generates a
Deassert_INTA Message. Only applicable when the controller is
configured as an Endpoint."</td></tr>
<tr><td align="center">pciea_ltssm_enable</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"Driven
low after reset to hold the core in the Detect state until the
application is ready. When the cpu has finished initializing the core
configuration registers, it asserts ltssm_enable to allow the core to
continue Link establishment."</td></tr>
<tr><td align="center">pciea_device_type</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0000b: PCI Express Endpoint device<br>0001b: Legacy PCI Express Endpoint device<br>0100b: Root Port of PCI Express Root Complex</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_PCIEB_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00124</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_PCIEB_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_PCIEB_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_PCIEB_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_ob_translation_enable</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound Address Translation Enable</td></tr>
<tr><td align="center">pcieb_link_up</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates that the LINK between the PCIe Endpoint and PCIe Root Complex is complete.</td></tr>
<tr><td align="center">pcieb_req_entr_l1</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>???</td></tr>
<tr><td align="center">pcieb_ready_entr_l23</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indication
from the CPU that it is ready to enter the L23 state. The core will
delay sending PM_Enter_L23 (in response to PM_Turn_Off) until this
signal becomes active. Set to 1 for applications that do not require
this feature.</td></tr>
<tr><td align="center">pcieb_req_exit_l1</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"CPU request to Exit ASPM state L1, only effective if L1 is enabled."</td></tr>
<tr><td align="center">pcieb_init_rst</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">W</td><td>Request
from the CPU to send a Hot Reset to the downstream device. The Hot
Reset request is sent when �1� is written to this bit (self clearing).
Only applicable when the controller is configured as a Root Complex.</td></tr>
<tr><td align="center">pcieb_req_retry_en</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>???</td></tr>
<tr><td align="center">pcieb_sys_int</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"When
sys_int goes from low to high, the core generates an Assert_INTA
Message. When sys_int goes from high to low, the core generates a
Deassert_INTA Message. Only applicable when the controller is
configured as an Endpoint."</td></tr>
<tr><td align="center">pcieb_ltssm_enable</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"Driven
low after reset to hold the core in the Detect state until the
application is ready. When the cpu has finished initializing the core
configuration registers, it asserts ltssm_enable to allow the core to
continue Link establishment."</td></tr>
<tr><td align="center">pcieb_device_type</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0000b: PCI Express Endpoint device<br>0001b: Legacy PCI Express Endpoint device<br>0100b: Root Port of PCI Express Root Complex</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_PCIEPHY_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00128</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_PCIEPHY_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_PCIEPHY_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_PCIEPHY_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciephy_mpll_ncy5[1:0]</td><td align="center">26:25</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>MPLL x1 multiplier. Set to 01 to produce 2.5Gbps from 50MHz MPLL reference. Default 01.</td></tr>
<tr><td align="center">pciephy_mpll_ncy[4:0]</td><td align="center">24:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>MPLL x4 multiplier. Set to 00101 to produce 2.5Gbps from 50MHz MPLL reference. Default 00101.</td></tr>
<tr><td align="center">pciephy_mpll_prescale[1:0]</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>MPLL
prescaler. Set to 10 to produce 50MHz MPLL reference from 100MHz
reference input. Set to 01 to produce 50MHz MPLL reference from 25MHz
reference input. Default 10.</td></tr>
<tr><td align="center">pciephy_use_ref_clk_alt</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reference clock source:<br>0: Use external 100MHz source via PCIE_REFCLKI[P|M] pins.<br>1: Use internal 25MHz XTAL source.</td></tr>
<tr><td align="center">pciephy_acjt_lv[4:0]</td><td align="center">16:12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>ACJTAG receive comparator control. Default 00110 is the recommended setting (Vmin=562mV; Vhyst_level=115mV)</td></tr>
<tr><td align="center">pciephy_los_lv[4:0]</td><td align="center">11:7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LOS detection threshold control. Default 10100 is the recommended setting.</td></tr>
<tr><td align="center">pciephy_tx_lv[4:0]</td><td align="center">6:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fine transmit level control. Default 00110 is the recommended setting (approx 1V peak-to-peak).</td></tr>
<tr><td align="center">pciephy_rtune_do_tune</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Initiate resistor calibration.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_PCIEPHY_CR_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0012C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_PCIEPHY_CR_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_PCIEPHY_CR_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_PCIEPHY_CR_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/C_SYSCTRL_DDRAMIO_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00134</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SYSCTRL_DDRAMIO_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SYSCTRL_DDRAMIO_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SYSCTRL_DDRAMIO_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">ddramio_pwd</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>DDRAM I/O input receiver powerdown. 0=active; 1=powered-down.</td></tr>
<tr><td align="center">ddramio_lvcmos</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Selects 0=SSTL18 or 1=Mobile DDR DDRAM I/O.</td></tr>
<tr><td align="center">ddramio_ds_dqs</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Output drive strength for DDRAM_DQS[1:0]* outputs.<br>"If DDR I/O selected (ddramio_lvcmos=0), determines 00=10=full-strength, 01=11= half-strength output drive. "<br>"If Mobile DDR I/O selected (ddramio_lvcmos=1), determines 00=10mA, 01=4mA, 10=8mA or 11=2mA output drive."</td></tr>
<tr><td align="center">ddramio_ds_dqdm</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"Output drive strength for DDRAM_DQ[15:0], and DDRAM_DM[1:0] outputs."<br>"If DDR I/O selected (ddramio_lvcmos=0), determines 00=10=full-strength, 01=11= half-strength output drive. "<br>"If Mobile DDR I/O selected (ddramio_lvcmos=1), determines 00=10mA, 01=4mA, 10=8mA or 11=2mA output drive."</td></tr>
<tr><td align="center">ddramio_ds_ck</td><td align="center">3:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Output drive strength for DDRAM_CK/DDRAM_CKN outputs.<br>"If DDR I/O selected (ddramio_lvcmos=0), determines 00=10=full-strength, 01=11= half-strength output drive. "<br>"If Mobile DDR I/O selected (ddramio_lvcmos=1), determines 00=10mA, 01=4mA, 10=8mA or 11=2mA output drive."</td></tr>
<tr><td align="center">ddramio_ds_other</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Output drive strength for DDRAM_* address/control outputs.<br>"If DDR I/O selected (ddramio_lvcmos=0), determines 00=10=full-strength, 01=11= half-strength output drive. "<br>"If Mobile DDR I/O selected (ddramio_lvcmos=1), determines 00=10mA, 01=4mA, 10=8mA or 11=2mA output drive."<br>"Note: ODT impedance set within DDRAM core. 2-bit. 00=disabled; 01=75 Ohm, 10=150 Ohm."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_POM0_MEM_ADDR_OFFSET</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00138</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_POM0_MEM_ADDR_OFFSET</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_POM0_MEM_ADDR_OFFSET_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_POM0_MEM_ADDR_OFFSET_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_mem0_pcie_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start PCIe address for accesses in AMBA memory region 0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_POM1_MEM_ADDR_OFFSET</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0013C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_POM1_MEM_ADDR_OFFSET</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_POM1_MEM_ADDR_OFFSET_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_POM1_MEM_ADDR_OFFSET_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_mem1_pcie_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start PCIe address for accesses in AMBA memory region 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN0_MEM_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN0_MEM_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN0_MEM_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN0_MEM_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_mem0_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for memory region 0 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN1_MEM_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00144</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN1_MEM_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN1_MEM_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN1_MEM_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_mem1_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for memory region 1 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN_IO_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00148</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN_IO_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN_IO_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN_IO_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_io_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for I/O accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN_CFG0_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0014C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN_CFG0_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN_CFG0_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN_CFG0_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_cfg0_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for Config type-0 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN_CFG1_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00150</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN_CFG1_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN_CFG1_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN_CFG1_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_cfg1_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for Config type-1 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN_MSG_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00154</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN_MSG_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN_MSG_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN_MSG_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_msg_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for Message accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN0_MEM_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00158</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN0_MEM_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN0_MEM_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN0_MEM_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_mem0_amba_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for memory region 0 accesses.<br>Value defines end address on 1MB boundary. Implied LSBs on limit address is 0xFFFFF.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN1_MEM_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0015C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN1_MEM_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN1_MEM_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN1_MEM_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_mem1_amba_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for memory region 1 accesses.<br>Value defines end address on 1MB boundary. Implied LSBs on limit address is 0xFFFFF.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN_IO_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00160</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN_IO_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN_IO_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN_IO_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_io_amba_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for I/O accesses.<br>Value defines end address on 1MB boundary. Implied LSBs on limit address is 0xFFFFF.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN_CFG0_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00164</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN_CFG0_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN_CFG0_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN_CFG0_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_cfg0_amba_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for Config type-0 accesses.<br>Value defines end address on 1MB boundary. Implied LSBs on limit address is 0xFFFFF.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN_CFG1_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00168</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN_CFG1_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN_CFG1_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN_CFG1_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_cfg1_amba_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for Config type-1 accesses.<br>Value defines end address on 1MB boundary. Implied LSBs on limit address is 0xFFFFF.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_IN_MSG_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0016C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_IN_MSG_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_IN_MSG_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_IN_MSG_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_out_msg_amba_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for Message accesses.<br>Value defines end address on 1MB boundary. Implied LSBs on limit address is 0xFFFFF.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_AHB_SLAVE_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00170</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_AHB_SLAVE_CTRL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_AHB_SLAVE_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_AHB_SLAVE_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field26</td><td align="center">31:26</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">pciea_out_ahbslave_be</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Byte enables. Required to support zero byte requests<br>Default: 1111.</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">pciea_out_ahbslave_msg</td><td align="center">20:13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PCIe MSG code</td></tr>
<tr><td align="center">pciea_out_ahbslave_tc</td><td align="center">12:10</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TC (traffic class) field of the completion header</td></tr>
<tr><td align="center">pciea_out_ahbslave_attr</td><td align="center">9:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Attribute field of the completion header</td></tr>
<tr><td align="center">pciea_out_ahbslave_td</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TD bit (ECRC bit) of the completion header</td></tr>
<tr><td align="center">pciea_out_ahbslave_ep</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>EP bit (poison bit) of the completion header</td></tr>
<tr><td align="center">pciea_out_ahbslave_bcm</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>BCM bit (byte count modified) of the completion header</td></tr>
<tr><td align="center">Field0</td><td align="center">4:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_POM0_MEM_ADDR_OFFSET</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00174</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_POM0_MEM_ADDR_OFFSET</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_POM0_MEM_ADDR_OFFSET_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_POM0_MEM_ADDR_OFFSET_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_mem0_pcie_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start PCIe address for accesses in AMBA memory region 0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_POM1_MEM_ADDR_OFFSET</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00178</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_POM1_MEM_ADDR_OFFSET</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_POM1_MEM_ADDR_OFFSET_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_POM1_MEM_ADDR_OFFSET_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_mem1_pcie_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start PCIe address for accesses in AMBA memory region 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_IN0_MEM_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0017C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_IN0_MEM_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_IN0_MEM_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_IN0_MEM_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_mem0_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for memory region 0 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_IN1_MEM_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_IN1_MEM_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_IN1_MEM_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_IN1_MEM_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_mem1_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for memory region 1 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_IN_IO_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00184</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_IN_IO_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_IN_IO_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_IN_IO_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_io_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for I/O accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_IN_CFG0_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00188</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_IN_CFG0_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_IN_CFG0_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_IN_CFG0_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_cfg0_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for Config type-0 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_IN_CFG1_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0018C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_IN_CFG1_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_IN_CFG1_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_IN_CFG1_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_cfg1_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for Config type-1 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_IN_MSG_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00190</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_IN_MSG_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_IN_MSG_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_IN_MSG_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_msg_amba_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation start AMBA address for Message accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_IN0_MEM_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00194</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_IN0_MEM_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_IN0_MEM_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_IN0_MEM_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_mem0_pcie_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for memory region 0 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_IN1_MEM_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E00198</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_IN1_MEM_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_IN1_MEM_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_IN1_MEM_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_mem1_pcie_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for memory region 1 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_IN_IO_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E0019C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_IN_IO_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_IN_IO_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_IN_IO_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_io_pcie_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for I/O accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_IN_CFG0_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_IN_CFG0_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_IN_CFG0_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_IN_CFG0_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_cfg0_pcie_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for Config type-0 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_IN_CFG1_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_IN_CFG1_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_IN_CFG1_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_IN_CFG1_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_cfg1_pcie_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for Config type-1 accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/ PCIEB_IN_MSG_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td> PCIEB_IN_MSG_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('%20PCIEB_IN_MSG_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class=" PCIEB_IN_MSG_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_out_msg_pcie_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Outbound address translation end AMBA address for Message accesses.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_AHB_SLAVE_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_AHB_SLAVE_CTRL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_AHB_SLAVE_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_AHB_SLAVE_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field26</td><td align="center">31:26</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">pcieb_out_ahbslave_be</td><td align="center">25:22</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Byte enables. Required to support zero byte requests<br>Default: 1111.</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">pcieb_out_ahbslave_msg</td><td align="center">20:13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PCIe MSG code</td></tr>
<tr><td align="center">pcieb_out_ahbslave_tc</td><td align="center">12:10</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TC (traffic class) field of the completion header</td></tr>
<tr><td align="center">pcieb_out_ahbslave_attr</td><td align="center">9:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Attribute field of the completion header</td></tr>
<tr><td align="center">pcieb_out_ahbslave_td</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>TD bit (ECRC bit) of the completion header</td></tr>
<tr><td align="center">pcieb_out_ahbslave_ep</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>EP bit (poison bit) of the completion header</td></tr>
<tr><td align="center">pcieb_out_ahbslave_bcm</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>BCM bit (byte count modified) of the completion header</td></tr>
<tr><td align="center">Field0</td><td align="center">4:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_AHB_SLAVE_CFG_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_AHB_SLAVE_CFG_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_AHB_SLAVE_CFG_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pciea_bus_number�</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PCIe Bus Number</td></tr>
<tr><td align="center">pciea_dev_number</td><td align="center">23:19</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PCIe Device Number</td></tr>
<tr><td align="center">pciea_func_number�</td><td align="center">18:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PCIe Function Number</td></tr>
<tr><td align="center">Reserved</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_AHB_SLAVE_CFG_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_AHB_SLAVE_CFG_CTRL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_AHB_SLAVE_CFG_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_AHB_SLAVE_CFG_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pcieb_bus_number�</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PCIe Bus Number</td></tr>
<tr><td align="center">pcieb_dev_number</td><td align="center">23:19</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PCIe Device Number</td></tr>
<tr><td align="center">pcieb_func_number�</td><td align="center">18:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>PCIe Function Number</td></tr>
<tr><td align="center">Reserved</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_AHB_MSTR_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_AHB_MSTR_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_AHB_MSTR_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:14</td><td align="center">&nbsp;</td><td align="center">R</td><td></td></tr>
<tr><td align="center">pciea_mstr_resp_info_re</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response error.When set to 1, this will set an AHB response error to a UR of PCIe completion</td></tr>
<tr><td align="center">Reserved</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R</td><td></td></tr>
<tr><td align="center">pciea_mstr_resp_info_fn</td><td align="center">11:9</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s Function number</td></tr>
<tr><td align="center">pciea_mstr_resp_info_td</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s TD</td></tr>
<tr><td align="center">pciea_mstr_resp_info_ep</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s EP</td></tr>
<tr><td align="center">pciea_mstr_resp_info_bcm</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s BCM</td></tr>
<tr><td align="center">pciea_mstr_resp_info_tc</td><td align="center">5:3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s TC</td></tr>
<tr><td align="center">Reserved�</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R</td><td></td></tr>
<tr><td align="center">pciea_mstr_resp_info_att</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s attributes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_AHB_MSTR_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_AHB_MSTR_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_AHB_MSTR_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:14</td><td align="center">&nbsp;</td><td align="center">R</td><td></td></tr>
<tr><td align="center">pcieb_mstr_resp_info_re</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response error.When set to 1, this will set an AHB response error to a UR of PCIe completion</td></tr>
<tr><td align="center">Reserved</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R</td><td></td></tr>
<tr><td align="center">pcieb_mstr_resp_info_fn</td><td align="center">11:9</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s Function number</td></tr>
<tr><td align="center">pcieb_mstr_resp_info_td</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s TD</td></tr>
<tr><td align="center">pcieb_mstr_resp_info_ep</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s EP</td></tr>
<tr><td align="center">pcieb_mstr_resp_info_bcm</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s BCM</td></tr>
<tr><td align="center">pcieb_mstr_resp_info_tc</td><td align="center">5:3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s TC</td></tr>
<tr><td align="center">Reserved�</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R</td><td></td></tr>
<tr><td align="center">pcieb_mstr_resp_info_att</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AHB response�s attributes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEA_AHB_SLV_MISC_INFO</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEA_AHB_SLV_MISC_INFO</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEA_AHB_SLV_MISC_INFO_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEA_AHB_SLV_MISC_INFO_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:11</td><td align="center">&nbsp;</td><td align="center">R</td><td></td></tr>
<tr><td align="center">pciea_slv_resp_misc_info</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>[10]: Indicates that AHB response is for a Non-Posted request.<br>[9:7]: AHB response transaction�s status defined as the same location of PCIe completion header status field.<br>[6:5]: AHB response transaction�s attributes<br>[4:2]: AHB response transaction�s TC<br>[1]: AHB response transaction�s TD<br>[0]: AHB response transaction�s BCM</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PCIEB_AHB_SLV_MISC_INFO</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIEB_AHB_SLV_MISC_INFO</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIEB_AHB_SLV_MISC_INFO_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIEB_AHB_SLV_MISC_INFO_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:11</td><td align="center">&nbsp;</td><td align="center">R</td><td></td></tr>
<tr><td align="center">pcieb_slv_resp_misc_info</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>[10]: Indicates that AHB response is for a Non-Posted request.<br>[9:7]: AHB response transaction�s status defined as the same location of PCIe completion header status field.<br>[6:5]: AHB response transaction�s attributes<br>[4:2]: AHB response transaction�s TC<br>[1]: AHB response transaction�s TD<br>[0]: AHB response transaction�s BCM</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PLLA_CTRL0_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PLL reset.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PLLA_CTRL0_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PLLA_CTRL0_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">plla_resync_mode</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  resynchronization mode:<br>0 = direct control of PLL parameters. Parameters should only be changed when the PLL is bypassed.<br>1 = automatic resynchronization of some parameters whilst the PLL is locked, triggered by plla_resync_load</td></tr>
<tr><td align="center">plla_resync_load</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Trigger
loading of new PLL parameters plla_fbdiv, plla_sslope, plla_sfreq,
plla_ssen and plla_dithen whilst PLL is locked when plla_resync_mode=1.<br>This bit is self-clearing.</td></tr>
<tr><td align="center">plla_test</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable PLL test mode.<br>1 = digital dividers (prescalar, multiplier and postscalar) are cascaded.</td></tr>
<tr><td align="center">plla_ssen</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  down-spreading enable.<br>1 = down-spreading enabled.<br>Default: 0 (disabled for fast lock to 800MHz output; 200MHz clk_sys)</td></tr>
<tr><td align="center">plla_refdiv[5:0]</td><td align="center">13:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  input (reference) divider NR=refdiv+1<br>Default: 3 (for NR=4 800MHz output; 200MHz clk_sys)</td></tr>
<tr><td align="center">plla_fasten</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  enable fast locking</td></tr>
<tr><td align="center">plla_outdiv[2:0]</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL output divider OD=plla_outdiv+1<br>Default: 0 (OD=1; divide by 1)</td></tr>
<tr><td align="center">plla_ensat</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  enable saturation behaviour<br>Default: 1</td></tr>
<tr><td align="center">plla_dithen</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  enable fractional accumulation</td></tr>
<tr><td align="center">plla_bypass</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable
bypassing the system PLL. Clk_qdr will follow the 25MHz
clk_sataphy_ref25 and hence the ARM will run at 12.5MHz and clk_sys
will run at 6.25MHz. The system PLL must be bypassed whilst its output
frequency is being reprogrammed.<br>NB: This affects the glitchless bypass multiplexer outside of the PLL. The PLL�s own bypass multiplexer select is tied.<br>Hence bypass overrides powerdown.<br>Default: 0 (not bypassed)</td></tr>
<tr><td align="center">plla_pwrdn</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable system PLL power down.<br>Default: 0 (not powered down)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PLLA_CTRL1_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PLLA_CTRL1_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PLLA_CTRL1_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PLLA_CTRL1_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">plla_fbdiv[25:0]</td><td align="center">25:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL feedback divider (i.e. PLL multiplier) NF=fbdiv/32768 (i.e. includes 15-bit fractional part)<br>NB: P=0 is invalid. Hardware will correct to 1 if this occurs.<br>Default: 0x400000 (NF=128 for 800MHz output; 200MHz clk_sys)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PLLA_CTRL2_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PLLA_CTRL2_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PLLA_CTRL2_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PLLA_CTRL2_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">plla_bwadj[11:0]</td><td align="center">27:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  bandwidth adjustment NB=bwadj+1<br>Default: 0x7F (NB=128)</td></tr>
<tr><td align="center">plla_sfreq[11:0]</td><td align="center">11:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  down-spreading frequency NS=sfreq<br>Default: 0x68 (NS=104 for approx 30kHz spreading frequency)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SYSCTRL/PLLA_CTRL3_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44E001FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PLLA_CTRL3_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PLLA_CTRL3_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PLLA_CTRL3_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">plla_sslope[25:0]</td><td align="center">25:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  down-spreading slope NV=sslope/32768<br>Default: 339 (NV=0.0104 for 0.5% spreading depth at 600MHz output)</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">SECCTRL</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x44F00000...0x44FFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Chip general/miscellaneous configuration/status registers (secureable)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('SECCTRL_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="SECCTRL_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/C_SECCTRL_MFB_SECSEL_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F00014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SECCTRL_MFB_SECSEL_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SECCTRL_MFB_SECSEL_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SECCTRL_MFB_SECSEL_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfb_sec_sel[17:0]</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"If sec_sel[x]=1, pin MF_B[x] will become its �secondary function� as defined in the MF pin mapping table."<br>Default: 18�b0. (GPIO functionality)<br>0: static_addr(0) (Output) Static memory bus address<br>1: static_addr(1) (Output) Static memory bus address<br>2: static_addr(2) (Output) Static memory bus address<br>3: static_addr(3) (Output) Static memory bus address<br>4: static_addr(4) (Output) Static memory bus address<br>5: static_addr(5) (Output) Static memory bus address<br>6: static_addr(6) (Output) Static memory bus address<br>7: static_addr(7) (Output) Static memory bus address<br>8: static_addr(8) (Output) Static memory bus address<br>9: static_addr(9) (Output) Static memory bus address<br>10: static_addr(10) (Output) Static memory bus address<br>11: static_addr(11) (Output) Static memory bus address<br>12: static_addr(12) (Output) Static memory bus address<br>13: static_addr(13) (Output) Static memory bus address<br>14: static_addr(14) (Output) Static memory bus address<br>15: static_addr(15) (Output) Static memory bus address<br>16: static_addr(16) (Output) Static memory bus address<br>17: static_addr(17) (Output) Static memory bus address</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/C_SECCTRL_LEON_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F00068</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SECCTRL_LEON_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SECCTRL_LEON_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SECCTRL_LEON_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">leon_start_addr[31:2]</td><td align="center">31:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>COPRO start address bits 31 to 2. Specifies the COPRO boot address. Should be programmed whilst the COPRO is held in reset.<br>Default 30�b0<br>NB: Coprocessor start address (1:0) = 2�b0</td></tr>
<tr><td align="center">leon_irq_promote</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Default 1�b0. Directly controls COPRO IRQ2 interrupt input (higher priority interrupt than IRQ1 from RPSC).</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/C_SECCTRL_MFB_TERSEL_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F0008C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SECCTRL_MFB_TERSEL_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SECCTRL_MFB_TERSEL_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SECCTRL_MFB_TERSEL_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfb_ter_sel[17:0]</td><td align="center">17:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If mfb_ter_sel[x]=1, pin MF_B[x] will become its �tertiary  function� as defined in the MF pin mapping table.<br>Default: 32�b0. (GPIO functionality)<br>0: audio_txlrck (Input) AUDIO transmit left/right clock<br>1: audio_tx_bitck (Input) AUDIO transmit bit clock<br>2: audio_txd(0) (Output) AUDIO transmit data channel #0<br>3: audio_txd(1) (Output) AUDIO transmit data channel #1<br>4: audio_txd(2) (Output) AUDIO transmit data channel #2<br>5: audio_txd(3) (Output) AUDIO transmit data channel #3<br>6: audio_rxlrck (Input) AUDIO receive left/right clock<br>7: audio_rx_bitck (Input) AUDIO receive bit clock<br>8: audio_rxd(0) (Input) AUDIO receive data channel #0<br>9: audio_rxd(1) (Input) AUDIO receive data channel #1<br>10: audio_rxd(2) (Input) AUDIO receive data channel #2<br>11: audio_rxd(3) (Input) AUDIO receive data channel #3<br>12: eth_trig (Input) IEEE1588 PTP trigger input<br>13: etha_pps (Output) IEEE1588 PTP pulse-per-second output from GMACA<br>14: ethb_pps (Output) IEEE1588 PTP pulse-per-second output from GMACB<br>15: INVALID<br>16: usba_pwro (Output) USB port A (host) power enable<br>17: usba_overi (Input) USB port A (host) overcurrent input</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/C_SECCTRL_MFB_QUATSEL_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F00094</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SECCTRL_MFB_QUATSEL_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SECCTRL_MFB_QUATSEL_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SECCTRL_MFB_QUATSEL_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfb_quat_sel[17:0]</td><td align="center">17:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If mfb_quat_sel[x]=1, pin MF_B[x] will become its �quaternary  function� as defined in the MF pin mapping table.<br>Default: 32�b0. (GPIO functionality)<br>0: INVALID<br>1: INVALID<br>2: INVALID<br>3: vdo_blue[5] (Output) Video Blue data<br>4: vdo_blue[6] (Output) Video Blue data<br>5: vdo_blue[7] (Output) Video Blue data<br>6: vdo_green[2] (Output) Video Green data<br>7: vdo_green[3] (Output) Video Green data<br>8: vdo_green[4] (Output) Video Green data<br>9: vdo_green[5] (Output) Video Green data<br>10: vdo_green[6] (Output) Video Green data<br>11: vdo_green[7] (Output) Video Green data<br>12: vdo_red[2] (Output) Video Red data<br>13: vdo_red[3] (Output) Video Red data<br>14: vdo_red[4] (Output) Video Red data<br>15: vdo_red[5] (Output) Video Red data<br>16: vdo_red[6] (Output) Video Red data<br>17: vdo_red[7] (Output) Video Red data</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/C_SECCTRL_SECURE_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F00098</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SECCTRL_SECURE_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SECCTRL_SECURE_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SECCTRL_SECURE_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">secure_jtag_en</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Enable JTAG.<br>"By default, JTAG is disabled and will be enabled depending upon chip configuration by BOOTROM."<br>Note:
This selects the use of the MF_B[4:0] pins as JTAG pins. The capability
of the chip to use JTAG is determined by BOND_MODE[1] and chip mode
(test mode).</td></tr>
<tr><td align="center">secure_others_lockout</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to SEC_CTRL from all masters except LEON. Disable all access from any master to top part of BOOTROM.</td></tr>
<tr><td align="center">secure_rpsc_lockout</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to RPSC.</td></tr>
<tr><td align="center">secure_uartb_lockout</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to UARTB.</td></tr>
<tr><td align="center">secure_gpiob_lockout</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to GPIOB.</td></tr>
<tr><td align="center">secure_scratch_lockout7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to SCRATCH base+56K to base+64K.</td></tr>
<tr><td align="center">secure_scratch _lockout6</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to SCRATCH base+48K to base+56K.</td></tr>
<tr><td align="center">secure_scratch _lockout5</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to SCRATCH base+40K to base+48K.</td></tr>
<tr><td align="center">secure_scratch _lockout4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to SCRATCH base+32K to base+40K.</td></tr>
<tr><td align="center">secure_scratch_lockout3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to SCRATCH base+24K to base+32K.</td></tr>
<tr><td align="center">secure_scratch _lockout2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to SCRATCH base+16K to base+24K.</td></tr>
<tr><td align="center">secure_scratch _lockout1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to SCRATCH base+8K to base+16K.</td></tr>
<tr><td align="center">secure_scratch _lockout0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Disable ARM access to SCRATCH base+0K to base+8K.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/C_SECCTRL_MFB_DEBUGSEL_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F0009C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SECCTRL_MFB_DEBUGSEL_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SECCTRL_MFB_DEBUGSEL_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SECCTRL_MFB_DEBUGSEL_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfb_debug_sel[17:0]</td><td align="center">17:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If mfb_debug_sel[x]=1, pin MF_B[x] will become its �debug  function� as defined in the MF pin mapping table.<br>Default: 32�b0. (GPIO functionality)<br>0: INVALID<br>1: INVALID<br>2: INVALID<br>3: INVALID<br>4: INVALID<br>5: INVALID<br>6: INVALID<br>7: INVALID<br>8: uartb_ri_n   (Input) UARTB Ring Indicator<br>9: uartb_cd_n (Input) UARTB Carrier Detect<br>10: uartb_dsr_n (Input) UARTB Data Set Ready<br>11: uartb_dtr_n (Output) UARTB Data Terminal Ready<br>12: INVALID<br>13: INVALID<br>14: INVALID<br>15: INVALID<br>16: INVALID<br>17: INVALID</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/C_SECCTRL_MFB_ALTSEL_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F000A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SECCTRL_MFB_ALTSEL_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SECCTRL_MFB_ALTSEL_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SECCTRL_MFB_ALTSEL_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfb_alt_sel[17:0]</td><td align="center">17:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If mfb_alt_sel[x]=1, pin MF_B[x] will become its �alternative  function� as defined in the MF pin mapping table.<br>Alternative
functions are generally duplicates of secondary, tertiary and debug
functions. They permit these functions to be routed to alternative pins
where there are clashes on a particular pin or for more convenient
routing.<br>Default: 32�b0. (GPIO functionality)<br>0: audio_rxlrck (Input) AUDIO receive left/right clock<br>1: audio_rx_bitck (Input) AUDIO receive bit clock<br>2: INVALID<br>3: INVALID<br>4: audio_rxd(0) (Input) AUDIO receive data channel #0<br>5: sdb_dat0 (Bidirectional) SD slot B data / SPI MISO data<br>6: sdb_cmd (Bidirectional) SD slot B command / SPI MOSI data<br>7: sdb_dat3 (Bidirectional) SD slot B data and card detect / SPI chip select<br>8: sd_clk (Output) SD common SD/SPI clock<br>9: sdb_dat1 (Bidirectional) SD slot B data (SPI: not used)<br>10: sdb_dat2 (Bidirectional) SD slot B data (SPI: not used)<br>11: INVALID<br>12: uartb_cts_n (Input) UARTB Clear To Send<br>13: uartb_rts_n (Output) UARTB Request To Send<br>14: uartb_sin (Input) UARTB Serial Input<br>15: uartb_sout (Output) UARTB Serial Output<br>16: sda_dat1 (Bidirectional) SD slot A data (SPI: not used)<br>17: sda_dat2 (Bidirectional) SD slot A data (SPI: not used)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/C_SECCTRL_MFB_ PULLUP _CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F000AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SECCTRL_MFB_ PULLUP _CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SECCTRL_MFB_%20PULLUP%20_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SECCTRL_MFB_ PULLUP _CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">mfb_pullup_sel_n[17:0]</td><td align="center">17:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"If mfa_pullup_sel_n[x]=0, internal pullup for pin MF_B[x] will be enabled."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/C_SECCTRL_LEON_DEBUG_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F000F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SECCTRL_LEON_DEBUG_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SECCTRL_LEON_DEBUG_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SECCTRL_LEON_DEBUG_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">leon_debug_pc[31:2]</td><td align="center">31:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>LEON program counter</td></tr>
<tr><td align="center">leon_debug_instr_annul</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>LEON instruction annulled flag</td></tr>
<tr><td align="center">leon_debug_pc_valid</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>LEON program counter valid (can be saved on a TRAP) flag</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/C_SECCTRL_PLLB_DIV_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F000F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_SECCTRL_PLLB_DIV_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_SECCTRL_PLLB_DIV_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_SECCTRL_PLLB_DIV_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pllb_wck_duty[1:0]</td><td align="center">30:29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Controls pllb_wck duty cycle:<br>00: duty cycle is 50:50 (or close to 50:50 if div_word is odd).<br>01: wck is high for 1 bck period only.<br>10: wck is high for 8 bck periods.<br>11: wck is high for 16 bck periods.</td></tr>
<tr><td align="center">pllb_bck_inv</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"When set, will invert pll_bck so that falling edge is coincident with pll_wck changes instead of rising edges."</td></tr>
<tr><td align="center">pllb_div_word[9:0]</td><td align="center">27:18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Divider used to produce pllb_wck word clock (from pllb_bck bit  clock) that can be routed out on an MF pin.</td></tr>
<tr><td align="center">pllb_div_int[9:0]</td><td align="center">17:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"Integer part of divider, used to produce pllb_bck bit clock (from PLLB output clock) that can be routed out on an MF pin."</td></tr>
<tr><td align="center">pllb_div_frac[7:0]</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>"Fractional part of divider, used to produce pllb_bck bit clock (from PLLB output clock) that can be routed out on an MF pin."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/OTP_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F001E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>OTP_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('OTP_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="OTP_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">otp_csb</td><td align="center">14</td><td align="center">0x1</td><td align="center">W</td><td>OTP active low circuit select. Default = 1.</td></tr>
<tr><td align="center">otp_strobe</td><td align="center">13</td><td align="center">0x0</td><td align="center">W</td><td>OTP strobe to enable read or program access</td></tr>
<tr><td align="center">otp_load</td><td align="center">12</td><td align="center">0x0</td><td align="center">W</td><td>OTP enable sense amplifier and load data into latch</td></tr>
<tr><td align="center">otp_pgenb</td><td align="center">11</td><td align="center">0x1</td><td align="center">W</td><td>OTP active-low program enable. Default = 1</td></tr>
<tr><td align="center">otp_ps</td><td align="center">10</td><td align="center">0x0</td><td align="center">W</td><td>OTP mode.  1=program; 0=read/standby</td></tr>
<tr><td align="center">otp_addr[9:7]</td><td align="center">9:7</td><td align="center">&nbsp;</td><td align="center">W</td><td>OTP bit address (used for bit programming)</td></tr>
<tr><td align="center">otp_addr[6:0]</td><td align="center">6:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>OTP byte address (used for byte reading as well as bit programming)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/OTP_RDATA_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F001E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>OTP_RDATA_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('OTP_RDATA_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="OTP_RDATA_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">otp_rdata[7:0]</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>OTP read data byte.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/PLLB_CTRL0_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F001F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PLLB control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PLLB_CTRL0_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PLLB_CTRL0_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pllb_resync_mode</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Secondary PLL  resynchronization mode:<br>0 = direct control of PLL parameters. Parameters should only be changed when the PLL is bypassed.<br>1 = automatic resynchronization of some parameters whilst the PLL is locked, triggered by pllb_resync_load</td></tr>
<tr><td align="center">pllb_resync_load</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">S1</td><td>Trigger
loading of new PLL parameters parameters pllb_fbdiv, pllb_sslope,
pllb_sfreq, pllb_ssen and pllb_dithen whilst PLL is locked when
pllb_resync_mode=1.<br>This bit is self-clearing.</td></tr>
<tr><td align="center">plla_test</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable PLL test mode.<br>1 = digital dividers (prescalar, multiplier and postscalar) are cascaded.</td></tr>
<tr><td align="center">pllb_ssen</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Secondary PLL  down-spreading enable.<br>1 = down-spreading enabled.</td></tr>
<tr><td align="center">pllb_refdiv[5:0]</td><td align="center">13:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Secondary PLL  input (reference) divider NR=refdiv+1</td></tr>
<tr><td align="center">pllb_fasten</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Secondary PLL  enable fast locking</td></tr>
<tr><td align="center">pllb_outdiv[2:0]</td><td align="center">6:4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Secondary PLL output divider OD=pllb_outdiv+1<br>Default: 0 (OD=1; divide by 1)</td></tr>
<tr><td align="center">pllb_ensat</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Secondary PLL  enable saturation behaviour<br>Default: 1</td></tr>
<tr><td align="center">pllb_dithen</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Secondary PLL  enable fractional accumulation</td></tr>
<tr><td align="center">pllb_bypass</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable bypassing the secondary PLL.<br>NB: This controls the PLL's bypass, unlike the equivalent bit for PLLA.<br>Default: 1 (bypassed)</td></tr>
<tr><td align="center">pllb_pwrdn</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable system PLL power down.<br>Default: 1 (powered down)<br>NB: Bypass overrides powerdown: clk_pllb will default to 25MHz.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/PLLB_CTRL1_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F001F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PLLB_CTRL1_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PLLB_CTRL1_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PLLB_CTRL1_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pllb_fbdiv[25:0]</td><td align="center">25:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL feedback divider (i.e. PLL multiplier) NF=fbdiv/32768 (i.e. includes 15-bit fractional part)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/PLLB_CTRL2_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F001F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PLLB_CTRL2_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PLLB_CTRL2_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PLLB_CTRL2_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pllb_bwadj[11:0]</td><td align="center">27:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  bandwidth adjustment NB=bwadj+1</td></tr>
<tr><td align="center">pllb_sfreq[11:0]</td><td align="center">11:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  down-spreading frequency NS=sfreq</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SECCTRL/PLLB_CTRL3_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x44F001FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PLLB_CTRL3_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PLLB_CTRL3_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PLLB_CTRL3_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pllb_sslope[25:0]</td><td align="center">25:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>System PLL  down-spreading slope NV=sslope/32768</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">SD</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x45400000...0x454FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">SD card / SPI controller</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('SD_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="SD_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/COMMAND</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Sets up the command to be sent.  A write to this register with bit 0 set causes a command to be queued.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('COMMAND_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="COMMAND_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field30</td><td align="center">31:30</td><td align="center">0x0</td><td align="center">R/W</td><td>Command
Preamble: Determines the first 2 bits sent in the command: the most
significant 2 bits of the command opcode for SPIFlash; the Start (bit
31=0) and Transmitter (bit 30=1) bits for SD/SPI.</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">0x0</td><td align="center">R/W</td><td>Command Index: Determines the command index for SD/SPI or the least significant 6 bits of the command opcode for SPIFlash.</td></tr>
<tr><td align="center">Field21</td><td align="center">23:21</td><td align="center">0x0</td><td align="center">R/W</td><td>Command Type: Determines the type of the command (all settings not listed are invalid).<br>000 Non-data (to perform commands not requiring DAT signalling � non-data commands)<br>001 Abort (to abort data transfers to/from the device)<br>010 Read (to perform data transfers FROM the device)<br>011 Write (to perform data transfers TO the device)<br>"  100 Busy (to perform commands requiring busy signalling on DAT, excluding Aborts)"</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">R/W</td><td>"SD:
Ignore Response CRC: Set to 1 to ignore the CRC in the response
(required for SD response types R2, R3, R4 and MMC response types R2,
R3)."<br>SPI/SPIFlash: N/A</td></tr>
<tr><td align="center">Field16</td><td align="center">18:16</td><td align="center">0x0</td><td align="center">R/W</td><td>Response Type: Determines the response type expected back from the device.<br>SD SPI SPIFlash<br>000 No response No response No response<br>001 R1(b) (48 bits) R1(b) (8 bits) 1 byte<br>010 R2 (136 bits) R2 (16 bits) 2 bytes<br>011 R3 (48 bits)  R3 (40 bits) 3 bytes<br>100 R4 (48 bits)  R4 (40 bits) 5 bytes<br>101 R5(b) (48 bits)  R5 (16 bits) 2 bytes<br>110 R6 (48 bits)  Invalid 4 bytes<br>111 R7 (48 bits)  R7 (40 bits) 5 bytes</td></tr>
<tr><td align="center">Field11</td><td align="center">15:11</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">10:8</td><td align="center">0x0</td><td align="center">R/W</td><td>Command
Length: Determines the number of bytes (0 to 6) in the command. For SD
mode this should always be set to 6. For SPI mode this should
ordinarily* be set to 6. This value will vary depending on the command
for SPIFlash mode. In 9Bit SPIFlash mode each �byte� becomes 9 bits
each and a setting of 6 gives the same result as a setting of 5 (i.e.
no support for 6x9bits).<br>* It is possible to set this to any value
in SPI mode and it will send a command with CS_n asserted for that
number of bytes � this allows dummy commands to be sent where the
Command Index and Argument are set to all 1�s so that the resulting
effect is to assert CS_n for a length of time. This feature may prove
useful when bleeding extra bytes from a device that is non-compliant.</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>"Stream
Command: Set to 1 to indicate that the command is a data streaming
command and that it is an unbounded data transfer command (such as MMC
READ/WRITE_DAT_UNTIL_STOP commands). This tells the core that the
command should be followed by an abort to complete it, and that it is a
single unbounded block (with no CRC). Works for 1 bit SD I/F mode only!"</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>Multiblock
Command: Set to 1 to indicate that the command is a multiblock command
and that it is an unbounded data transfer command (such as
READ/WRITE_MULTIPLE_BLOCK commands). This tells the core that the
command should be followed by an abort to complete it.</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>Enable Timeout: Set to 1 to enable the timeout counter for the command (timeout value set in TIMEOUT_CONTROL register).</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>Immediate
Command: Set to 1 to send the command immediately without waiting for
the previous command�s data phase to complete. This should be used when
sending abort type commands (not needed for commands with AutoAbort) or
when sending �Direct Commands� to SDIO devices.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>AutoAbort
Enable: Set to 1 to automatically send a CMD12 STOP_TRANSMISSION abort
command once the configured number of blocks have been transferred.
This option should only be used with the READ/WRITE_MULTIPLE_BLOCK
commands that don�t have a defined transfer size. NOT to be used for
SDIO commands (use bounded multiblock transfers instead)! Not to be
used for SPIFlash (set to 0).</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>Start Command: Set to 1 to start the command.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/COMMAND_ARGUMENT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>32 bits of argument that are sent in the command after the command index (i.e. 2nd to 5th byte).,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('COMMAND_ARGUMENT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="COMMAND_ARGUMENT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>2nd Byte of Command (if Command Length &gt; 1).</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>3rd Byte of Command (if Command Length &gt; 2).</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>4th Byte of Command (if Command Length &gt; 3).</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>5th Byte of Command (if Command Length &gt; 4).</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/DATA_SIZE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4540000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Block length and number of blocks to be transferred by the Read/Write command,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DATA_SIZE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DATA_SIZE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">24:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Number of Blocks: Number of blocks to transfer<br>0 Infinite (multiblock command that needs to be manually aborted)<br>1-511 1-511 blocks (either a bounded transfer such as IO_RW_EXTENDED or a multiblock  transfer that uses AutoAbort)</td></tr>
<tr><td align="center">Field11</td><td align="center">15:11</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">10:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Block length: Number of bytes in each block<br>0 2048 bytes<br>1-2047 1-2047 bytes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/COMMAND_EXT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Command setup that is rarely used.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('COMMAND_EXT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="COMMAND_EXT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field8</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>6th Byte of Command (if Command Length &gt; 5)<br>SD/SPI: Manual CRC / End Bit<br>SPIFlash: Manual 6th Byte<br>"9Bit
SPI: Bit [23] is 9th bit of 1st byte, bit[22] is same for 2nd byte down
to bit[19] being the 9th bit of 5th byte. Bit[16] is the 9th bit to be
sent in ALL data words when doing a WRITE command."<br>"4-wire SPI: Bit
[23] is sideband signal of 1st byte, bit[22] is same for 2nd byte down
to bit[19] being the sideband signal of 5th byte. Bit [18] is sideband
signal of all bytes of any response. Bit[16] is the sideband signal of
ALL data words when doing a WRITE command."</td></tr>
<tr><td align="center">Field9</td><td align="center">15:9</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>SD: Response Manual CRC<br>SPI/SPIFlash: N/A</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R/W</td><td>SD:
Response Manual CRC Enable: Set to 1 to check the CRC received in the
response with that set in bits 15:9 instead of the calculated response
CRC.<br>SPI/SPIFlash: N/A</td></tr>
<tr><td align="center">Field1</td><td align="center">7:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>Command
Manual 6th Byte Enable: Set to 1 to send the manual 6th byte set in
bits 23:16 instead of the calculated command CRC and End Bit. May be
used to add an extra byte to non-SD/SPI commands.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/RESPONSE_EXP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>"Expected
value of the response argument (i.e. 2nd to 5th byte) which, when
masked with the value in RESPONSE_MASK provides a filter to stop
command execution on. ",</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RESPONSE_EXP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RESPONSE_EXP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Expected Response</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/RESPONSE_MASK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Mask to apply to expected response value and the response argument itself to decide whether to stop the command. ,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RESPONSE_MASK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RESPONSE_MASK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Expected Response Mask</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/COMMAND_STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4540001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status of the current/last command.  This register is safe to read at any time.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('COMMAND_STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="COMMAND_STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field17</td><td align="center">31:17</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">R</td><td>SDIO Interrupt: Indicates if the card is asserting Interrupt (on DAT1)</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">0x0</td><td align="center">R</td><td>Card Busy: Indicates if the card is asserting Busy signalling</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">0x0</td><td align="center">R</td><td>Data Error: Indicates if the data phase ended in error � check the extended error status in DATA_ERROR_STATUS register</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x0</td><td align="center">R</td><td>Data Busy: Indicates if the data phase is busy (not Idle or Error)</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x1</td><td align="center">R</td><td>Data Idle: Indicates if the data phase is idle</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R</td><td>Command/Response
Silent: Indicates if the command/response phase has been in the error
state and the command/response lines have been static for at least 48
cycles � ensures any response has finished if we go to Error state
prematurely. This bit MUST be set for a S/W acknowledge to be accepted
(otherwise it will be ignored and the SM will remain in the error
state).</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R</td><td>Command/Response
Error: Indicates if the command/response phase ended in error � check
the extended error status in COMMAND_ERROR_STATUS register</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R</td><td>Command/Response Busy: Indicates if the command/response phase is busy (not Idle or Error)</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x1</td><td align="center">R</td><td>Command/Response Idle: Indicates if the command/response phase is idle</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Response
Timeout: Indicates if the response has not been received within 64
cycles of the command End bit. Will cause COM_RSP SM to move to stay in
AWAIT_RESPONSE state so it will detect non-compliant late responses.
Upon detection of this bit S/W must acknowledge the timeout which will
cause the COM_RSP SM to move to the ERROR state where a further
acknowledge will be required to move back to IDLE.</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R</td><td>Translator Error: Indicates if the CPU-to-memory translator is in error state</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R</td><td>Translator Active: Indicates if the CPU-to-memory translator is currently active</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R</td><td>AutoAbort Pending: Indicates if an AutoAbort is queued waiting to start</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R</td><td>Command Pending: Indicates if a command or AutoAbort is queued waiting to start</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/C</td><td>Data
Finished: Indicates if the data phase of a command finishes without
error. Sticky bit that needs to be cleared by writing to this register
with this bit set.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/C</td><td>Command/Response
Finished: Indicates if the command/response phase of a command finishes
without error. Sticky bit that needs to be cleared by writing to this
register with this bit set.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/COMMAND_ERROR_STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Error
status of current/last command/response. This register is UNSAFE to
read unless the core is IDLE or in ERROR as indicated by the
COMMAND_STATUS register!,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('COMMAND_ERROR_STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="COMMAND_ERROR_STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field20</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">R</td><td>"AutoAbort
Response Invalid Argument: If set, indicates that the response to the
AutoAbort command had bits set that matched the filter created by
RESPONSE_EXP and RESPONSE_MASK"</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">R</td><td>"AutoAbort Response Invalid Index: If set, indicates that the response to the AutoAbort command had an invalid index (SD only)"</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">R</td><td>"AutoAbort Response Invalid CRC: If set, indicates that the response to the AutoAbort command had a CRC error (SD only)"</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">R</td><td>"AutoAbort
Response Invalid Framing: If set, indicates that the response to the
AutoAbort command was incorrectly framed - which indicates either the
Transmitter (SD only) or End (SD/SPI only) bits are incorrect."</td></tr>
<tr><td align="center">Field9</td><td align="center">15:9</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R</td><td>"Unexpected
Response: If set, indicates that activity was detected on the response
line when it was not expected (applies to both the primary command and
any AutoAbort)"</td></tr>
<tr><td align="center">Field4</td><td align="center">7:4</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R</td><td>"Response
Invalid Argument: If set, indicates that the response to the command
had bits set that matched the filter created by RESPONSE_EXP and
RESPONSE_MASK"</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R</td><td>"Response
Invalid Index: If set, indicates that the response to the command had
an invalid index (SD mode only). The index is checked for all but
R2/3/4 response types. Note that MMC R4 responses should have a command
index but this is not checked by the core!"</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>"Response
Invalid CRC: If set, indicates that the response to the command had a
CRC error (SD only). For SPI mode this bit gets set if the R1 part of
the response indicated either an �Illegal Command� or a �Command CRC�
error."</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>"Response
Invalid Framing: If set, indicates that the response to the command was
incorrectly framed - which indicates either the Transmitter (SD only)
or End (SD/SPI only) bits are incorrect."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/RESPONSE1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Contents
of the command response of the current/last command. This register is
UNSAFE to read unless the core is IDLE or in ERROR as indicated by the
COMMAND_STATUS register!,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RESPONSE1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RESPONSE1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: 3rd byte of all responses (R2 responses: bits 119:112; others: 31:24)<br>SPI/SPIFlash: Bits 23:16 of all responses longer than 3 bytes:<br>R1/2/5 N/A (All 0)<br>R3/4/7 3rd byte (bits 23:16) of response<br>R6 2nd byte (bits 23:16) of response (SPIFlash only)</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: 4th byte of all responses (R2 responses: bits 111:104; others: 23:16)<br>SPI/SPIFlash: Bits 15:8 of all responses longer than 2 bytes:<br>R1/2/5 N/A (All 0)<br>R3/4/7 4th byte (bits 15:8) of response<br>R6 3rd byte (bits 15:8) of response (SPIFlash only)</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: 5th byte of all responses (R2 responses: bits 103:96; others: 15:8)<br>SPI/SPIFlash: Last byte (bits 7:0) of all responses longer than 1 byte:<br>R1 N/A (All 0)<br>R2/5 2nd byte (bits 7:0) of response<br>R3/4/7 5th byte (bits 7:0) of response<br>R6 4th byte (bits 7:0) of response (SPIFlash only)</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: Last byte (bits 7:0) of all responses (bit 0 should always be the End bit).<br>SPI/SPIFlash: 1st byte of all responses (should be the R1 part of all SPI response types):<br>R1 1st byte (bits 7:0) of response<br>R2/5 1st byte (bits 15:8) of response<br>R3/4/7 1st byte (bits 39:32) of response<br>R6 1st byte (bits 31:24) of response (SPIFlash only)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/RESPONSE2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Contents
of the command response of the current/last command. This register is
UNSAFE to read unless the core is IDLE or in ERROR as indicated by the
COMMAND_STATUS register!,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RESPONSE2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RESPONSE2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field31;16</td><td align="center">46:31;16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: 1st byte of all responses (R2 responses: bits 135:128; others: 47:40)<br>SPI/SPIFlash: N/A (All 0)</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: 2nd byte of all responses (R2 responses: bits 127:120; others: 39:32)<br>SPI/SPIFlash: Bits 31:24 of all responses longer than 4 bytes:<br>R1/2/5/6 N/A (All 0)<br>R3/4/7 2nd byte (bits 31:24) of response</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/RESPONSE1_AA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4540002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Contents
of the command response of the current/last AutoAbort command (always
R1). This register is UNSAFE to read unless the core is IDLE or in
ERROR as indicated by the COMMAND_STATUS register!,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RESPONSE1_AA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RESPONSE1_AA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: 3rd byte (bits 31:24) of AutoAbort R1 response<br>SPI/SPIFlash: N/A (All 0)</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: 4th byte (bits 23:16) of AutoAbort R1 response<br>SPI/SPIFlash: N/A (All 0)</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: 5th byte (bits 15:8) of AutoAbort R1 response<br>SPI/SPIFlash: N/A (All 0)</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: Last byte (bits 7:0) of AutoAbort R1 response (bit 0 should always be the End bit).<br>SPI:
1st and only byte (bits 7:0) of AutoAbort R1 response � Reads only (SPI
Writes don�t have a response to an Abort as they use a special
StopTrans token instead)<br>SPIFlash: N/A (All 0)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/RESPONSE2_AA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Contents
of the command response of the current/last AutoAbort command (always
R1). This register is UNSAFE to read unless the core is IDLE or in
ERROR as indicated by the COMMAND_STATUS register!,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RESPONSE2_AA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RESPONSE2_AA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: 1st byte (bits 47:40) of AutoAbort R1 response<br>SPI/SPIFlash: N/A (All 0)</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>SD: 2nd byte (bits 39:32) of AutoAbort R1 response<br>SPI/SPIFlash: N/A (All 0)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/DATA_ERROR_STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Error
status of current/last data block. This register is UNSAFE to read
unless the core is IDLE or in ERROR as indicated by the COMMAND_STATUS
register!,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DATA_ERROR_STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DATA_ERROR_STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field17</td><td align="center">31:17</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">R</td><td>"Unexpected Data: If set, indicates that activity is detected on the data line(s) when it is not expected (SD only)."</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">0x0</td><td align="center">R</td><td>"Busy Timeout: If set, indicates that a timeout occurred during the busy period (not for Write commands though)."</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x0</td><td align="center">R</td><td>"Write Busy Timeout: If set, indicates that a timeout occurred during the busy period after the last write data block."</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x0</td><td align="center">R</td><td>"Read Timeout: If set, indicates that a timeout occurred waiting for the start of the next read data block."</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R</td><td>"Read
Data Incomplete: If set, indicates that the core aborted a read data
block and that the data in the FIFO or that has already been read out
of the FIFO for that block is incomplete and/or has not had its CRC
checked (SD/SPI only)"</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R</td><td>"Read
Data Invalid Framing: If set, indicates that the core detected an
invalid End bit on any of the active data lines during read data (SD
only), or for 4 bit SD that Start was not detected correctly on all 4
data lines (excluding possibility of Interrupt assertion if enabled),
or for SPI that an invalid token was received at the start of a block.
(SD/SPI only)"</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R</td><td>"Read Data Invalid CRC: If set, indicates that the core detected a CRC error in the read data (SD/SPI only)."</td></tr>
<tr><td align="center">Field3</td><td align="center">7:3</td><td align="center">0x0</td><td align="center">R</td><td>"Write
Data CRC Status: Indicates the values detected on the interface during
the expected positions of Start, Status(2:0), End � may help to
determine exact cause of the 2 error flags below (SD/SPI only)"<br>Read
Data Error Status: Indicates the values detected in bottom 5 bits of
Data Error Token � non-zero indicates an error (SPI only)</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>"Write
Data Missing CRC Status: If set, indicates that the core did not
receive CRC Status from the card after the last write data block or
that the Start bit of the CRC Status was in the wrong place (SD/SPI
only)."</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>"Write
Data Invalid CRC: If set, indicates that the card indicated that the
write data was received with a CRC error, or that the CRC Status had an
invalid End bit (SD/SPI only)."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/BLOCK_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Current
value of the block counter. This register is UNSAFE to read unless the
core is IDLE or in ERROR as indicated by the COMMAND_STATUS register!,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BLOCK_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BLOCK_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">26:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Byte
Count �counts down to 0 from the number of bytes set for each of the
blocks in the transfer. Should always be 0 upon an error. A static
non-zero value indicates the serial clock must be stopped.</td></tr>
<tr><td align="center">Field9</td><td align="center">15:9</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">8:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Block
Count �counts down to 0 from the number of blocks set for the transfer.
It freezes at its current value when a data error occurs.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/SD_LINE_STATE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4540003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Current
state of the interface signals. This register is UNSAFE to read unless
the core is IDLE or in ERROR as indicated by the COMMAND_STATUS
register!,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SD_LINE_STATE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SD_LINE_STATE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">27:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>"DAT4-7 Line State for DAT slot 1 (if G_NUM_DAT4567_SLOTS&gt;0, otherwise Reserved)"</td></tr>
<tr><td align="center">Field20</td><td align="center">23:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>"DAT4-7 Line State for DAT slot 0 (if G_NUM_DAT4567_SLOTS&gt;0, otherwise Reserved)"</td></tr>
<tr><td align="center">Field16</td><td align="center">19:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>"DAT3-0 Line State for DAT slot 3 (if G_NUM_SD_DAT*_SLOTS&gt;3, otherwise Reserved)"</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>"DAT3-0 Line State for DAT slot 2 (if G_NUM_SD_DAT*_SLOTS&gt;2, otherwise Reserved)"</td></tr>
<tr><td align="center">Field8</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>"DAT3-0 Line State for DAT slot 1 (if G_NUM_SD_DAT*_SLOTS&gt;1, otherwise Reserved)"</td></tr>
<tr><td align="center">Field4</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>DAT3-0 Line State for DAT slot 0</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R</td><td>"CMD Line State for CMD slot 3 (if G_NUM_SD_CMD_SLOTS&gt;3, otherwise Reserved)"</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R</td><td>"CMD Line State for CMD slot 2 (if G_NUM_SD_CMD_SLOTS&gt;2, otherwise Reserved)"</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>"CMD Line State for CMD slot 1 (if G_NUM_SD_CMD_SLOTS&gt;1, otherwise Reserved)"</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>CMD Line State for CMD slot 0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/FIFO_PORT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CPU quadlet access to read/write port of the FIFO.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FIFO_PORT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FIFO_PORT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>FIFO Port</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/FIFO_CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Manual control for FIFO logic.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FIFO_CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FIFO_CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field2</td><td align="center">31:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>FIFO Flush: Set to 1 to flush the FIFO of any residual bytes � applies to Read commands only (automatically clears)</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>FIFO Reset: Set to 1 to reset the FIFO control logic (automatically clears)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/FIFO_STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status of the FIFO.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FIFO_STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FIFO_STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">0x0</td><td align="center">R</td><td>FIFO
Invalid PHY Access: Indicates the core has tried to read from the FIFO
during a Read command or write to it during a Write command (SHOULD
NEVER HAPPEN!)</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">0x0</td><td align="center">R</td><td>FIFO
Invalid CPU Access: Indicates the CPU has tried to read from the FIFO
during a Write command or write to it during a Read command</td></tr>
<tr><td align="center">Field29</td><td align="center">29</td><td align="center">0x0</td><td align="center">R</td><td>FIFO
Overrun: Indicates the FIFO has overrun (should never happen when DMA
is being used but may happen if the CPU writes when it is full)</td></tr>
<tr><td align="center">Field28</td><td align="center">28</td><td align="center">0x0</td><td align="center">R</td><td>FIFO
Underrun: Indicates the FIFO has underrun (should never happen when DMA
is being used but may happen if the CPU reads when it is empty)</td></tr>
<tr><td align="center">Field22</td><td align="center">27:22</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">R</td><td>FIFO Nearly Full: Indicates the FIFO has space for 1 more quadlet</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">R</td><td>FIFO Full: Indicates the FIFO is full (no space at all)</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">R</td><td>FIFO Nearly Empty: Indicates the FIFO has 1 full quadlet in it (and may also have residual bytes)</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x1</td><td align="center">R</td><td>FIFO Empty: Indicates the FIFO has no full quadlets in it (but may have residual bytes)</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x1</td><td align="center">R</td><td>FIFO Really Empty: Indicates the FIFO is totally empty (including partial quadlets)</td></tr>
<tr><td align="center">Field4</td><td align="center">15:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>"FIFO Fill Level: Indicates the number of quadlets in the FIFO (0 to 2F-2-1, where F is G_FIFO_ADDR_WIDTH)"</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/INTERRUPT_MASK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4540004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Mask for generating a core interrupt to the CPU.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('INTERRUPT_MASK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="INTERRUPT_MASK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field9</td><td align="center">31:9</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R/W</td><td>SDIO Interrupt: Enable interrupt when the card is asserting Interrupt on DAT1</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>FIFO Nearly Full: Enable interrupt when the FIFO has space for 1 more quadlet</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>FIFO Nearly Empty: Enable interrupt when the FIFO has 1 full quadlet in it (and may also have residual bytes)</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>FIFO Error: Enable interrupt when the FIFO generates an error</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>Translator Error: Enable interrupt when the CPU-to-memory translator is in error state</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>Data Error: Enable interrupt when the data phase ends in error</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>Command/Response Error: Enable interrupt when the command/response phase ends in error (including response timeout)</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>Data Finished: Enable interrupt when data phase finishes without error</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>Command/Response Finished: Enable interrupt when command/response phase finishes without error</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/CLOCK_CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Config/control of serial CLK output.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CLOCK_CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CLOCK_CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">0x0</td><td align="center">R/W</td><td>Clock Stop: Set to 1 to manually stop the clock.  Must be cleared to restart it again.</td></tr>
<tr><td align="center">Field11</td><td align="center">29:11</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">10:0</td><td align="center">0x7FF</td><td align="center">R/W</td><td>"Clock
Divisor: Divisor used to generate serial CLK from clk_if. Resultant
frequency will be fclk_if / (divisor+2), so min frequency is fclk_if /
2050 and max is fclk_if / 2. By default this is set to the maximum
possible value to ensure a slow clock from startup."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/GAP_CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Control of data block gaps,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GAP_CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GAP_CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field18</td><td align="center">31:18</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">W</td><td>Clear Stop At Gap Request: Set to 1 to clear the request to stop at the next gap.  Cannot be cleared and is read as zero.</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">W</td><td>Request Stop At Gap: Set to 1 to request the core to stop at the next gap.  Cannot be cleared and is read as zero.</td></tr>
<tr><td align="center">Field2</td><td align="center">15:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>ReadWait
Request: The system (external to the core) has requested the core to
assert ReadWait to the card at the next gap between read data blocks.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>"Stop
At Gap CPU Request: The CPU has requested the core to pause at the next
gap between data blocks. For Read commands with SDIO ReadWait
supported, ReadWait assertion will be used to stall read data blocks,
otherwise the serial CLK will be paused at the next gap while the
request is still made. For Write commands the core will just wait for
the request to be withdrawn before starting the next write data block �
the CLK will NOT be stopped."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/TIMEOUT_CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Sets the timeout count for commands.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TIMEOUT_CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TIMEOUT_CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">23:0</td><td align="center">0xFFFFFF</td><td align="center">R/W</td><td>Timeout
Count: Determines the number of cycles of clk_if to count before
timeing out a command. This counter is shared between the various
timeouts that need to be timed for different commands:<br>Reads Read data block access time (Nac)<br>Writes Write date block program time (busy)<br>Erase Erase time (busy)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/SM_CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4540005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Control of data block gaps.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SM_CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SM_CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field18</td><td align="center">32:18</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">W</td><td>Reset
Translator SM: Set to 1 to force a synchronous reset of the Translator
state machine. Cannot be cleared and is read as zero.</td></tr>
<tr><td align="center">Field10</td><td align="center">15:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">W</td><td>Ack
DAT_SB SM Error: Set to 1 to acknowledge (clear) errors from the DAT_SB
state machine. Cannot be cleared and is read as zero.</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">W</td><td>Reset DAT_SB SM: Set to 1 to force a synchronous reset of the DAT_SB state machine. Cannot be cleared and is read as zero.</td></tr>
<tr><td align="center">Field2</td><td align="center">7:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">W</td><td>Ack
COM_RSP SM Error: Set to 1 to acknowledge (clear) errors from the
COM_RSP state machine. This only has effect if the COM_RSP Silent bit
is set in the COMMAND_STATUS register. Cannot be cleared and is read as
zero. This control is also used after a ResponseTimeout to move the SM
to the error state (where a further ack is required to get back to
Idle).</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Reset COM_RSP SM: Set to 1 to force a synchronous reset of the COM_RSP state machine. Cannot be cleared and is read as zero.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/BANK0_CONFIG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Config
for Bank. This configuration only crosses the clock domain when there
is a change of bank or when the CONFIG register is written to.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BANK0_CONFIG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BANK0_CONFIG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field28</td><td align="center">30:28</td><td align="center">0x0</td><td align="center">R/W</td><td>DAT4/5/6/7 Slot: Determines which DAT4/5/6/7 Slot this bank refers to (0 to G_NUM_DAT4567_SLOTS-1).<br>8 Bit (MMCPlus): Set to the DAT4/5/6/7 slot to be used for this bank.<br>Other modes: N/A</td></tr>
<tr><td align="center">Field25</td><td align="center">27:25</td><td align="center">0x0</td><td align="center">R/W</td><td>DAT3
Slot: Determines which DAT3 Slot this bank refers to (0 to
C_NUM_SD_DAT3_SLOTS + G_NUM_EXTRA_SPI_SLOTS+ G_NUM_EXTRA_SPI_BANKS-1).<br>SD: Set to the DAT3 slot to be used for this bank.<br>SPI/SPIFlash: This is the CS_n line.</td></tr>
<tr><td align="center">Field22</td><td align="center">24:22</td><td align="center">0x0</td><td align="center">R/W</td><td>DAT0/2 Slot: Determines which DAT0/2 Slot this bank refers to (0 to G_NUM_DAT02_SLOTS +G_NUM_EXTRA_SPI_SLOTS-1).<br>SD: Set to the DAT0/2 slot to be used for this bank.<br>SPI: DAT0 is the DataOut (MISO) line.  DAT2 is unused.<br>SPIFlash:
DAT0 is the DataOut (MISO) line. DAT2 is unused if the value of this
field is &lt; G_NUM_SD_CMD_SLOTS otherwise it is the DataIn (MOSI) line
(taking over from CMD).</td></tr>
<tr><td align="center">Field19</td><td align="center">21:19</td><td align="center">0x0</td><td align="center">R/W</td><td>DAT1 Slot: Determines which DAT1 Slot this bank refers to (0 to G_NUM_SD_DAT1_SLOTS-1).<br>SD/SPI: Set to the DAT1 slot to be used for this bank.<br>SPIFlash: N/A</td></tr>
<tr><td align="center">Field16</td><td align="center">18:16</td><td align="center">0x0</td><td align="center">R/W</td><td>CMD Slot: Determines which CMD Slot this bank refers to (0 to G_NUM_SD_CMD_SLOTS-1).<br>SD: Set to the CMD slot to be used for this bank.<br>SPI: CMD is the DataIn (MOSI) line.<br>SPIFlash:
CMD is the DataIn (MOSI) line if the value of the DAT0/2 Slot field is
&lt; G_NUM_SD_CMD_SLOTS otherwise it is unused.</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">0x0</td><td align="center">R/W</td><td>Output Edge: Determines which edge of serial CLK the outputs are launched on:<br>0 Falling (for Normal Speed SD and SPIFlash)<br>1 Rising (for High Speed SD)</td></tr>
<tr><td align="center">Field12</td><td align="center">14:12</td><td align="center">0x0</td><td align="center">R/W</td><td>"Gap
Length: Determines the number of cycles to insert between write data
blocks for write commands in SD/SPI mode, or the number of cycles to
wait between commands in SPIFlash mode (to satisfy tSHSL/tCSH
requirement at the configured serial CLK rate � min value for SPIFlash
mode is 1)"<br>000 0 additional cycles (not applicable for SPIFlash)<br>001 1 additional cycle<br>010 2 additional cycles<br>011 3 additional cycles<br>100 4 additional cycles<br>101 5 additional cycles<br>110 6 additional cycles<br>111 7 additional cycles</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R/W</td><td>SD: Determines when the core can perform ReadWait<br>0 ReadWait only after the first data block<br>1 ReadWait before all blocks<br>(This option may be used to work with non-compliant devices)<br>SPI: N/A<br>SPI
Flash: Determines whether the core should issue READ or FAST_READ
commands to the SPIFlash part when a memory-mapped CPU read is received<br>0 READ<br>1 FAST_READ</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R/W</td><td>SD 1 bit: Determines when the core should start signalling ReadWait<br>0 ReadWait driven 2 cycles after End bit of read data block<br>1 ReadWait driven immediately after End bit<br>(This option may be used to work with non-compliant devices)<br>SD 4 bit: N/A<br>SPI:
Determines whether the core should deassert CS_n to the card if the
first byte of a response (R1 part) indicates an ILLEGAL_COMMAND or
COMMAND_CRC error<br>0 Do NOT deassert CS_n early (shift in remainder of response)<br>(This option may be used to work with non-compliant devices)<br>1 Deassert CS_n early (no more response expected)<br>SPIFlash: N/A</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R/W</td><td>SDIO ReadWait Support: Determines whether the card supports ReadWait on DAT2<br>0 ReadWait NOT supported<br>1 ReadWait supported (SD only)</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>SDIO IRQ Enable: Determines whether the core should ignore interrupts from the card<br>0 Interrupts are ignored (masked)<br>1 Interrupts are enabled (SD/SPI only)</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>SDIO IRQ Modifier:<br>SD 1 bit: N/A<br>SD 4 bit: Set to 1 to indicate that the card can assert interrupts between data blocks (only if supported with bit 4 below)<br>SPI: Set to 1 to indicate that the core should ignore interrupts from the card when it is deselected (CS_n deasserted)<br>SPIFlash: N/A</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>SDIO IRQ Support: Determines whether the card supports interrupts on DAT1<br>0 Interrupts NOT supported<br>1 Interrupts supported (SD/SPI only)</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>Clock
Stop Enable: Determines whether the core should stop the clock a number
of cycles after the end of a command and only restart when a new
command is started. Also determines whether the clock should be stopped
during periods of Busy and only periodically restarted until Busy
concludes<br>0 Serial CLK is free-running between commands<br>1 Serial CLK will stop between commands<br>Note: this configuration bit does NOT affect automatic clock stopping due to FIFO fill levels or StopAtGap requests.</td></tr>
<tr><td align="center">Field0</td><td align="center">2:0</td><td align="center">0x0</td><td align="center">R/W</td><td>I/F Mode:<br>000 SPIFlash<br>001 SPI (SD-over-SPI)<br>010 1 bit SD / MMC<br>011 4 bit SD / MMC<br>100 8 bit (MMC)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/BANK1_CONFIG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Config
for Bank. This configuration only crosses the clock domain when there
is a change of bank or when the CONFIG register is written to.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BANK1_CONFIG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BANK1_CONFIG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field28</td><td align="center">30:28</td><td align="center">0x0</td><td align="center">R/W</td><td>DAT4/5/6/7 Slot: Determines which DAT4/5/6/7 Slot this bank refers to (0 to G_NUM_DAT4567_SLOTS-1).<br>8 Bit (MMCPlus): Set to the DAT4/5/6/7 slot to be used for this bank.<br>Other modes: N/A</td></tr>
<tr><td align="center">Field25</td><td align="center">27:25</td><td align="center">0x0</td><td align="center">R/W</td><td>DAT3
Slot: Determines which DAT3 Slot this bank refers to (0 to
C_NUM_SD_DAT3_SLOTS + G_NUM_EXTRA_SPI_SLOTS+ G_NUM_EXTRA_SPI_BANKS-1).<br>SD: Set to the DAT3 slot to be used for this bank.<br>SPI/SPIFlash: This is the CS_n line.</td></tr>
<tr><td align="center">Field22</td><td align="center">24:22</td><td align="center">0x0</td><td align="center">R/W</td><td>DAT0/2 Slot: Determines which DAT0/2 Slot this bank refers to (0 to G_NUM_DAT02_SLOTS +G_NUM_EXTRA_SPI_SLOTS-1).<br>SD: Set to the DAT0/2 slot to be used for this bank.<br>SPI: DAT0 is the DataOut (MISO) line.  DAT2 is unused.<br>SPIFlash:
DAT0 is the DataOut (MISO) line. DAT2 is unused if the value of this
field is &lt; G_NUM_SD_CMD_SLOTS otherwise it is the DataIn (MOSI) line
(taking over from CMD).</td></tr>
<tr><td align="center">Field19</td><td align="center">21:19</td><td align="center">0x0</td><td align="center">R/W</td><td>DAT1 Slot: Determines which DAT1 Slot this bank refers to (0 to G_NUM_SD_DAT1_SLOTS-1).<br>SD/SPI: Set to the DAT1 slot to be used for this bank.<br>SPIFlash: N/A</td></tr>
<tr><td align="center">Field16</td><td align="center">18:16</td><td align="center">0x0</td><td align="center">R/W</td><td>CMD Slot: Determines which CMD Slot this bank refers to (0 to G_NUM_SD_CMD_SLOTS-1).<br>SD: Set to the CMD slot to be used for this bank.<br>SPI: CMD is the DataIn (MOSI) line.<br>SPIFlash:
CMD is the DataIn (MOSI) line if the value of the DAT0/2 Slot field is
&lt; G_NUM_SD_CMD_SLOTS otherwise it is unused.</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">0x0</td><td align="center">R/W</td><td>Output Edge: Determines which edge of serial CLK the outputs are launched on:<br>0 Falling (for Normal Speed SD and SPIFlash)<br>1 Rising (for High Speed SD)</td></tr>
<tr><td align="center">Field12</td><td align="center">14:12</td><td align="center">0x0</td><td align="center">R/W</td><td>"Gap
Length: Determines the number of cycles to insert between write data
blocks for write commands in SD/SPI mode, or the number of cycles to
wait between commands in SPIFlash mode (to satisfy tSHSL/tCSH
requirement at the configured serial CLK rate � min value for SPIFlash
mode is 1)"<br>000 0 additional cycles (not applicable for SPIFlash)<br>001 1 additional cycle<br>010 2 additional cycles<br>011 3 additional cycles<br>100 4 additional cycles<br>101 5 additional cycles<br>110 6 additional cycles<br>111 7 additional cycles</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R/W</td><td>SD: Determines when the core can perform ReadWait<br>0 ReadWait only after the first data block<br>1 ReadWait before all blocks<br>(This option may be used to work with non-compliant devices)<br>SPI: N/A<br>SPI
Flash: Determines whether the core should issue READ or FAST_READ
commands to the SPIFlash part when a memory-mapped CPU read is received<br>0 READ<br>1 FAST_READ</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R/W</td><td>SD 1 bit: Determines when the core should start signalling ReadWait<br>0 ReadWait driven 2 cycles after End bit of read data block<br>1 ReadWait driven immediately after End bit<br>(This option may be used to work with non-compliant devices)<br>SD 4 bit: N/A<br>SPI:
Determines whether the core should deassert CS_n to the card if the
first byte of a response (R1 part) indicates an ILLEGAL_COMMAND or
COMMAND_CRC error<br>0 Do NOT deassert CS_n early (shift in remainder of response)<br>(This option may be used to work with non-compliant devices)<br>1 Deassert CS_n early (no more response expected)<br>SPIFlash: N/A</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R/W</td><td>SDIO ReadWait Support: Determines whether the card supports ReadWait on DAT2<br>0 ReadWait NOT supported<br>1 ReadWait supported (SD only)</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>SDIO IRQ Enable: Determines whether the core should ignore interrupts from the card<br>0 Interrupts are ignored (masked)<br>1 Interrupts are enabled (SD/SPI only)</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>SDIO IRQ Modifier:<br>SD 1 bit: N/A<br>SD 4 bit: Set to 1 to indicate that the card can assert interrupts between data blocks (only if supported with bit 4 below)<br>SPI: Set to 1 to indicate that the core should ignore interrupts from the card when it is deselected (CS_n deasserted)<br>SPIFlash: N/A</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>SDIO IRQ Support: Determines whether the card supports interrupts on DAT1<br>0 Interrupts NOT supported<br>1 Interrupts supported (SD/SPI only)</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>Clock
Stop Enable: Determines whether the core should stop the clock a number
of cycles after the end of a command and only restart when a new
command is started. Also determines whether the clock should be stopped
during periods of Busy and only periodically restarted until Busy
concludes<br>0 Serial CLK is free-running between commands<br>1 Serial CLK will stop between commands<br>Note: this configuration bit does NOT affect automatic clock stopping due to FIFO fill levels or StopAtGap requests.</td></tr>
<tr><td align="center">Field0</td><td align="center">2:0</td><td align="center">0x0</td><td align="center">R/W</td><td>I/F Mode:<br>000 SPIFlash<br>001 SPI (SD-over-SPI)<br>010 1 bit SD / MMC<br>011 4 bit SD / MMC<br>100 8 bit (MMC)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/BANK0_CONFIG2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Extra
config for Bank. This configuration only crosses the clock domain when
there is a change of bank or when the CONFIG register is written to.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BANK0_CONFIG2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BANK0_CONFIG2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field14</td><td align="center">31:14</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x0</td><td align="center">R/W</td><td>Delay
Output Data: Use this setting to add 1 cycle of clk_if delay to data
launch wrt to CLK_o launch to make it easier to meet output hold
requirement when launching/capturing on same edge of CLK_o (i.e. in SD
High Speed Mode). For clock divider setting of 2 this is identical to
using opposite edge!</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x0</td><td align="center">R/W</td><td>6
Bit WRITE data: All data written into FIFO for WRITE commands is
shifted up 2 bits so that bottom 6 bits will be shifted out on data
line first (followed by 2 bits of 0 stuffing) � may be used for some
display controllers that take 6-6-6 RGB samples</td></tr>
<tr><td align="center">Field9</td><td align="center">11:9</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: CS Assertion Delay: Assert CS for N cycles of serial CLK before starting CLK � requires CLK Mask = 1 (N=0 to 7)<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: CS Deassertion Delay:<br>0 CS deasserted on last cycle of transfer<br>1 CS deasserted on last cycle of transfer � 1 cycles of CLK late (requires CLK Mask = 1)<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>Input Edge: Determines which edge of serial CLK the inputs are captured on:<br>0 Rising<br>1 Falling</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: CLK Idle High:<br>0 Serial CLK idles at logic 0<br>1 Serial CLK idles at logic 1<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: CLK Mask: Mask serial CLK off so there are no extra cycles either side of the CS<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: Bidirectional turnaround cycle:<br>0 No TA cycle between command and response<br>1 1 TA cycle between command and response<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: Bidirectional mode: DataIn is birectional and DataOut is unused<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: 4-wire (sideband signal)<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: 9 bit mode (8 bit data but with sideband signal encoded in 9th bit of each �byte�)<br>Others: Reserved (set to 0)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/BANK1_CONFIG2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45400084</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Extra
config for Bank. This configuration only crosses the clock domain when
there is a change of bank or when the CONFIG register is written to.,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BANK1_CONFIG2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BANK1_CONFIG2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field14</td><td align="center">31:14</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x0</td><td align="center">R/W</td><td>Delay
Output Data: Use this setting to add 1 cycle of clk_if delay to data
launch wrt to CLK_o launch to make it easier to meet output hold
requirement when launching/capturing on same edge of CLK_o (i.e. in SD
High Speed Mode). For clock divider setting of 2 this is identical to
using opposite edge!</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x0</td><td align="center">R/W</td><td>6
Bit WRITE data: All data written into FIFO for WRITE commands is
shifted up 2 bits so that bottom 6 bits will be shifted out on data
line first (followed by 2 bits of 0 stuffing) � may be used for some
display controllers that take 6-6-6 RGB samples</td></tr>
<tr><td align="center">Field9</td><td align="center">11:9</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: CS Assertion Delay: Assert CS for N cycles of serial CLK before starting CLK � requires CLK Mask = 1 (N=0 to 7)<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: CS Deassertion Delay:<br>0 CS deasserted on last cycle of transfer<br>1 CS deasserted on last cycle of transfer � 1 cycles of CLK late (requires CLK Mask = 1)<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>Input Edge: Determines which edge of serial CLK the inputs are captured on:<br>0 Rising<br>1 Falling</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: CLK Idle High:<br>0 Serial CLK idles at logic 0<br>1 Serial CLK idles at logic 1<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: CLK Mask: Mask serial CLK off so there are no extra cycles either side of the CS<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: Bidirectional turnaround cycle:<br>0 No TA cycle between command and response<br>1 1 TA cycle between command and response<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: Bidirectional mode: DataIn is birectional and DataOut is unused<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: 4-wire (sideband signal)<br>Others: Reserved (set to 0)</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>SPIFlash: 9 bit mode (8 bit data but with sideband signal encoded in 9th bit of each �byte�)<br>Others: Reserved (set to 0)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/SPI_LINE_STATE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x454000A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Current
state of the interface signals. This register is UNSAFE to read unless
the core is IDLE or in ERROR as indicated by the COMMAND_STATUS
register!,</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SPI_LINE_STATE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SPI_LINE_STATE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field28</td><td align="center">35:28</td><td align="center">&nbsp;</td><td align="center">R</td><td>"DAT3 Line State for DAT slot 4-11(if G_NUM_ EXTRA_SPI_SLOTS+G_NUM_ EXTRA_SPI_BANKS &gt; 0, otherwise Reserved)"</td></tr>
<tr><td align="center">Field22</td><td align="center">27:22</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field20</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>SPI DataOut (DAT0) Line State for slot 0-D0</td></tr>
<tr><td align="center">Field14</td><td align="center">19:14</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field12</td><td align="center">13:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>SPI DataIn (CMD/DAT2) Line State for slot 0-D0</td></tr>
<tr><td align="center">Field2</td><td align="center">11:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>SPI CS (DAT3) Line State for slot 0-D2</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SD/SPI_OVERRIDE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x454000A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Override for various SPI signals</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SPI_OVERRIDE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SPI_OVERRIDE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field2</td><td align="center">31:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0xFFF</td><td align="center">R/W</td><td>Override SPI CS (active low). Allows CS to device to be kept asserted between commands</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">AUDIO</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x45500000...0x455FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Audio (I2C / SPDIF) controller</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('AUDIO_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="AUDIO_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_CONTROL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Enable</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Audio transmit is disabled<br>1 � Audio transmit is enabled.</td></tr>
<tr><td align="center">Flush</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Normal Operation<br>1 � Flush TX buffer</td></tr>
<tr><td align="center">Mute</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Normal Operation<br>1 � Muted operation</td></tr>
<tr><td align="center">Abort DMA</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">??</td><td>Write a 1 to abort any outstanding DMAs (self-clearing)</td></tr>
<tr><td align="center">AHB</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � AHB disabled (APB only)<br>,Enable,,,1 � AHB enabled (APB disabled for data plane)</td></tr>
<tr><td align="center">Quad Bursts</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � DMA transfers up to Single Quads<br>1 � DMA transfers up to Bursts of 4 Quads</td></tr>
<tr><td align="center">SPDIF Restart</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">??</td><td>Write a 1 to restart the SPDIF framing on the next �left� sample (self-clearing)</td></tr>
<tr><td align="center">Sync Bypass</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Normal Operation<br>1 � Bypass synchroniser to pass TX_SETUP/1 to audio clock domain immediately<br>(ONLY DO THIS IF AUDIO BIT CLOCK IS NOT RUNNING.  REMOVE ONCE RUNNING)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_SETUP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_SETUP</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_SETUP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_SETUP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Format</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>00 � True/Early-I2S (standard format)<br>01 � Late-I2S<br>10 � MP3 Valid<br>11 � MP3 Start</td></tr>
<tr><td align="center">Mode</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Slave<br>1 � Master</td></tr>
<tr><td align="center">Flow Invert</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Flow Control is active high (ie. Audio core is held off when TX_Flow_Control=�1�)<br>1 � Flow Control is active low (ie. Audio core is held off when TX_Flow_Control=�0�)</td></tr>
<tr><td align="center">Pos Edge</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Data and Master Word Clock are output on the negative edge of the TX Audio clock<br>1 � Data and Master Word Clock are output on the positive edge of the TX Audio clock</td></tr>
<tr><td align="center">Clock Stop</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Audio TX clock should not be stopped during flow control hold off<br>1 � Audio TX clock should be stopped during flow control hold off</td></tr>
<tr><td align="center">Split Quad</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No splitting<br>1 � Split quadlet into two 16 bit samples - NOT VALID FOR S/PDIF</td></tr>
<tr><td align="center">Inspect Word Clock</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">??</td><td>Used
when recovering from underrun. This bit is set to look for either a
high or low word clock before the hardware carries on as normal.</td></tr>
<tr><td align="center">SPDIF En</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No SPDIF on Channel 0 (disables biphase coding on output)<br>1 � SPDIF on Channel 0 (enables the biphase coding even when Tx disabled)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_SETUP1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_SETUP1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_SETUP1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_SETUP1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Input</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>00 � Twos Compliment (pass-thru)<br>01 � Offset Binary<br>10 � Sign Magnitude<br>11 � Reserved</td></tr>
<tr><td align="center">Reverse</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Normal operation<br>1 � Reverse Stereo - DOES NOT WORK FOR NON- SPLIT_QUAD/MP3</td></tr>
<tr><td align="center">Invert</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Normal operation<br>1 � Inverted word clock (SLAVE: on input from pin; MASTER: on output to pin)</td></tr>
<tr><td align="center">Big Endian</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � System data is in little endian format<br>1 � System data is in big endian format</td></tr>
<tr><td align="center">Quad Endian</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � System data is 16 bit.<br>1 � System data is 32 bit</td></tr>
<tr><td align="center">Quad Samples</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � I2S Master word clock uses 16 bit samples - NOT VALID FOR S/PDIF<br>1 � I2S Master word clock uses 32 bit samples</td></tr>
<tr><td align="center">Flow Control</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No flow control (MP3 only)<br>1 � Flow control (MP3 only)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x455000C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_STATUS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Underrun</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Underrun has not occurred.<br>1 � Underrun has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">Overrun</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Overrun has not occurred.<br>1 � Overrun has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">FIFO</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � FIFO Underrun has not occurred.<br>,Underrun,,,1 � FIFO Underrun has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">FIFO</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � FIFO Overrun has not occurred.<br>,Overrun,,,1 � FIFO Overrun has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">H/W Read</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � H/W Read of FIFO has not occurred.<br>1 � H/W Read of FIFO has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">Buffer Level Met</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Fill level of FIFO does not match BUFFER_INTERRUPT_LEVEL.<br>1 � Fill level of FIFO matches BUFFER_INTERRUPT_LEVEL</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_CONTROL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Enable</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Audio receive is disabled<br>1 � Audio receive is enabled.</td></tr>
<tr><td align="center">Flush</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Normal Operation<br>1 � Flush RX buffer</td></tr>
<tr><td align="center">Mute</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Normal Operation<br>1 � Muted operation</td></tr>
<tr><td align="center">Abort DMA</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">??</td><td>Write a 1 to abort any outstanding DMAs (self-clearing)</td></tr>
<tr><td align="center">AHB</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � AHB disabled (APB only)<br>,Enable,,,1 � AHB enabled (APB disabled for data plane)</td></tr>
<tr><td align="center">Quad Bursts</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � DMA transfers up to Single Quads<br>1 � DMA transfers up to Bursts of 4 Quads</td></tr>
<tr><td align="center">Sync Bypass</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Normal Operation<br>1 � Bypass synchroniser to pass RX_SETUP/1 to audio clock domain immediately<br>(ONLY DO THIS IF AUDIO BIT CLOCK IS NOT RUNNING.  REMOVE ONCE RUNNING)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_SETUP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_SETUP</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_SETUP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_SETUP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Format</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>00 � True/Early-I2S (standard format)<br>01 � Late-I2S<br>10 � MP3 Valid<br>11 � MP3 Start</td></tr>
<tr><td align="center">Mode</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Slave<br>1 � Master - NOT VALID FOR S/PDIF</td></tr>
<tr><td align="center">Pos Edge</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Master Word Clock is output on the negative edge of the RX Audio clock<br>1 � Master Word Clock is output on the positive edge of the RX Audio clock</td></tr>
<tr><td align="center">Combine Quad</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No combining<br>1 � Combine two 16 bit samples into single quadlet - NOT VALID FOR S/PDIF</td></tr>
<tr><td align="center">Inspect Word Clock</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">??</td><td>Used
when recovering from overrun. This bit is set to look for either a high
or low word clock before the hardware carries on as normal.</td></tr>
<tr><td align="center">SPDIF En</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No SPDIF on Channel 0 (disables biphase decoding and clk recovery on input)<br>1 � SPDIF on Channel 0 (enables the biphase decoding and clk recovery even when Rx disabled)</td></tr>
<tr><td align="center">SPDIF Debug En</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">??</td><td>Provides direct control over rx_spdif_oe output signal</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_SETUP1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500180</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_SETUP1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_SETUP1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_SETUP1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Input</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>00 � Twos Compliment (pass-thru)<br>01 � Offset Binary<br>10 � Sign Magnitude<br>11 � Reserved</td></tr>
<tr><td align="center">Reverse</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Normal operation<br>1 � Reverse Stereo - DOES NOT WORK FOR NON- SPLIT_QUAD/MP3</td></tr>
<tr><td align="center">Invert</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Normal operation<br>1 � Inverted word clock (SLAVE: on input from pin; MASTER: on output to pin)</td></tr>
<tr><td align="center">Big Endian</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � System data is in little endian format<br>1 � System data is in big endian format</td></tr>
<tr><td align="center">Quad Endian</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � System data is 16 bit.<br>1 � System data is 32 bit</td></tr>
<tr><td align="center">Quad Samples</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � I2S Master word clock uses 16 bit samples - NOT VALID FOR S/PDIF<br>1 � I2S Master word clock uses 32 bit samples</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x455001C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_STATUS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Underrun</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Underrun has not occurred.<br>1 � Underrun has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">Overrun</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Overrun has not occurred.<br>1 � Overrun has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">FIFO</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � FIFO Underrun has not occurred.<br>,Underrun,,,1 � FIFO Underrun has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">FIFO</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � FIFO Overrun has not occurred.<br>,Overrun,,,1 � FIFO Overrun has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">S/PDIF Parity Error</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Rx S/PDIF Parity Error has not occurred.<br>1 � Rx S/PDIF Parity Error has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">S/PDIF Preamble Error</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Rx S/PDIF Preamble Error has not occurred.<br>1 � Rx S/PDIF Preamble Error has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">S/PDIF Framing Error</td><td align="center">6</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Rx S/PDIF Framing Error has not occurred.<br>1 � Rx S/PDIF Framing Error has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">S/PDIF Lock Event</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Rx S/PDIF Lock status has not changed.<br>1 � Rx S/PDIF Lock status has changed. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">H/W Write</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � H/W Write of FIFO has not occurred.<br>1 � H/W Write of FIFO has occurred. (Note that this bit must be written to with a �1� to clear)</td></tr>
<tr><td align="center">Buffer Level Met</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Fill level of FIFO does not match BUFFER_INTERRUPT_LEVEL.<br>1 � Fill level of FIFO matches BUFFER_INTERRUPT_LEVEL</td></tr>
<tr><td align="center">S/PDIF Lock</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Rx S/PDIF timing is not locked.<br>1 � Rx S/PDIF timing is locked.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_DEBUG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500200</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_DEBUG</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_DEBUG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_DEBUG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Tx DMA State</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>00 � START<br>01 � IDLE<br>10 � BURST<br>11 � NON_ALIGNED</td></tr>
<tr><td align="center">Write</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">??</td><td>Determines the alignment of the writes (0=quad aligned; 1/3=bytes aligned; 2 doublet aligned)<br>,Offset</td></tr>
<tr><td align="center">Tx dreq</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">??</td><td>Set if DMA request for Tx is set</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_DEBUG2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500240</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_DEBUG2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_DEBUG2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_DEBUG2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Tx Ctrl State</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>000 � WAITING<br>001 � WAITING_HALF<br>010 � Invalid<br>011 � WAIT_LEFT<br>100 � READ_FIFO<br>101 � WAIT_TILL_DATA_TAKEN<br>11x � Invalid</td></tr>
<tr><td align="center">FIFO Reader 2nd Stage</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � First stage (L) of FIFO read<br>1 � Second stage (R) of FIFO read</td></tr>
<tr><td align="center">FIFO Reader Channel</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">??</td><td>Current channel being read from FIFO</td></tr>
<tr><td align="center">Num Writes</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">??</td><td>Number of writes to be performed every interrupt</td></tr>
<tr><td align="center">Safe to Update Regs</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Changes to registers will be deferred<br>1 � Changes to registers will be immediate</td></tr>
<tr><td align="center">Wr Dmarq</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No writes being requested<br>1 � Writes being requested (=DMA DREQ when using APB)</td></tr>
<tr><td align="center">FIFO Read Address</td><td align="center">19:16</td><td align="center">&nbsp;</td><td align="center">??</td><td>Current read pointer of FIFO</td></tr>
<tr><td align="center">FIFO Write Address</td><td align="center">27:24</td><td align="center">&nbsp;</td><td align="center">??</td><td>Current write pointer of FIFO</td></tr>
<tr><td align="center">Word Clk</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">??</td><td>State of internal safe tx_word_clk</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_DEBUG3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500280</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_DEBUG3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_DEBUG3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_DEBUG3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Tx State</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>000 � DISABLED<br>001 � WAITING<br>010 � WAIT_FOR_8<br>011 � SAMPLE_8<br>100 � WAIT_FOR_LEFT<br>101 � SAMPLE_LEFT<br>110 � WAIT_FOR_RIGHT<br>111 � SAMPLE_RIGHT</td></tr>
<tr><td align="center">Tx SPDIF Frame</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">??</td><td>Current SPDIF frame count (0-191)</td></tr>
<tr><td align="center">Tx SPDIF Restarting</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No restart of SPDIF framing pending<br>1 � Restart of SPDIF framing pending</td></tr>
<tr><td align="center">Tx In Reset</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Tx domain is out of reset<br>1 � Tx domain is in reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_DEBUG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500300</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_DEBUG</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_DEBUG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_DEBUG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Rx DMA State</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>00 � START<br>01 � IDLE<br>10 � BURST<br>11 � NON_ALIGNED</td></tr>
<tr><td align="center">Read Offset</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">??</td><td>Determines the alignment of the reads (0=quad aligned; 1/3=bytes aligned; 2 doublet aligned)</td></tr>
<tr><td align="center">Rx dreq</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">??</td><td>Set if DMA request for Rx is set</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_DEBUG2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500340</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_DEBUG2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_DEBUG2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_DEBUG2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Rx Ctrl State</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>000 � WAITING<br>001 � WAITING_HALF<br>01x � Invalid<br>100 � WRITE_FIFO<br>101 � WAIT_TILL_DATA_PUT<br>11x � Invalid</td></tr>
<tr><td align="center">FIFO Writer  2nd Stage</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � First stage (L) of FIFO write<br>1 � Second stage (R) of FIFO write</td></tr>
<tr><td align="center">FIFO Writer  Channel</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">??</td><td>Current channel being written to FIFO</td></tr>
<tr><td align="center">Num Reads</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">??</td><td>Number of reads to be performed every interrupt</td></tr>
<tr><td align="center">Safe to Update Regs</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Changes to registers will be deferred<br>1 � Changes to registers will be immediate</td></tr>
<tr><td align="center">Rd Dmarq</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No reads being requested<br>1 � Reads being requested (=DMA DREQ when using APB)</td></tr>
<tr><td align="center">FIFO Read Address</td><td align="center">19:16</td><td align="center">&nbsp;</td><td align="center">??</td><td>Current read pointer of FIFO</td></tr>
<tr><td align="center">FIFO Write Address</td><td align="center">27:24</td><td align="center">&nbsp;</td><td align="center">??</td><td>Current write pointer of FIFO</td></tr>
<tr><td align="center">Word Clk</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">??</td><td>State of internal safe rx_word_clk</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_DEBUG3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500380</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_DEBUG3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_DEBUG3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_DEBUG3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Rx State</td><td align="center">2:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>000 � DISABLED<br>001 � WAITING<br>010 � WAIT_FOR_8<br>011 � SAMPLE_8<br>100 � WAIT_FOR_LEFT<br>101 � SAMPLE_LEFT<br>110 � WAIT_FOR_RIGHT<br>111 � SAMPLE_RIGHT</td></tr>
<tr><td align="center">Rx In Reset</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Rx domain is out of reset<br>1 � Rx domain is in reset</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_BUFFER LEVEL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500400</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_BUFFER LEVEL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_BUFFER%20LEVEL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_BUFFER LEVEL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Buffer Level</td><td align="center">FT � 0</td><td align="center">&nbsp;</td><td align="center">??</td><td>"Fill
level of Tx buffer. When this register is read it returns the current
fill level of the buffer within the audio core, when a �1� is written
to the lower bit, the buffer fill level, read and write pointers are
all set to zero."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_BUFFER_INTERRUPT_LEVEL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500480</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_BUFFER_INTERRUPT_LEVEL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_BUFFER_INTERRUPT_LEVEL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_BUFFER_INTERRUPT_LEVEL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Interrupt Level</td><td align="center">FT � 0</td><td align="center">&nbsp;</td><td align="center">??</td><td>Programmable Buffer Level to initiate Interrupt</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_BUFFER LEVEL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500500</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_BUFFER LEVEL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_BUFFER%20LEVEL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_BUFFER LEVEL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Buffer Level</td><td align="center">FR � 0</td><td align="center">&nbsp;</td><td align="center">??</td><td>"Fill
level of Rx buffer. When this register is read it returns the current
fill level of the buffer within the audio core, when a �1� is written
to the lower bit, the buffer fill level, read and write pointers are
all set to zero."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_BUFFER_INTERRUPT_LEVEL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500580</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_BUFFER_INTERRUPT_LEVEL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_BUFFER_INTERRUPT_LEVEL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_BUFFER_INTERRUPT_LEVEL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Interrupt Level</td><td align="center">FR � 0</td><td align="center">&nbsp;</td><td align="center">??</td><td>Programmable Buffer Level to initiate Interrupt</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_SPDIF_DEBUG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500700</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_SPDIF_DEBUG</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_SPDIF_DEBUG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_SPDIF_DEBUG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Max Pulse</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>Number of cycles of rx_spdif_osamp_clk in maximum pulse width detected (=1.5x bit_clk)</td></tr>
<tr><td align="center">Min Pulse</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">??</td><td>Number of cycles of rx_spdif_osamp_clk in minimum pulse width detected (=0.5x bit_clk)</td></tr>
<tr><td align="center">Valid</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Min Pulse is not valid (&lt;2) for doing recovery<br>1 � Min Pulse is valid (�2) and recovery is possible</td></tr>
<tr><td align="center">Lock</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Rx S/PDIF timing is not locked.<br>1 � Rx S/PDIF timing is locked.</td></tr>
<tr><td align="center">No Pulse</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Pulse detected<br>1 � Pulse detection has timed out</td></tr>
<tr><td align="center">Block Start</td><td align="center">20</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Current frame is not at start of block<br>1 � Current frame is at start of block</td></tr>
<tr><td align="center">Chan A</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Current subframe is B<br>1 � Current subframe is A</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_SPDIF_DEBUG2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500740</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_SPDIF_DEBUG2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_SPDIF_DEBUG2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_SPDIF_DEBUG2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Frame</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>Current frame counter (0 to 191)</td></tr>
<tr><td align="center">Block Sync</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Not yet achieved block sync<br>1 � Block sync has been achieved (i.e. received a start of block)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/INTERRUPT_CONTROL_STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500800</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>INTERRUPT_CONTROL_STATUS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('INTERRUPT_CONTROL_STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="INTERRUPT_CONTROL_STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Audio IRQ</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">??</td><td>Set if the Audio Core Interrupt is set<br>"Write �0� to clear  � backwards compatible, do not use"</td></tr>
<tr><td align="center">Auto Clear</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Auto Clear disabled<br>1 � Auto clear of H/W read/write interrupt on next data write/read (Tx/Rx)</td></tr>
<tr><td align="center">Tx IRQ</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">??</td><td>Set if the Audio Core Tx Interrupt is set<br>Set to �1� to trigger a Normal Interrupt (Tx_Read/Rx_Write IRQ Enable must be set)</td></tr>
<tr><td align="center">Tx Err</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">??</td><td>Set if the Audio Core Tx Error Interrupt is set<br>,IRQ,,,Set to �1� to trigger an Error Interrupt (Tx_Urun/Rx_Orun IRQ Enable must be set)</td></tr>
<tr><td align="center">Rx IRQ</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">??</td><td>Set if the Audio Core Rx Interrupt is set<br>Set to �1� to trigger a Normal Interrupt (Rx_Write/Tx_Read IRQ Enable must be set)</td></tr>
<tr><td align="center">Rx Err</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">??</td><td>Set if the Audio Core Rx Error Interrupt is set<br>,IRQ,,,Set to �1� to trigger an Error Interrupt (Rx_Orun/Tx_Urun IRQ Enable must be set)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/INTERRUPT_MASK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45500840</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>INTERRUPT_MASK</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('INTERRUPT_MASK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="INTERRUPT_MASK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Tx_Read</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Normal Interrupt generated by Tx_Read<br>,Irq Enable,,,1 � Normal Interrupt generated by Tx_Read</td></tr>
<tr><td align="center">Tx_Level</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Normal Interrupt generated by Tx_Buffer_Level<br>,Irq Enable,,,1 � Normal Interrupt generated by Tx_Buffer_Level</td></tr>
<tr><td align="center">Tx_Error</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Normal Interrupt generated by Tx_Error<br>,Irq Enable,,,1 � Normal Interrupt generated by Tx_Error</td></tr>
<tr><td align="center">Rx_Write</td><td align="center">8</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Normal Interrupt generated by Rx_Write<br>,Irq Enable,,,1 � Normal Interrupt generated by Rx_Write</td></tr>
<tr><td align="center">Rx_Level</td><td align="center">9</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Normal Interrupt generated by Rx_Buffer_Level<br>,Irq Enable,,,1 � Normal Interrupt generated by Rx_Buffer_Level</td></tr>
<tr><td align="center">Rx_Error</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Normal Interrupt generated by Rx_Error<br>,Irq Enable,,,1 � Normal Interrupt generated by Rx_Error</td></tr>
<tr><td align="center">Tx_Urun</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Error Interrupt generated by Tx Underrun<br>,Err_Irq Enable,,,1 � Error Interrupt generated by Tx Underrun</td></tr>
<tr><td align="center">Tx_Orun</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Error Interrupt generated by Tx Overrun<br>,Err_Irq,,,1 � Error Interrupt generated by Tx Overrun<br>,Enable</td></tr>
<tr><td align="center">Tx_FIFO_</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Error Interrupt generated by Tx FIFO Underrun<br>,Urun ,,,1 � Error Interrupt generated by Tx FIFO Underrun<br>,Err_Irq<br>,Enable</td></tr>
<tr><td align="center">Tx_FIFO_</td><td align="center">19</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Error Interrupt generated by Tx FIFO Overrun<br>,Orun ,,,1 � Error Interrupt generated by Tx FIFO Overrun<br>,Err_Irq<br>,Enable</td></tr>
<tr><td align="center">Rx_Urun</td><td align="center">24</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Error Interrupt generated by Rx Underrun<br>,Err_Irq,,,1 � Error Interrupt generated by Rx Underrun<br>,Enable</td></tr>
<tr><td align="center">Rx_Orun</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Error Interrupt generated by Rx Overrun<br>,Err_Irq,,,1 � Error Interrupt generated by Rx Overrun<br>,Enable</td></tr>
<tr><td align="center">Rx_FIFO_</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Error Interrupt generated by Rx FIFO Underrun<br>,Urun ,,,1 � Error Interrupt generated by Rx FIFO Underrun<br>,Err_Irq<br>,Enable</td></tr>
<tr><td align="center">Rx_FIFO_</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Error Interrupt generated by Rx FIFO Overrun<br>,Orun ,,,1 � Error Interrupt generated by Rx FIFO Overrun<br>,Err_Irq<br>,Enable</td></tr>
<tr><td align="center">S/PDIF Rx Error</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Error Interrupt generated by Rx S/PDIF Error (Parity/Preamble/Framing)<br>1 � Error Interrupt generated by Rx S/PDIF Error (Parity/Preamble/ Framing)</td></tr>
<tr><td align="center">S/PDIF Rx Lock</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � No Error Interrupt generated by Rx S/PDIF Lock event<br>1 � Error Interrupt generated by Rx S/PDIF Lock event</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/VERSION</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x455008C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VERSION</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VERSION_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VERSION_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Version</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">??</td><td>Version of the core</td></tr>
<tr><td align="center">AUX_APB</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">??</td><td>AUX_APB build option</td></tr>
<tr><td align="center">RX_SPDIF</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">??</td><td>RX_SPDIF build option</td></tr>
<tr><td align="center">TX_SPDIF</td><td align="center">14</td><td align="center">&nbsp;</td><td align="center">??</td><td>TX_SPDIF build option</td></tr>
<tr><td align="center">AHB DMA</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">??</td><td>DMA_AHB build option</td></tr>
<tr><td align="center">Rx FIFO</td><td align="center">19:16</td><td align="center">&nbsp;</td><td align="center">??</td><td>G_RX_FIFO_A_BITS generic<br>,Addr Bits</td></tr>
<tr><td align="center">Rx Chans</td><td align="center">23:20</td><td align="center">&nbsp;</td><td align="center">??</td><td>G_RX_CHANNELS generic</td></tr>
<tr><td align="center">Tx FIFO</td><td align="center">27:24</td><td align="center">&nbsp;</td><td align="center">??</td><td>G_TX_FIFO_A_BITS generic<br>,Addr Bits</td></tr>
<tr><td align="center">Tx Chans</td><td align="center">31:28</td><td align="center">&nbsp;</td><td align="center">??</td><td>G_TX_CHANNELS generic</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_DATA_IN_FORMAT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45501000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_DATA_IN_FORMAT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_DATA_IN_FORMAT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_DATA_IN_FORMAT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Sample Order</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Samples written in as left/right pairs<br>1 � All left channels written then all right</td></tr>
<tr><td align="center">24 bit sample</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">??</td><td>Set to �1� to indicate write contains 24 bit data (used in conjunction with following setting) - NOT VALID FOR S/PDIF</td></tr>
<tr><td align="center">Pad Top Byte</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Output data becomes write_data(23 downto 0) &amp; �00000000�<br>1 � Output data becomes �0000000� &amp; write_data(23 downto 0)</td></tr>
<tr><td align="center">Wait For Half</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 - Hardware waits for full number of writes before progressing<br>1 - Hardware waits for half the number of writes before progressing</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_CHANNELS_ENABLE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45501040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_CHANNELS_ENABLE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_CHANNELS_ENABLE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_CHANNELS_ENABLE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Channel N Enable</td><td align="center">N</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Tx Channel N disabled<br>1 � Tx Channel N enabled<br>"If a channel is disabled, then no new data is presented to the data line of that I2S channel"</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_WRITES_TO</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45501080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_WRITES_TO</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_WRITES_TO_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_WRITES_TO_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Channel N Write</td><td align="center">N</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Tx Channel N not included in data<br>1 � Tx Channel N included in data<br>"Can
be used in conjunction with the Tx Channel Enable, whereby if an output
channel is disabled then software can select whether or not it still
wishes to write to this channel or not, effectively reduces its number
of writes per interrupt. If it chooses to still write to this location
then the write data is effectively ignored."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_DATA_OUT_FORMAT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45502000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_DATA_OUT_FORMAT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_DATA_OUT_FORMAT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_DATA_OUT_FORMAT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Sample Order</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Samples read in as left/right pairs<br>1 � All left channels read then all right</td></tr>
<tr><td align="center">24 bit sample</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">??</td><td>Set to �1� to indicate read contains 24 bit data (used in conjunction with following setting)  - NOT VALID FOR S/PDIF</td></tr>
<tr><td align="center">Pad Top Byte</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Read data becomes rx_data(23 downto 0) &amp; �00000000�<br>1 � Read data becomes �0000000� &amp; rx_data(23 downto 0)</td></tr>
<tr><td align="center">Wait For Half</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 - Hardware waits for full number of reads before progressing<br>1 - Hardware waits for half the number of reads before progressing</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_CHANNELS_ENABLE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45502040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_CHANNELS_ENABLE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_CHANNELS_ENABLE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_CHANNELS_ENABLE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Channel N Enable</td><td align="center">N</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Rx Channel N disabled<br>1 � Rx Channel N enabled<br>"If a channel is disabled, then no new data is presented to the data line of that I2S channel"</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_READS_FROM</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45502080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_READS_FROM</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_READS_FROM_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_READS_FROM_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Channel N Read</td><td align="center">N</td><td align="center">&nbsp;</td><td align="center">??</td><td>0 � Rx Channel N not included in data<br>1 � Rx Channel N included in data<br>"Can
be used in conjunction with the Rx Channel Enable, whereby if an input
channel is disabled then software can select whether or not it still
wishes to read from this channel or not, effectively reduces its number
of reads per interrupt. If it chooses to still read from this location
then the read data is invalid."</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_CPU_DATA_WRITES_ALT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45504FF0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_CPU_DATA_WRITES_ALT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_CPU_DATA_WRITES_ALT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_CPU_DATA_WRITES_ALT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_CPU_DATA_READS_ALT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45508FF0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_CPU_DATA_READS_ALT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_CPU_DATA_READS_ALT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_CPU_DATA_READS_ALT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/TX_CPU_DATA_WRITES</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4551FFF0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>TX_CPU_DATA_WRITES</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX_CPU_DATA_WRITES_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX_CPU_DATA_WRITES_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>AUDIO/RX_CPU_DATA_READS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4552FFF0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RX_CPU_DATA_READS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX_CPU_DATA_READS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX_CPU_DATA_READS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">DMA</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x45600000...0x4560FFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">4-channel DMA engine</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('DMA_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="DMA_blocks" style="display: none;"><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DMA0</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x45600000...0x4560001F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">DMA channel 0</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA0/CTRL_STAT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>control and status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CTRL_STAT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CTRL_STAT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FAIR_SHARE_ARB</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates which Stage the channel belongs to.<br>1: Stage 1, higher group (reset value)<br>0: Stage 2, lower group</td></tr>
<tr><td align="center">DMA_IN_PROGRESS</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>This bit indicates if a DMA channel is idle or not.<br>0: DMA idle.<br>1: DMA busy, transfer is not completed (current-byte-count not zero).</td></tr>
<tr><td align="center">SFT_S_DREQ</td><td align="center">5:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid source request for the channel.<br>DMA always reads from the source.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">SFT_D_DREQ</td><td align="center">9:6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid destination request for the channel.<br>DMA always writes to destination.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">INT</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">R</td><td>When set interrupt is enabled, indicates completion of a DMA transfer (when current byte count register is zero).<br>There are two different ways of clearing this interrupt bit, please see<br>bit 30 (CLEAR_INT_REG_EN) in this register.</td></tr>
<tr><td align="center">NEXT_FREE</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">R</td><td>When high, this bit indicates that the address- and byte-count registers are ready to be programmed.<br>DMA-controller will set this bit high after it loads the current registers.<br>It deactivates when CPU writs to BYTE_COUNT register.</td></tr>
<tr><td align="center">CH_RESET</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting
this bit to �1� will disable the next bus-cycle transfer (does not
effect any ongoing AHB burst transfer). CPU needs to set it back to �0�
when starting a new transfer.</td></tr>
<tr><td align="center">DIRECTION</td><td align="center">14:13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates
the data transfer direction between interfaces A and B. DMA-controller
always reads from the source and writes to the destination.<br>00: Source = A, Destination = A (reset value)<br>01: Source = B, Destination = A<br>10: Source = A, Destination = B<br>11: Source = B, Destination = B</td></tr>
<tr><td align="center">INC_ADDR_S</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Source address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value).<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">INC_ADDR_D</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Destination address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value)<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">MODE_A</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface A.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">MODE_B</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface B.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">DEVICE_TYPE_S</td><td align="center">21:19</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for source device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">DEVICE_TYPE_D</td><td align="center">24:22</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for destination device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">PAUSE_DMA</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing one to this bit will pause the next bus-cycle transfer until it is set to zero.</td></tr>
<tr><td align="center">INT_ENABLE</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �0� will disable the interrupt for this channel.<br>Reset value is �1�.</td></tr>
<tr><td align="center">FIXED_ADDR_S</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 15.<br>1: Source address is really fixed (all bits), bit 15 must be �0�.</td></tr>
<tr><td align="center">FIXED_ADDR_D</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 16.<br>1: Destination address is really fixed (all bits), bit 16 must be �0�.</td></tr>
<tr><td align="center">STARVE_LOW_PRIO</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value<br>1:
Starve the low priority channels. Low priority channels get executed
when high priority is not requesting. It has to be cleared by software
when not needed.</td></tr>
<tr><td align="center">CLEAR_INT_REG_EN</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If
this bit is set to �1�, then Software shall use the clear interrupt
register (CLEAR_INT_REG ) to clear any pending interrupts.<br>Reset
value is �0� where software shall write to base-source/destination or
byte count register to clear any pending interrupts, this is to ensure
software compatibility with older DMA versions(V0-V3).</td></tr>
<tr><td align="center">UNUSED</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing to these bits has no effect. Read will return all zeros.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA0/BASE_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the base-Source address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt..</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA0/CURRENT_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current Source address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA0/CLEAR_INT_REG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Any write to this register will clear the pending interrupt if CLEAR_INT_REG_EN bit in control register is set to �1�.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CLEAR_INT_REG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CLEAR_INT_REG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA0/BASE_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the Destination-base address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA0/CURRENT_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4560000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current destination address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA0/BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RD_EOT</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of read transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">WR_EOT</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of write transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">HPROT_SET</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the write transfer as write bufferable on AHB bus.<br>Reset value is �0�.</td></tr>
<tr><td align="center">FIXED_INCR</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the transfer as fixed incrementing burst (INCR4/8/16) on AHB bus if possible.<br>Reset value is �0�, unspecified burst length (INCR).</td></tr>
<tr><td align="center">BURST_MODE_A</td><td align="center">27:26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface A:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">BURST_MODE_B</td><td align="center">25:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface B:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">Reserved</td><td align="center">23:22</td><td align="center">&nbsp;</td><td align="center">N/A</td><td>&nbsp;</td></tr>
<tr><td align="center">BYTE_COUNT</td><td align="center">21:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Byte_count_size is programmable.<br>Byte_count holds the block size in bytes for the next DMA transfer.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA0/CURRENT_BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CURRENT_BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CURRENT_BYTE_COUNT</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates
number of bytes read from the source at any point during the current
DMA transaction. It is byte aligned and decrements on each cycle by the
number of bytes transferred.<br>Indicates number of bytes read from source.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA0/Interrupt Register and DMA-version</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Register and DMA-version</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Register%20and%20DMA-version_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Register and DMA-version_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INT_REG</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates what channel is interrupting, where bit zero indicates channel zero, bit one is channel one and etc.</td></tr>
<tr><td align="center">NUM_OF_CH</td><td align="center">23;16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns number of channels.</td></tr>
<tr><td align="center">Version</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Highest 8-bits is DMA version number = 0x04.</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DMA1</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x45600020...0x4560003F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">DMA channel 1</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA1/CTRL_STAT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>control and status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CTRL_STAT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CTRL_STAT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FAIR_SHARE_ARB</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates which Stage the channel belongs to.<br>1: Stage 1, higher group (reset value)<br>0: Stage 2, lower group</td></tr>
<tr><td align="center">DMA_IN_PROGRESS</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>This bit indicates if a DMA channel is idle or not.<br>0: DMA idle.<br>1: DMA busy, transfer is not completed (current-byte-count not zero).</td></tr>
<tr><td align="center">SFT_S_DREQ</td><td align="center">5:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid source request for the channel.<br>DMA always reads from the source.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">SFT_D_DREQ</td><td align="center">9:6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid destination request for the channel.<br>DMA always writes to destination.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">INT</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">R</td><td>When set interrupt is enabled, indicates completion of a DMA transfer (when current byte count register is zero).<br>There are two different ways of clearing this interrupt bit, please see<br>bit 30 (CLEAR_INT_REG_EN) in this register.</td></tr>
<tr><td align="center">NEXT_FREE</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">R</td><td>When high, this bit indicates that the address- and byte-count registers are ready to be programmed.<br>DMA-controller will set this bit high after it loads the current registers.<br>It deactivates when CPU writs to BYTE_COUNT register.</td></tr>
<tr><td align="center">CH_RESET</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting
this bit to �1� will disable the next bus-cycle transfer (does not
effect any ongoing AHB burst transfer). CPU needs to set it back to �0�
when starting a new transfer.</td></tr>
<tr><td align="center">DIRECTION</td><td align="center">14:13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates
the data transfer direction between interfaces A and B. DMA-controller
always reads from the source and writes to the destination.<br>00: Source = A, Destination = A (reset value)<br>01: Source = B, Destination = A<br>10: Source = A, Destination = B<br>11: Source = B, Destination = B</td></tr>
<tr><td align="center">INC_ADDR_S</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Source address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value).<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">INC_ADDR_D</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Destination address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value)<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">MODE_A</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface A.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">MODE_B</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface B.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">DEVICE_TYPE_S</td><td align="center">21:19</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for source device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">DEVICE_TYPE_D</td><td align="center">24:22</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for destination device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">PAUSE_DMA</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing one to this bit will pause the next bus-cycle transfer until it is set to zero.</td></tr>
<tr><td align="center">INT_ENABLE</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �0� will disable the interrupt for this channel.<br>Reset value is �1�.</td></tr>
<tr><td align="center">FIXED_ADDR_S</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 15.<br>1: Source address is really fixed (all bits), bit 15 must be �0�.</td></tr>
<tr><td align="center">FIXED_ADDR_D</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 16.<br>1: Destination address is really fixed (all bits), bit 16 must be �0�.</td></tr>
<tr><td align="center">STARVE_LOW_PRIO</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value<br>1:
Starve the low priority channels. Low priority channels get executed
when high priority is not requesting. It has to be cleared by software
when not needed.</td></tr>
<tr><td align="center">CLEAR_INT_REG_EN</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If
this bit is set to �1�, then Software shall use the clear interrupt
register (CLEAR_INT_REG ) to clear any pending interrupts.<br>Reset
value is �0� where software shall write to base-source/destination or
byte count register to clear any pending interrupts, this is to ensure
software compatibility with older DMA versions(V0-V3).</td></tr>
<tr><td align="center">UNUSED</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing to these bits has no effect. Read will return all zeros.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA1/BASE_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the base-Source address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt..</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA1/CURRENT_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current Source address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA1/CLEAR_INT_REG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Any write to this register will clear the pending interrupt if CLEAR_INT_REG_EN bit in control register is set to �1�.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CLEAR_INT_REG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CLEAR_INT_REG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA1/BASE_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the Destination-base address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA1/CURRENT_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4560002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current destination address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA1/BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RD_EOT</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of read transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">WR_EOT</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of write transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">HPROT_SET</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the write transfer as write bufferable on AHB bus.<br>Reset value is �0�.</td></tr>
<tr><td align="center">FIXED_INCR</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the transfer as fixed incrementing burst (INCR4/8/16) on AHB bus if possible.<br>Reset value is �0�, unspecified burst length (INCR).</td></tr>
<tr><td align="center">BURST_MODE_A</td><td align="center">27:26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface A:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">BURST_MODE_B</td><td align="center">25:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface B:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">Reserved</td><td align="center">23:22</td><td align="center">&nbsp;</td><td align="center">N/A</td><td>&nbsp;</td></tr>
<tr><td align="center">BYTE_COUNT</td><td align="center">21:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Byte_count_size is programmable.<br>Byte_count holds the block size in bytes for the next DMA transfer.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA1/CURRENT_BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CURRENT_BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CURRENT_BYTE_COUNT</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates
number of bytes read from the source at any point during the current
DMA transaction. It is byte aligned and decrements on each cycle by the
number of bytes transferred.<br>Indicates number of bytes read from source.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA1/Interrupt Register and DMA-version</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Register and DMA-version</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Register%20and%20DMA-version_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Register and DMA-version_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INT_REG</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates what channel is interrupting, where bit zero indicates channel zero, bit one is channel one and etc.</td></tr>
<tr><td align="center">NUM_OF_CH</td><td align="center">23;16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns number of channels.</td></tr>
<tr><td align="center">Version</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Highest 8-bits is DMA version number = 0x04.</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DMA2</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x45600040...0x4560005F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">DMA channel 2</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA2/CTRL_STAT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>control and status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CTRL_STAT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CTRL_STAT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FAIR_SHARE_ARB</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates which Stage the channel belongs to.<br>1: Stage 1, higher group (reset value)<br>0: Stage 2, lower group</td></tr>
<tr><td align="center">DMA_IN_PROGRESS</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>This bit indicates if a DMA channel is idle or not.<br>0: DMA idle.<br>1: DMA busy, transfer is not completed (current-byte-count not zero).</td></tr>
<tr><td align="center">SFT_S_DREQ</td><td align="center">5:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid source request for the channel.<br>DMA always reads from the source.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">SFT_D_DREQ</td><td align="center">9:6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid destination request for the channel.<br>DMA always writes to destination.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">INT</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">R</td><td>When set interrupt is enabled, indicates completion of a DMA transfer (when current byte count register is zero).<br>There are two different ways of clearing this interrupt bit, please see<br>bit 30 (CLEAR_INT_REG_EN) in this register.</td></tr>
<tr><td align="center">NEXT_FREE</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">R</td><td>When high, this bit indicates that the address- and byte-count registers are ready to be programmed.<br>DMA-controller will set this bit high after it loads the current registers.<br>It deactivates when CPU writs to BYTE_COUNT register.</td></tr>
<tr><td align="center">CH_RESET</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting
this bit to �1� will disable the next bus-cycle transfer (does not
effect any ongoing AHB burst transfer). CPU needs to set it back to �0�
when starting a new transfer.</td></tr>
<tr><td align="center">DIRECTION</td><td align="center">14:13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates
the data transfer direction between interfaces A and B. DMA-controller
always reads from the source and writes to the destination.<br>00: Source = A, Destination = A (reset value)<br>01: Source = B, Destination = A<br>10: Source = A, Destination = B<br>11: Source = B, Destination = B</td></tr>
<tr><td align="center">INC_ADDR_S</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Source address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value).<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">INC_ADDR_D</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Destination address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value)<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">MODE_A</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface A.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">MODE_B</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface B.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">DEVICE_TYPE_S</td><td align="center">21:19</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for source device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">DEVICE_TYPE_D</td><td align="center">24:22</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for destination device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">PAUSE_DMA</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing one to this bit will pause the next bus-cycle transfer until it is set to zero.</td></tr>
<tr><td align="center">INT_ENABLE</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �0� will disable the interrupt for this channel.<br>Reset value is �1�.</td></tr>
<tr><td align="center">FIXED_ADDR_S</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 15.<br>1: Source address is really fixed (all bits), bit 15 must be �0�.</td></tr>
<tr><td align="center">FIXED_ADDR_D</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 16.<br>1: Destination address is really fixed (all bits), bit 16 must be �0�.</td></tr>
<tr><td align="center">STARVE_LOW_PRIO</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value<br>1:
Starve the low priority channels. Low priority channels get executed
when high priority is not requesting. It has to be cleared by software
when not needed.</td></tr>
<tr><td align="center">CLEAR_INT_REG_EN</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If
this bit is set to �1�, then Software shall use the clear interrupt
register (CLEAR_INT_REG ) to clear any pending interrupts.<br>Reset
value is �0� where software shall write to base-source/destination or
byte count register to clear any pending interrupts, this is to ensure
software compatibility with older DMA versions(V0-V3).</td></tr>
<tr><td align="center">UNUSED</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing to these bits has no effect. Read will return all zeros.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA2/BASE_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the base-Source address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt..</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA2/CURRENT_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current Source address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA2/CLEAR_INT_REG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Any write to this register will clear the pending interrupt if CLEAR_INT_REG_EN bit in control register is set to �1�.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CLEAR_INT_REG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CLEAR_INT_REG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA2/BASE_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the Destination-base address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA2/CURRENT_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4560004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current destination address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA2/BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RD_EOT</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of read transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">WR_EOT</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of write transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">HPROT_SET</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the write transfer as write bufferable on AHB bus.<br>Reset value is �0�.</td></tr>
<tr><td align="center">FIXED_INCR</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the transfer as fixed incrementing burst (INCR4/8/16) on AHB bus if possible.<br>Reset value is �0�, unspecified burst length (INCR).</td></tr>
<tr><td align="center">BURST_MODE_A</td><td align="center">27:26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface A:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">BURST_MODE_B</td><td align="center">25:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface B:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">Reserved</td><td align="center">23:22</td><td align="center">&nbsp;</td><td align="center">N/A</td><td>&nbsp;</td></tr>
<tr><td align="center">BYTE_COUNT</td><td align="center">21:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Byte_count_size is programmable.<br>Byte_count holds the block size in bytes for the next DMA transfer.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA2/CURRENT_BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CURRENT_BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CURRENT_BYTE_COUNT</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates
number of bytes read from the source at any point during the current
DMA transaction. It is byte aligned and decrements on each cycle by the
number of bytes transferred.<br>Indicates number of bytes read from source.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA2/Interrupt Register and DMA-version</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Register and DMA-version</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Register%20and%20DMA-version_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Register and DMA-version_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INT_REG</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates what channel is interrupting, where bit zero indicates channel zero, bit one is channel one and etc.</td></tr>
<tr><td align="center">NUM_OF_CH</td><td align="center">23;16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns number of channels.</td></tr>
<tr><td align="center">Version</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Highest 8-bits is DMA version number = 0x04.</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DMA3</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x45600060...0x4560007F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">DMA channel 3</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA3/CTRL_STAT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>control and status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CTRL_STAT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CTRL_STAT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FAIR_SHARE_ARB</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates which Stage the channel belongs to.<br>1: Stage 1, higher group (reset value)<br>0: Stage 2, lower group</td></tr>
<tr><td align="center">DMA_IN_PROGRESS</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>This bit indicates if a DMA channel is idle or not.<br>0: DMA idle.<br>1: DMA busy, transfer is not completed (current-byte-count not zero).</td></tr>
<tr><td align="center">SFT_S_DREQ</td><td align="center">5:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid source request for the channel.<br>DMA always reads from the source.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">SFT_D_DREQ</td><td align="center">9:6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid destination request for the channel.<br>DMA always writes to destination.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">INT</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">R</td><td>When set interrupt is enabled, indicates completion of a DMA transfer (when current byte count register is zero).<br>There are two different ways of clearing this interrupt bit, please see<br>bit 30 (CLEAR_INT_REG_EN) in this register.</td></tr>
<tr><td align="center">NEXT_FREE</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">R</td><td>When high, this bit indicates that the address- and byte-count registers are ready to be programmed.<br>DMA-controller will set this bit high after it loads the current registers.<br>It deactivates when CPU writs to BYTE_COUNT register.</td></tr>
<tr><td align="center">CH_RESET</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting
this bit to �1� will disable the next bus-cycle transfer (does not
effect any ongoing AHB burst transfer). CPU needs to set it back to �0�
when starting a new transfer.</td></tr>
<tr><td align="center">DIRECTION</td><td align="center">14:13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates
the data transfer direction between interfaces A and B. DMA-controller
always reads from the source and writes to the destination.<br>00: Source = A, Destination = A (reset value)<br>01: Source = B, Destination = A<br>10: Source = A, Destination = B<br>11: Source = B, Destination = B</td></tr>
<tr><td align="center">INC_ADDR_S</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Source address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value).<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">INC_ADDR_D</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Destination address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value)<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">MODE_A</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface A.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">MODE_B</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface B.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">DEVICE_TYPE_S</td><td align="center">21:19</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for source device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">DEVICE_TYPE_D</td><td align="center">24:22</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for destination device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">PAUSE_DMA</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing one to this bit will pause the next bus-cycle transfer until it is set to zero.</td></tr>
<tr><td align="center">INT_ENABLE</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �0� will disable the interrupt for this channel.<br>Reset value is �1�.</td></tr>
<tr><td align="center">FIXED_ADDR_S</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 15.<br>1: Source address is really fixed (all bits), bit 15 must be �0�.</td></tr>
<tr><td align="center">FIXED_ADDR_D</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 16.<br>1: Destination address is really fixed (all bits), bit 16 must be �0�.</td></tr>
<tr><td align="center">STARVE_LOW_PRIO</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value<br>1:
Starve the low priority channels. Low priority channels get executed
when high priority is not requesting. It has to be cleared by software
when not needed.</td></tr>
<tr><td align="center">CLEAR_INT_REG_EN</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If
this bit is set to �1�, then Software shall use the clear interrupt
register (CLEAR_INT_REG ) to clear any pending interrupts.<br>Reset
value is �0� where software shall write to base-source/destination or
byte count register to clear any pending interrupts, this is to ensure
software compatibility with older DMA versions(V0-V3).</td></tr>
<tr><td align="center">UNUSED</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing to these bits has no effect. Read will return all zeros.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA3/BASE_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the base-Source address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt..</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA3/CURRENT_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current Source address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA3/CLEAR_INT_REG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Any write to this register will clear the pending interrupt if CLEAR_INT_REG_EN bit in control register is set to �1�.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CLEAR_INT_REG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CLEAR_INT_REG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA3/BASE_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600068</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the Destination-base address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA3/CURRENT_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4560006C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current destination address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA3/BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600070</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RD_EOT</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of read transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">WR_EOT</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of write transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">HPROT_SET</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the write transfer as write bufferable on AHB bus.<br>Reset value is �0�.</td></tr>
<tr><td align="center">FIXED_INCR</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the transfer as fixed incrementing burst (INCR4/8/16) on AHB bus if possible.<br>Reset value is �0�, unspecified burst length (INCR).</td></tr>
<tr><td align="center">BURST_MODE_A</td><td align="center">27:26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface A:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">BURST_MODE_B</td><td align="center">25:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface B:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">Reserved</td><td align="center">23:22</td><td align="center">&nbsp;</td><td align="center">N/A</td><td>&nbsp;</td></tr>
<tr><td align="center">BYTE_COUNT</td><td align="center">21:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Byte_count_size is programmable.<br>Byte_count holds the block size in bytes for the next DMA transfer.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA3/CURRENT_BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600074</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CURRENT_BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CURRENT_BYTE_COUNT</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates
number of bytes read from the source at any point during the current
DMA transaction. It is byte aligned and decrements on each cycle by the
number of bytes transferred.<br>Indicates number of bytes read from source.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>DMA/DMA3/Interrupt Register and DMA-version</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45600078</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Register and DMA-version</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Register%20and%20DMA-version_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Register and DMA-version_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INT_REG</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates what channel is interrupting, where bit zero indicates channel zero, bit one is channel one and etc.</td></tr>
<tr><td align="center">NUM_OF_CH</td><td align="center">23;16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns number of channels.</td></tr>
<tr><td align="center">Version</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Highest 8-bits is DMA version number = 0x04.</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">SGDMA</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x45610000...0x4561FFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">4-channel Scatter-Gather DMA Controller</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('SGDMA_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="SGDMA_blocks" style="display: none;"><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">SGDMA0</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x45610000...0x4561000F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Scatter-Gather DMA Controller channel 0 (controls SATA DMA channel 0)</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA0/CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CONTROL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Start</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Self clearing bit. Set to activate SGDMA once REQUEST_POINTER has been written</td></tr>
<tr><td align="center">Queuing Enable</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>0 = DMAs are sent one at a time. SGDMA will wait for the interrupt for the previous DMA before sending a new one<br>1 = DMAs are queued. Two DMAs are sent initially. This is the recommended mode of operation.</td></tr>
<tr><td align="center">DMA HBURST Enable</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>Determines the type of bursts the DMA will be requested to perform:<br>0 = SINGLE / INCR<br>1 = INCR4 / INCR8 transfers where possible</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA0/STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>STATUS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Error code</td><td align="center">5:0</td><td align="center">0x0</td><td align="center">R/W</td><td>SGDMA Error Identifier<br>Should be checked when SGDMA completes. Error codes are documented below<br>Writing with bit 0 set will clear the error and return the SGDMA to the IDLE state</td></tr>
<tr><td align="center">Busy</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Set when the SGDMA is active processing the current request</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA0/REQUEST POINTER</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>REQUEST POINTER</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('REQUEST%20POINTER_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="REQUEST POINTER_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Req_Pointer</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Pointer to a request structure in memory. The request structure is documented below</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA0/SUB_BLOCK_RESETS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4561000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SUB_BLOCK_RESETS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SUB_BLOCK_RESETS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SUB_BLOCK_RESETS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Control Reset</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Setting this bit resets the control state machine for this channel. The bit is self clearing</td></tr>
<tr><td align="center">Arbiter reset</td><td align="center">1</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the multi-channel arbiter. The bit is self clearing</td></tr>
<tr><td align="center">AHB Master reset</td><td align="center">2</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the AHB master interface. The bit is self clearing<br>,</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">SGDMA1</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x45610010...0x4561001F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Scatter-Gather DMA Controller channel 1 (controls SATA DMA channel 1)</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA1/CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CONTROL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Start</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Self clearing bit. Set to activate SGDMA once REQUEST_POINTER has been written</td></tr>
<tr><td align="center">Queuing Enable</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>0 = DMAs are sent one at a time. SGDMA will wait for the interrupt for the previous DMA before sending a new one<br>1 = DMAs are queued. Two DMAs are sent initially. This is the recommended mode of operation.</td></tr>
<tr><td align="center">DMA HBURST Enable</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>Determines the type of bursts the DMA will be requested to perform:<br>0 = SINGLE / INCR<br>1 = INCR4 / INCR8 transfers where possible</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA1/STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>STATUS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Error code</td><td align="center">5:0</td><td align="center">0x0</td><td align="center">R/W</td><td>SGDMA Error Identifier<br>Should be checked when SGDMA completes. Error codes are documented below<br>Writing with bit 0 set will clear the error and return the SGDMA to the IDLE state</td></tr>
<tr><td align="center">Busy</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Set when the SGDMA is active processing the current request</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA1/REQUEST POINTER</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>REQUEST POINTER</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('REQUEST%20POINTER_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="REQUEST POINTER_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Req_Pointer</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Pointer to a request structure in memory. The request structure is documented below</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA1/SUB_BLOCK_RESETS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4561001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SUB_BLOCK_RESETS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SUB_BLOCK_RESETS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SUB_BLOCK_RESETS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Control Reset</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Setting this bit resets the control state machine for this channel. The bit is self clearing</td></tr>
<tr><td align="center">Arbiter reset</td><td align="center">1</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the multi-channel arbiter. The bit is self clearing</td></tr>
<tr><td align="center">AHB Master reset</td><td align="center">2</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the AHB master interface. The bit is self clearing<br>,</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">SGDMA2</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x45610020...0x4561002F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Scatter-Gather DMA Controller channel 2 (controls SATA DMA channel 2)</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA2/CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CONTROL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Start</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Self clearing bit. Set to activate SGDMA once REQUEST_POINTER has been written</td></tr>
<tr><td align="center">Queuing Enable</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>0 = DMAs are sent one at a time. SGDMA will wait for the interrupt for the previous DMA before sending a new one<br>1 = DMAs are queued. Two DMAs are sent initially. This is the recommended mode of operation.</td></tr>
<tr><td align="center">DMA HBURST Enable</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>Determines the type of bursts the DMA will be requested to perform:<br>0 = SINGLE / INCR<br>1 = INCR4 / INCR8 transfers where possible</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA2/STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>STATUS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Error code</td><td align="center">5:0</td><td align="center">0x0</td><td align="center">R/W</td><td>SGDMA Error Identifier<br>Should be checked when SGDMA completes. Error codes are documented below<br>Writing with bit 0 set will clear the error and return the SGDMA to the IDLE state</td></tr>
<tr><td align="center">Busy</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Set when the SGDMA is active processing the current request</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA2/REQUEST POINTER</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>REQUEST POINTER</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('REQUEST%20POINTER_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="REQUEST POINTER_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Req_Pointer</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Pointer to a request structure in memory. The request structure is documented below</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA2/SUB_BLOCK_RESETS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4561002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SUB_BLOCK_RESETS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SUB_BLOCK_RESETS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SUB_BLOCK_RESETS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Control Reset</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Setting this bit resets the control state machine for this channel. The bit is self clearing</td></tr>
<tr><td align="center">Arbiter reset</td><td align="center">1</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the multi-channel arbiter. The bit is self clearing</td></tr>
<tr><td align="center">AHB Master reset</td><td align="center">2</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the AHB master interface. The bit is self clearing<br>,</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">SGDMA3</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x45610030...0x4561003F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Scatter-Gather DMA Controller channel 3 (controls SATA DMA channel 3)</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA3/CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CONTROL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Start</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Self clearing bit. Set to activate SGDMA once REQUEST_POINTER has been written</td></tr>
<tr><td align="center">Queuing Enable</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>0 = DMAs are sent one at a time. SGDMA will wait for the interrupt for the previous DMA before sending a new one<br>1 = DMAs are queued. Two DMAs are sent initially. This is the recommended mode of operation.</td></tr>
<tr><td align="center">DMA HBURST Enable</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>Determines the type of bursts the DMA will be requested to perform:<br>0 = SINGLE / INCR<br>1 = INCR4 / INCR8 transfers where possible</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA3/STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>STATUS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Error code</td><td align="center">5:0</td><td align="center">0x0</td><td align="center">R/W</td><td>SGDMA Error Identifier<br>Should be checked when SGDMA completes. Error codes are documented below<br>Writing with bit 0 set will clear the error and return the SGDMA to the IDLE state</td></tr>
<tr><td align="center">Busy</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Set when the SGDMA is active processing the current request</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA3/REQUEST POINTER</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45610038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>REQUEST POINTER</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('REQUEST%20POINTER_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="REQUEST POINTER_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Req_Pointer</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Pointer to a request structure in memory. The request structure is documented below</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SGDMA/SGDMA3/SUB_BLOCK_RESETS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4561003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SUB_BLOCK_RESETS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SUB_BLOCK_RESETS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SUB_BLOCK_RESETS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Control Reset</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Setting this bit resets the control state machine for this channel. The bit is self clearing</td></tr>
<tr><td align="center">Arbiter reset</td><td align="center">1</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the multi-channel arbiter. The bit is self clearing</td></tr>
<tr><td align="center">AHB Master reset</td><td align="center">2</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the AHB master interface. The bit is self clearing<br>,</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">CIPHER</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x45700000...0x457FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Cipher subsystem</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('CIPHER_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="CIPHER_blocks" style="display: none;"><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">IBUTTON</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x457D0000...0x457DFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Not Fitted</td></tr></tbody></table><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">CORE</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x457C0000...0x457CFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">AES encryption/decryption core</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field9</td><td align="center">30:9</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x1</td><td align="center">R/W</td><td>iv_end_swap<br>�0� = Init vector / LBA is not endian swapped<br>�1� = Init vector / LBA is endian swapped</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x1</td><td align="center">R/W</td><td>iv_byte_swap<br>�0� = Init vector / LBA is not byte swapped<br>�1� = Init vector / LBA is byte swapped</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R/W</td><td>Key length<br>�0� = 128-bit key<br>�1� = 256-bit key</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R/W</td><td>enable_ctrl<br>�0� = HW has control over the core enable<br>�1� = SW has control over the core enable</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R/W</td><td>LBA ctrl<br>�0� = HW has control over the LBA/Init vector used<br>�1� = SW has control over the LBA/Init vector used</td></tr>
<tr><td align="center">Field7</td><td align="center">8:7</td><td align="center">0x0</td><td align="center">R/W</td><td>mode<br>'00' = ECB_AES mode<br>'01' = XTS_AES mode<br>'10' = CBC_AES mode<br>'11' = ECB_AES mode</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>abort<br>�0� = Normal Operation<br>�1� = Causes RX and TX FIFOs to be reset, causes AHB if to reset to default state.<br>NOTE: This bit should not be set when the core is processing data</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>direction_ctrl<br>�0� = HW has control over the core direction<br>�1� = SW has control over the core direction</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>cpu_encrypt_key<br>�0� = Normal operation<br>�1� = Data written to the DATA_IN registers will be encrypted using a secret internal key (KEK)<br>before being loaded into the KEY1 registers.</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>sw_fifo_ac<br>�0� = Normal operation<br>�1� = Overrides HW access to the datapath</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>use_key<br>�0� = ECB-AES module uses KEY1 as primary AES key<br>�1� = ECB-AES module uses KEY3 as primary AES key</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x1</td><td align="center">R/W</td><td>direction<br>�0� = Input data is decrypted when direction control is set to SW<br>�1� = Input data is encrypted when direction control is set to SW</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">R/W</td><td>enable<br>�0� =  Core is disabled when enable control is set to SW<br>�1� =  Core is enabled when enable control is set to SW</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field4</td><td align="center">31:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">6:4</td><td align="center">0x0</td><td align="center">R/W</td><td>Returns the state of the ECB state machine</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>tx_not_empty<br>�0� = TX_FIFO is empty<br>�1� = TX_FIFO is full (has data to transmit)</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x1</td><td align="center">R</td><td>rx_space<br>�0� = RX_FIFO is full<br>�1� = RX_FIFO is empty (can receive data)</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>idle<br>�0� = When either the encryption or decryption function is busy processing data. Also when the<br>key registers are written, while the inverse key is calculated (taking 12 clock cycles)<br>�1� = ECB_AES module is idle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 1 0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%200_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[255:224]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 1 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[223:192]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 1 2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%202_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[191:160]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 1 3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%203_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>KEY1[159:128]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 1 4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%204_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[127:96]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 1 5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%205_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[95:64]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 1 6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%206_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[63:32]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 1 3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%203_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[31:0]<br>Byte reversed word of key 1 (See section 5)<br>Writing this register also triggers inverse key generation, so this register should be written last when writing a key.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 2 0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%200_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[255:224]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 2 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[223:192]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 2 2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%202_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[191:160]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 2 3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%203_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[31:0]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 2 4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%204_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[127:96]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 2 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[95:64]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 2 6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%206_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[63:32]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 2 7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%207_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[31:0]<br>Byte
reversed word of key 2 (See section 5) Writing to this register also
triggers the inverse key generation so this register should be written
to last when writing a key.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 3 0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%200_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[255:224]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 3 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[223:192]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 3 2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%202_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[191:160]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 3 3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%203_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[159:128]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 3 7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%207_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[127:96]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 3 7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%207_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[95:64]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 3 7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0068</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%207_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[63:32]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/Key 3 7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C006C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%207_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[31:0]<br>Byte
reversed word of key 3 (See section 5) Writing to this register also
triggers the inverse key generation so this register should be written
to last when writing a key.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/RX Data In</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C007C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX%20Data%20In_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX Data In_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>RX Data In<br>On a little endian system, data can be copied from a source buffer directly to these write only registers in blocks of 16-bytes.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/TX Data out</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C008C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX%20Data%20out_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX Data out_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>TX Data out<br>On
a little endian system, data can be copied from these read only
registers directly to a destination buffer in blocks of 16-bytes.<br>XTS/CBC Initialisation Vector Low</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/XTS/CBC Initialisation Vector Low</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0090</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('XTS/CBC%20Initialisation%20Vector%20Low_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="XTS/CBC Initialisation Vector Low_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>init_vect_ip<br>Initialisation Vector (bits 31 downto 0).</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/XTS/CBC Initialisation Vector High</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0094</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('XTS/CBC%20Initialisation%20Vector%20High_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="XTS/CBC Initialisation Vector High_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field4</td><td align="center">31:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>init_vect_ip<br>Initialisation Vector (bits 47 downto 32).</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>CIPHER/CORE/NRW BLKS in wide</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x457C0098</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('NRW%20BLKS%20in%20wide_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="NRW BLKS in wide_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field4</td><td align="center">31:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">W</td><td>Reinit wide blks<br>�1� = The CBC IV shall be reinitialized (to utilize the next LBA) on a wide block boundary<br>�0� = The chaining shall occur across the entire data set</td></tr>
<tr><td align="center">Field0</td><td align="center">8:0</td><td align="center">0x20</td><td align="center">R/W</td><td>nrw_blks_in_wide<br>The number of 128 bit narrow blocks in a wide block, default = 2**5 = 32 as 32 * 128 bits = 4096 bits = 512 bytes = 1 sector.</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">VIDEO</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x45800000...0x458FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Video output controller</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('VIDEO_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="VIDEO_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>VIDEO/Control and Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45800000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Video output control and status register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Control%20and%20Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Control and Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Enable</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>Enables video output</td></tr>
<tr><td align="center">Horizontal Sync polarity</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>Controls the polarity of the HSYNC control signnal. Only applies to control signal mode = 0<br>0 = HSYNC is active low<br>1 = HSYNC is active high</td></tr>
<tr><td align="center">Vertical Sync polarity</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>Controls the polarity of the VSYNC control signnal. Only applies to control signal mode = 0<br>0 = VSYNC is active low<br>1 = VSYNC is active high</td></tr>
<tr><td align="center">Control signal mode</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>Selects the type of control signals that are output<br>0=Selects HSYNC &amp; VSYNC outputs<br>1=Pixel Clock &amp; Pixel Valid outputs</td></tr>
<tr><td align="center">Interrupt Enable</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>Enables
frame interrupt output generation. The interrupt is activated when
VSYNC goes active, and cleared when the Frame Base Address register is
written</td></tr>
<tr><td align="center">Video Clock Divider</td><td align="center">11:8</td><td align="center">0x0</td><td align="center">R/W</td><td>Pixel clock is calculated as SYS_CLK / (Video Clock Divider + 1)</td></tr>
<tr><td align="center">Video Data Format</td><td align="center">15:13</td><td align="center">0x0</td><td align="center">R/W</td><td>Format of data in video memory:<br>0 = PALETTE4 16-colour palette mode, 4 bits per pixel. palette index = data[3:0]<br>1 = RGB121 mode, 4 bits per pixel. R=data[3], G=data[2:1], B=data[0]<br>2 = MONO8 256-level greyscale mode, 8 bits per pixel, R=G=B=data[7:0]<br>3 = RGB332 mode, 8 bits per pixel, R=data[7:5], G=data[4:2], B=data[1:0]<br>4 = RGB565 mode, 16 bits per pixel, R=data[15:11], G=data[10:5], B=data[4:0]<br>5 = RGB888 mode, 32 bits per pixel, R=data[23:16], G=data[15:8], B=data[7:0] (NOTE: data[31:24] unused in this mode)</td></tr>
<tr><td align="center">Testmode Select</td><td align="center">22</td><td align="center">0x0</td><td align="center">R/W</td><td>Enables testmode video output:<br>0=Normal operation (use video memory)<br>1=Colour bars testmode</td></tr>
<tr><td align="center">Underrun</td><td align="center">31</td><td align="center">0x0</td><td align="center">R</td><td>Indicates
that an underrun has occured (memory was unable to supply video data
quick enough). This bit is cleared by writing it to zero. NOTE: This
bit cannot be written to a one</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>VIDEO/Frame Base Address</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45800004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Physical address of video frame to display. Writing this register clears any pending frame interrupt</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Frame%20Base%20Address_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Frame Base Address_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Base Address</td><td align="center">31:2</td><td align="center">0x0</td><td align="center">R/W</td><td>Physical address of video frame to display</td></tr>
<tr><td align="center">Must Be Zero</td><td align="center">1:0</td><td align="center">0x0</td><td align="center">R/W</td><td>This field must be zero to align video memory to a 4-byte boundary</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>VIDEO/Frame Size</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45800008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Size of frame to display in bytes</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Frame%20Size_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Frame Size_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Frame Size</td><td align="center">23:0</td><td align="center">0x0</td><td align="center">R/W</td><td>Size of frame to display in bytes</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>VIDEO/Cursor Position</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4580000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>(X,Y) Position of hardware cursor</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Cursor%20Position_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Cursor Position_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">X Position</td><td align="center">27:16</td><td align="center">0x0</td><td align="center">R/W</td><td>X (Measured from left to right) position of hardware cursor in pixels</td></tr>
<tr><td align="center">Y Position</td><td align="center">11:0</td><td align="center">0x0</td><td align="center">R/W</td><td>Y (Measured from top to bottom) position of hardware cursor in pixels</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>VIDEO/Cursor RAM Access</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address Range</b></td><td>0x45801000 to 0x45801FFF</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>1024
32-bit register locations to access the 32x32x2-bit pixel cursor RAM.
Cursor pixel offset from this register is calcultated at ((Y*32)+X) * 4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Cursor%20RAM%20Access_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Cursor RAM Access_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Cursor colour</td><td align="center">1:0</td><td align="center">0x0</td><td align="center">R/W</td><td>2-bit colour value for this pixel<br>0 = Transparent<br>1 = Black<br>2 = Grey<br>3 = White</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>VIDEO/Resolution</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45800010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Width and height of video output display<br>NOTE:
Maximum resolution capability is a function of width,height,refresh
rate,bit-depth,system clock speed,available memory bandwidth, and I/O
cell performance.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Resolution_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Resolution_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Horizontal Resolution</td><td align="center">27:16</td><td align="center">0x0</td><td align="center">R/W</td><td>Width of active video area in pixels</td></tr>
<tr><td align="center">Vertical Resolution</td><td align="center">11:0</td><td align="center">0x0</td><td align="center">R/W</td><td>Height of active video area in pixels</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>VIDEO/Front porch timing</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45800014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Vertical/horizontal
front porch duration in lines/pixels. Front porch relates to the time
immediately after the active video period, and before the sync pulse</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Front%20porch%20timing_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Front porch timing_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Horizontal Front Porch</td><td align="center">27:16</td><td align="center">0x0</td><td align="center">R/W</td><td>Pixel clocks at and of line, before next HSYNC</td></tr>
<tr><td align="center">Vertical Front Porch</td><td align="center">11:0</td><td align="center">0x0</td><td align="center">R/W</td><td>HSYNC pulses (lines) at end of frame, before next VSYNC</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>VIDEO/Sync timing</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45800018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Vertical/horizontal sync pulse duration in lines/pixels</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Sync%20timing_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Sync timing_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Horizontal Sync Duration</td><td align="center">27:16</td><td align="center">0x0</td><td align="center">R/W</td><td>Duration of HSYNC pulse in pixel clocks</td></tr>
<tr><td align="center">Vertical Sync Duration</td><td align="center">11:0</td><td align="center">0x0</td><td align="center">R/W</td><td>Duration of VSYNC pulse in lines</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>VIDEO/Back porch timing</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4580001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Vertical/horizontal
back porch duration in lines/pixels. Back porch relates to the time
immediately after the sync pulse, and before the active video period</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Back%20porch%20timing_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Back porch timing_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Horizontal Back Porch</td><td align="center">27:16</td><td align="center">0x0</td><td align="center">R/W</td><td>Pixel clocks after HSYNC, before active video for new line begins</td></tr>
<tr><td align="center">Vertical Back Porch</td><td align="center">11:0</td><td align="center">0x0</td><td align="center">R/W</td><td>HSYNC Pulses (lines) after VSYNC, before active video for first line of new frame begins</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>VIDEO/Palette RAM Access</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45802000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>16 32-bit register locations to access the 16-colour palette. Each entry is a 16-bit RGB565 colour entry.<br>NOTE:
Becuase green level has an extra bit of resolution, green value for
equivilent intensity is double that of red or blue. E.g. for mid
grey,R,G,B = 16,32,16</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Palette%20RAM%20Access_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Palette RAM Access_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Red</td><td align="center">15:11</td><td align="center">0x0</td><td align="center">R/W</td><td>Red level value (0 to 31)</td></tr>
<tr><td align="center">Green</td><td align="center">10:5</td><td align="center">0x0</td><td align="center">R/W</td><td>Green level value (0 to 63)</td></tr>
<tr><td align="center">Blue</td><td align="center">4:0</td><td align="center">0x0</td><td align="center">R/W</td><td>Blue level value (0 to 31)</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">SATA</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x45900000...0x459FFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">SATA subsystem</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('SATA_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="SATA_blocks" style="display: none;">
<!--AFAIK the link registers are accesible through the host/device PORT registers hence not in the main chip address map.-->

<!--SUBBLOCK,A_HOST_LINK-->

<!--BASE,0x0-->

<!--DESCRIPTION,Host Link Registers for SATA port A (0)-->

<!--#include "sata_link.reg"-->
<br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">A_HOST_PORT</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x45900000...0x458FFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Host Port Registers for SATA port A (0)</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/LINK ASYNC DATA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900070</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds data to be written to the link registers during a posted write or data returned from the link registers following a posted<br>read.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LINK%20ASYNC%20DATA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LINK ASYNC DATA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Quadlet data</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/LINK ASYNC READ ADDRESS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900074</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds byte address from which the contents of the link Data register will be read.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LINK%20ASYNC%20READ%20ADDRESS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LINK ASYNC READ ADDRESS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field6</td><td align="center">31:6</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">5:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Read quadlet address</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/LINK ASYNC WRITE ADDRESS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900078</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds byte address from which the contents of the link Data register will be written.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LINK%20ASYNC%20WRITE%20ADDRESS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LINK ASYNC WRITE ADDRESS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field6</td><td align="center">31:6</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">5:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Write quadlet address</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/LINK ASYNC CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4590007C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>General control bits for asynchronous management of SATA link functions</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LINK%20ASYNC%20CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LINK ASYNC CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">31:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Posted Register Access Done bit (for both reads and writes)<br>SATA Link Core Register Map</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA STATIC CONFIG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>General
static control bits. These bits allow the front end interface bus to be
swapped at a byte level (in case of connectivity mistakes) and includes
bypass controls for debug of major functions such as encoding and
scrambling. The FIFO fill level counter gives a maximum used FIFO
indication to help with system specification. It is put in this
register as it�s read only and the static register is not expected to
be altered dynamically � as its name suggests.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20STATIC%20CONFIG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA STATIC CONFIG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field28</td><td align="center">31:28</td><td align="center">0xA</td><td align="center">R/W</td><td>STATIC_COMWAKE_EXIT_TIMER<br>Host
only. Sets the number of Gen1Dwords counted from the start of a COMWAKE
gap period, that indicates the device has not exited comwake properly.
See bit 25 of this register.</td></tr>
<tr><td align="center">Field27</td><td align="center">27</td><td align="center">0x1</td><td align="center">R/W</td><td>REG_HALT_COMINIT_RETRY<br>Device only.  Stops device re-sending COMINT after 13ms if it fails to see a COMWAKE in time</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">R/W</td><td>REG_INIT_RESUME<br>Device
only. Allows phy to resume interface after device initialisation fails
when Aligns stop � causes it to exit DR_ERROR state and move to
DR_COMWAKE state.</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_FRC_EXIT_COMWAKE_NICE<br>Host
only. Workaround for COMWAKE problem. If device doesn�t hold i/f
quiescent for &gt;175ns on completion of COMWAKE sequence, we�ll not
exit to hunt align primitives. Setting this bit forces us to exit
detecting COMWAKE by counting a number of Gen1 Dwords (see
STATIC_COMWAKE_EXIT_TIMER) after the LAST noted start of a COMWAKE gap
period. Hence if we don�t see another COMWAKE, the state machine is
forced to advance.</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_FRC_EXIT_COMWAKE_NASTY<br>Host
only. Workaround for COMWAKE problem. If device doesn�t hold i/f
quiescent for &gt;175ns on completion of COMWAKE sequence, we�ll not
exit to hunt align primitives. Setting this bit forces us to exit
detecting COMWAKE after we�ve counted 4, before it actually finishes.
We then look for aligns and transmit D10.2 Dial tone (before we
should?).</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x1</td><td align="center">R/W</td><td>STATIC_ALWAYS_HUNT<br>When set, hunt ALIGNs will always be set, so if we come out of alignment the link should automatically re-align.</td></tr>
<tr><td align="center">Field16</td><td align="center">21:16</td><td align="center">0x28</td><td align="center">R/W</td><td>REG_STATIC_RX_FIFO_THRESHOLD<br>Rx
FIFO fill threshold � This value sets the number of quadlets of space
left in the FIFO and indicates the point at which the Link core will
start issuing HOLD on the bus. E.g. Default set to 40 gives us 40
quadlets of time to flow control the traffic from the device. The
minimum on the bus is 20 + our internal delay of about 13 quadlets.</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">0x1</td><td align="center">R/W</td><td>USE_PM_EXIT_TIMER<br>Power
management. Means phy init state machine will wait for the phy to be
ready to communicate (by timing 2us from partial and 20us from slumber)
before exiting the HR_SLUMBER power management state</td></tr>
<tr><td align="center">Field8</td><td align="center">14:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>RX_FIFO_MAX_LEVEL<br>A
running indicator or the current maximum fill level reached in the rx
FIFO since the last time this register was read. Gives fill level in
number of quadlets. Self clearing when read.</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_CONT_ALIGN_EXIT<br>Causes
CONT function to exit every time ALIGN pairs are transmitted, and
re-enter after ALIGNs complete. This will make debug of traces easier
as long blocks of CONT with no discernable starting primitive will not
be generated. By default it�s off, so functionality is identical to 921
until software enables it.</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x1</td><td align="center">R/W</td><td>STATIC_LONG_HUNT_ALIGN<br>Host
only. Hunt Align control during Phy Initialisation is extended until we
have sent aligns and received three non-align primitives. Counters
situations where a shift in alignment occurs from the device after it
has transmitted its own Align sequence.</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_BYPASS_DSCR<br>Receive data passes the de-scrambler unchanged</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_BYPASS_SCR<br>Transmit data passes the scrambler unchanged</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x1</td><td align="center">R/W</td><td>STATIC_DISABLE_CONT<br>CONT primitive capability is disabled for transmitting repeating primitives.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_BYPASS_DECODER<br>Receive data passes the decoder unchanged</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_BYPASS_ENCODER<br>Transmit data passes the encoder unchanged</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">R/W</td><td>STATIC_BIT_SWAP<br>Bit
swap for 10-bit encoded bytes passed between the phy and the link
encoder/decoder blocks. All 10 bits are swapped but the byte locations
are unchanged.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA PHY CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Allows software control of phy initialisation.  This includes suspending the interface if no device is detected.<br>Reports various debug and functional indications from the phy.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20PHY%20CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA PHY CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">0x32</td><td align="center">R/W</td><td>STATIC_COMWAKE_EXT<br>Device
only. Defines the overall COMWAKE period for the device mode, so that
the exit quiescent period may be controlled. Default should lead to
213.3ns last COMWAKE (exit is defined as 175ns &lt; CW &lt; 228.3ns)</td></tr>
<tr><td align="center">Field23</td><td align="center">24:23</td><td align="center">&nbsp;</td><td align="center">R</td><td>DEBUG_DW_ASS<br>Indicates
which alignment state was chosen � number between 0 and 3 indicates
which byte in the incoming dword contained the K-character before
re-alignment.</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">R</td><td>WAKEUP_FROM_PHY<br>Indicates that exiting Power Management was initiated by the phy, on reception of COMWAKE.</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">R</td><td>HOST<br>If set, this interface is HOST, else it�s DEVICE.</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">R</td><td>PHY_READY<br>Indicates level of phy ready signal</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">R</td><td>DET_COMINIT<br>Indicates COMINIT OOB signal is detected</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">R</td><td>DET_COMWAKE<br>Indicates COMWAKE OOB signal is detected</td></tr>
<tr><td align="center">Field6</td><td align="center">16:6</td><td align="center">0x5DC</td><td align="center">R/W</td><td>PHY_RECOVERY_TIME<br>Counts
period during which phy is unable to receive incoming traffic as it is
mid speed-change. This is a variable amount, but is 10us max. Default
is 1500d � 10us at 150MHz system clock. The counter runs in the system
clock domain.</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>FER_LOOPBACK<br>Far
End Retime loopback. Asserting this bit enables our far end loopback
facility. This bit is cleared when Phy Ready is lost, (e.g. on
reception of COMRESET or COMINIT) resulting in exit from BIST Loopback
mode.</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>HALT_SEND_ALIGNS<br>Host
only. Stops the core re-trying initialisation once there have been no
non-aligns detected. Normally the host will re-try indefinitely, unless
this bit is asserted</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>HALT_DET_ALIGNS<br>Host
only. Stops the core re-trying initialisation once there have been no
aligns detected after 880us, at the slowest speed grade. Normally the
host will re-try indefinitely, unless this bit is asserted.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>PHY_ASR<br>Host
function: Asynchronous reset capability. Allows us to respond to
COMINIT by asserting COMRESET. This ensures hot-plug robustness.<br>Device
function: Allows automatic re-transmission of COMINIT after &gt; 10ms
elapsed. If the bus interface is dropped, the device port will wait 10
ms before trying to reconnect with COMINIT. Use in conjunction with
SATA_STATIC_CONFIG register, bit 27.</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>Reserved  PHY_RESET_HOLD (This is NOT connected any more, but present in some code)</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA ERR SRC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reports
errors detected from the phy and link layers. This register is cleared
bitwise by writing a zero to the appropriate location. Writing to these
locations only clears the values. They can only be set by the Link
Layer. These errors are used to generate the Link layer interrupt. Some
are also used to increment the phy error counter. This counts
consecutive errors and is used to force an interface reset should too
many occur. Errors may be masked bit-wise using SATA_IRQMSK register.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20ERR%20SRC_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA ERR SRC_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field10</td><td align="center">29:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_UNEX_SOF_ERROR<br>SOF primitive arrives but we are in IDLE state and not expecting it.</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_SOF_ERROR<br>SOF
transition error in the Link. Link was in R_RDY and failed to get SOF
from the device. Frame is lost. This error must be enabled using
static_escpae_rxd_sof_err bit in the SATA LINK CTRL register.</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_FIFO_OVERRUN<br>Rx
FIFO has over-run. Indication set when the threshold level is set too
low and Link flow control hasn�t worked. This is set when there is no
space in the FIFO. It may be coincident with an error indication,
unless the FIFO is exactly filled with the last quadlet of data.</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R/W</td><td>PHY_READY_EVENT<br>Phy Ready event detected.  Indicates any change in phy ready.  Report persists until explicitly cleared in the register</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>DET_COMINIT_EVENT<br>COMINIT event detected.  Report persists until explicitly cleared in the register.</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>DET_COMWAKE_EVENT<br>COMWAKE event detected.  Report persists until explicitly cleared in the register</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_PRIM_ERROR<br>Incorrect primitive discovered in the de-scrambler</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_ALIGN_ERROR<br>Alignment error.  This may be set during initialisation.</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_DIS_ERROR<br>Link decode disparity error.  This may be set during initialisation.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_VIO_ERROR<br>Link decode violation.  Incorrect codeword.</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_ERR<br>Phy asserts rxerror indicating elasticity buffer overflow</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_LOCK_ERR<br>Phy cannot lock on incoming signal, or signal level�s too low</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA ERR GATE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4590000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Gates
various error bits into the phy error counter. If set, an individual
error will add to the phy error count. If all are cleared then no
errors are registered and the internal phy error counter will never
advance. The phy error count indicates the acceptable number of
consecutive phy errors that will automatically force a reset interface.
The error count will only advance by one per clock cycle, irrespective
of how many simultaneous errors occur.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20ERR%20GATE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA ERR GATE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field20</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">19:16</td><td align="center">0x3</td><td align="center">R/W</td><td>gate_phy_err_count<br>Number
of error bits counted on phy_err using the above gated error indicators
that will result in an interface reset. Seeing any enabled errors
consecutively in any combination over the maximum number set by this
field will cause an interface reset.. Eg. If a bit is gated in and
three of those type of error occur, the phy initialisation state
machine will automatically reset the interface.</td></tr>
<tr><td align="center">Field6</td><td align="center">15:6</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_prim_error<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_align_error<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_dis_error<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_vio_error<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_err<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_lock_err<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA IRQ MSK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The
SATA core will generate an interrupt signal on some events or errors.
These are able to be masked (masked by default) and only activate the
interrupt line when not masked. Each bit in this register is a
corresponding Interrupt mask for a relevant bit in the SATA ERR SRC
register.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20IRQ%20MSK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA IRQ MSK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field12</td><td align="center">31:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_unex_sof_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_sof_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_fifo_overrun<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_phy_ready_event<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_det_cominit_event<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_det_comwake_event<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_prim_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_align_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_dis_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_vio_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_err<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_lock_err<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA LINK CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Register controlling Link layer specific functions.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20LINK%20CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA LINK CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field28</td><td align="center">31:28</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field27</td><td align="center">27</td><td align="center">0x0</td><td align="center">R/W</td><td>reg_filter_rxd_lock_i<br>Enables
filtering for Silicon Image sourced rxd_lock signal. This signal is
prone to drop during high frequency 3G patterns, but always re-asserts
after reception of ALIGN characters. The filter simply counts &gt; time
between ALIGN charaters before allowing rxd_lock to be de-asserted
locally.</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">R/W</td><td>reg_filter_sig_valid_i<br>Enables
filtering for Silicon Image sourced sig_valid signal. This signal is
prone to drop during high frequency 3G patterns, but always re-asserts
after reception of ALIGN characters. The filter simply counts &gt; time
between ALIGN charaters before allowing sig_valid to be de-asserted
locally.</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">R/W</td><td>always_allow_spm_pm<br>Usually
Software Power Management (spm) power management cannot assert a PM
request from the host link until a signature FIS is received. Asserting
this bit will allow software to control power management at any time.</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x1</td><td align="center">R/W</td><td>enable_tl_pm<br>Usually
set � allows TL to initiate PM request. If cleared, PM will still be
possible using software SControl register and when device initiated.</td></tr>
<tr><td align="center">Field22</td><td align="center">30:22</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reserved</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">R/W</td><td>reg_rrdy_holdoff<br>When
set, prevents rx state machine issuing R_RDY in response to X_RDY from
the host. This allows our device port to always send a packet. Useful
for sending Signature FISes before receiving an SRST from the host, or
for controlling the bus during HID applications.</td></tr>
<tr><td align="center">Field15</td><td align="center">23:15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reserved</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">0x0</td><td align="center">W</td><td>force_rx_fis_ack<br>Writing
a �1� to this bit will force the rx_fis_ack handshaking signal in the
SATA Link to �0� � effectively clearing it. This will be useful for
workaround cases if the handshaking with the TL gets stuck. This is a
one-shot operation and clearing the signal will not prevent it being
reset again immediately, if the stimulus is present.</td></tr>
<tr><td align="center">Field4</td><td align="center">13:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>rx_corrupt_data<br>Enables
the link to corrupt the 15th DATA QUAD (with 'CAFBABEx' where x is the
port number) of the next FIS to be transmitted. The CRC will relate to
the original data and therefore be incorrect.<br>The bit is self-clearing once the corrupt quad has been sent.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>tx_corrupt_data<br>Enables
the link to corrupt the 15th DATA QUAD (with 'BADCODEx' where x is the
port number) of the next FIS to be transmitted. The CRC will relate to
the original data and therefore be incorrect.<br>The bit is self-clearing once the corrupt quad has been sent.</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>tx_corrupt_crc_enable<br>Enables
the link to send a corrupt crc value when indicated to do so by the crc
flag being set at the end of transmission of the current FIS
(co-incident with the eof flag). Use in conjunction with Transport
Layer registers.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">R/W</td><td>static_escape_rxd_sof_err<br>Enables
the rxd_sof_error function to work. If disabled, the main state will
exit directly to IDLE rather than SYNC_ESCAPE and there will be no
error notification.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA PHY STATE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Allows software to read the current state of the phy initialisation state machine.<br>By
asserting the phy_force_active bit after setting the value of a desired
state, this register may be used to force the phy state machine into
any state. This is only intended to be a last resort in the face of an
unrecoverable state transition.<br>Note: the Phy States differ between Host and Device modes</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20PHY%20STATE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA PHY STATE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">W</td><td>phy_force_active<br>Force Phy Init SM into state written to bits in phy_force_state</td></tr>
<tr><td align="center">Field20</td><td align="center">23:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">19:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>phy_force_state<br>State into which Phy Init SM is forced when phy_force_active bit is set.</td></tr>
<tr><td align="center">Field4</td><td align="center">15:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>phy_state<br>Current state of the Phy Init state machine<br>Host States are:<br>'0000' = HR_RESET<br>'0001' = HR_AWAIT_COMINIT<br>'0010' = HR_AWAIT_NO_COMINIT<br>'0011' = HR_COMWAKE<br>'0100' = HR_AWAIT_COMWAKE<br>'0101' = HR_AWAIT_NO_COMWAKE<br>'0110' = HR_AWAIT_ALIGN<br>'0111' = HR_ADJUST_SPEED<br>'1000' = HR_SEND_ALIGN<br>'1001' = HR_READY<br>'1010' = HR_PARTIAL<br>'1011' = HR_SLUMBER<br>'1100' = HR_INIT_ERROR<br>'1101' = HR_DUMMY2<br>'1110' = HR_CALIBRATE (unused)<br>'1111' = HR_DUMMY<br>Device states are:<br>'0000' = DR_RESET<br>'0001' = DR_COMINIT<br>'0010' = DR_AWAIT_COMWAKE<br>'0011' = DR_AWAIT_NO_COMWAKE<br>'0100' = DR_COMWAKE<br>'0101' = DR_SEND_ALIGN<br>'0110' = DR_READY<br>'0111' = DR_PARTIAL<br>'1000' = DR_SLUMBER<br>'1001' = DR_REDUCE_SPEED<br>'1010' = DR_ERROR<br>'1011' = DR_CALIBRATE (unused)<br>'1100' = DR_DUMMY12<br>'1101' = DR_DUMMY13<br>'1110' = DR_DUMMY14<br>'1111' = DR_DUMMY15</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA LINK STATE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4590001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Allows software to read the current state of the Link layer main state machine.<br>By
asserting the correct bit and setting the value of a desired state,
this register may be used to force the main state machine into any
state. This is only intended to be a last resort in the face of an
unrecoverable state transition.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20LINK%20STATE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA LINK STATE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">W</td><td>link_force_active<br>Force Link Main SM into state written to bits in link_force_state</td></tr>
<tr><td align="center">Field21</td><td align="center">23:21</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">20:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>link_force_state<br>State into which Link Main SM is forced when link_force_active bit is set.</td></tr>
<tr><td align="center">Field5</td><td align="center">15:5</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">4:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>link_state<br>Current state of the Link Main state machine.<br>States are:<br>'10000' = MS_HOLD<br>'10001' = MS_NO_PMNAK<br>'10010' = MS_SEND_HOLDA<br>'10011' = MS_RCV_EOF<br>'10100' = MS_GOOD_CRC<br>'10101' = MS_GOOD_END<br>'10110' = MS_BAD_END<br>'10111' = MS_PM_PARTIAL<br>'11000' = MS_PM_SLUMBER<br>'11001' = MS_PM_OFF<br>'11010' = MS_PM_DENY<br>'11011' = MS_CHK_PHY_RDY<br>'11100' = MS_NO_COMM_POWER<br>'11101' = MS_WAKEUP_1<br>'11110' = MS_WAKEUP_2<br>'11111' = MS_SYNC_ESCAPE<br>'00000' = MS_RESET<br>'00001' = MS_IDLE<br>'00010' = MS_NO_COMM_ERR<br>'00011' = MS_NO_COMM<br>'00100' = MS_SEND_ALIGN<br>'00101' = MS_SEND_CHK_RDY<br>'00110' = MS_SEND_SOF<br>'00111' = MS_SEND_DATA<br>'01000' = MS_RCVR_HOLD<br>'01001' = MS_SEND_HOLD<br>'01010' = MS_SEND_CRC<br>'01011' = MS_SEND_EOF<br>'01100' = MS_WAIT_WTRM<br>'01101' = MS_RCV_CHK_RDY<br>'01110' = MS_RCV_WAIT_FIFO<br>'01111' = MS_RCV_DATA</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA SSTATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Read only register conveys current interface state. As per the SStatus register detailed in SATA 1.0a 10.1.1.<br>This register is continuously updated.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SSTATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SSTATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field12</td><td align="center">31:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>sstatus_ipm<br>Indicates current interface power management state.<br>'0000' = Device not present or comms not established.  Reported until the comms<br>are established(ie while DET '0000' or '0001').<br>'0001' = Interface active<br>'0010' = Interface in PARTIAL PM state.  This instruction originates from either the<br>host or device.<br>'0110' = Interface in SLUMBER PM state.  This instruction originates from either the<br>host or device.</td></tr>
<tr><td align="center">Field4</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>sstatus_spd<br>Indicates the negotiated interface speed.<br>'0000' = No negotiated speed  - because device not present or comms not<br>established (ie DET '0000' or '0001')<br>'0001' = Gen1 rate 1.5Gbps<br>'0010' = Gen2 rate 3.0Gbps</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>sstatus_det<br>Reports interface device detection and Phy state.<br>'0000'
= No device detected and phy communication not established. Note that
this not the case under Power Management, when the report will be
0x0001. The IPM field may also be checked to determine whether PM is
the reason for no comms.<br>'0001' = Device present but phy
communication not established. This report also occurs during a Power
Management phase. To determine whether communication is incomplete due
to Power Management, see the IPM field. Note that this report will be
incorrect if, during Power Management, the device is removed without
notice. In this case 1h will persist in this field, although the actual
value should be 0h. There is no way for hardware to detect such an
event unless side-band signals are used.<br>'0011' = Device presence
detected and phy communication established. This is the normal level
when the interface is working, post initialisation.<br>'0100' = Offline due to interface being disabled or running BIST loopback</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA SERROR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Supplemental
error information in addition to that reported in the shadow registers.
This register accumulates all notifications since the last time it was
cleared. Errors are indicated in the lower two bytes of the register
and are broken down into recoverable and non-recoverable. The upper two
bytes store diagnostic error notifications. Each of these error
conditions can alert software directly by asserting the error bit in
the shadow registers, but only if not masked (see below). As per the
SError register detailed in SATA 1.0a 10.1.2.<br>Note, these registers
bits are always set every time a corresponding error is detected. They
cannot be masked using register 11 (SATA ERROR MASK). The errors are
cumulative and are only cleared by software. In order to clear a bit,
software must write a �1� to the correct location.<br>Writing to these locations only clears the values.  They can only be set by the Link Layer or Transport Layer.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SERROR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SERROR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_X<br>Diagnostic error. X = Detection of a COMINIT event.</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_F<br>Diagnostic error. F = Unrecognised FIS type.  Type error indicated from the transport layer.</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_T<br>Diagnostic error. T = Transport state transition error.</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_S<br>Diagnostic
error. S = Link sequence error. This is caused by either no SOF
primitive when the link is waiting for on, or an unexpected SOF
primitive. These count as invalid state transitions.</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_H<br>Diagnostic
error. H = Handshake error. R_ERR (one or more) received in response to
a frame transmission. Maybe as a result of the device seeing C, D or B
errors itself.</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_C<br>Diagnostic error. C = CRC error (one or more) occurred. This is crc_rx_error</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_D<br>Diagnostic error. D = Disparity error (one or more) in the received frame.  This is rxd_dis_error</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_B<br>Diagnostic error. B = 10b8b decoding error (one or more) in the received frame.  This is rxd_vio_error</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_W<br>Diagnostic error. W = Detection of a COMWAKE event</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_I<br>Diagnostic error.  I = Phy Internal Error.<br>During
initialisation this will be caused by an OOB signal sequencing error.
Once the initialisation is complete, this error will be due to the phy
asserting either RXERR_E or O if there�s an elasticity buffer over-flow
or de-assertion of RXLOCK_E or O if byte lock / signal levels are lost.</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_N<br>Diagnostic error. N = change in PhyReady.  This will probably be coincident with the Error_M or C indications.</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_E<br>Non-recoverable
error. E = Internal error. Maybe a state transition error. Software
must reset the interface and retry the command. If this problem
persists there may be a design incompatibility. The bit is set in
response to:<br>Decode violation error (vio_error) (also in DIAG_B),
Disparity error (dis_error) (also in DIAG_D), Alignment error
(align_error), Primitive error (prim_error), Rx Fifo overrun error
(fifo_overrun), Transport layer internal error (tl_internal_err)</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_P<br>Non-recoverable
error. P = Protocol error such as badly formed or invalid FIS. May be
caused by invalid state transitions. Software must reset the interface
and retry the command � but first check the diag_F bit to see if it�s
simply a FIS type error. If this problem persists there may be a design
incompatibility.</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_C<br>Non-recoverable
error. C = Communications error (such as M) but for a non-retry-able
FIS. Device may have been removed. No software retry required.</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_T<br>Non-recoverable error. T = Transient data integrity error (such as I) but for a non-retry-able FIS.  Software retry required.</td></tr>
<tr><td align="center">Field2</td><td align="center">7:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_M<br>Recoverable
error. M = Communications error. Such as a momentary loss of
communication with the device. Probably caused by rapid disconnection +
reconnection or by a dodgy cable or connection. The transaction
succeeded so no software intervention is needed, but the error should
be tracked as a possible link speed downgrade may be suitable.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_I<br>Recoverable
error. I = Data integrity error. Such as CRC or disparity error on a
retry-able FIS. Probably caused by noise or voltage fluctuations. The
transaction succeeded so no software intervention is needed, but the
error should be tracked as a possible link speed downgrade may be
suitable.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA SCONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interface
control register that slows software to adjust interface capabilities.
Reads will return the last value written. As per the SControl register
detailed in SATA 1.0a 10.1.3.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SCONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SCONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field20</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">19:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>scontrol_pmp<br>Unused � pmp field defined in TL</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">RW</td><td>scontrol_spm<br>SPM
filed. Allows software to force the phy into a power management state.
For this to work, power management must be enabled in the IPM field. It
is not necessary for the slumber or partial signals to be set in the
Transport Layer and the software assertion will override these signals.
When power management is entered using the SPM field, the only way to
exit is for software to assert SPM wakeup, or for the remote phy to
send COMWAKE.<br>Host function: This will only work once the Signature
FIS is received, unless always_allow_spm_pm bit is set in
SATA_LINK_CTRL register.<br>'0001' = Enter PARTIAL mode<br>'0010' = Enter SLUMBMER mode<br>'0100' = Force WAKEUP<br>Write
any other pattern to this field and it will be interpreted as 0000. The
field may be cleared if desired and if the power management state has
not been entered.<br>This field will always return 0000 when read.</td></tr>
<tr><td align="center">Field8</td><td align="center">11:8</td><td align="center">0x3</td><td align="center">RW</td><td>scontrol_ipm<br>IPM
field. Allows various Power Management states to be enabled. Note that
this is not the same as actually invoking these PM states as this is
handled directly by hardware and is not a software function � these
merely indicate whether hardware�s allowed to use PM (initiated from
either the host or device). Default is to disable PM features.<br>Device function:  IPM is automatically disabled on reception of COMRESET<br>'0000' = No PM restrictions.  PARTIAL and SLUMBER allowed.<br>'0001' = PARTIAL disabled<br>'0010' = SLUMBER disabled.<br>'0011' = PARTIAL &amp; SLUMBER disabled.</td></tr>
<tr><td align="center">Field4</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">RW</td><td>scontrol_spd<br>SPD field.  Sets the highest communication speed the interface is allowed to negotiate.<br>'0000' = No restrictions.  Currently only Gen1 anyway<br>'0001' = Gen1 maximum.<br>'0010' = Gen2 maximum</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">0x4</td><td align="center">RW</td><td>scontrol_det<br>DET
field. Controls the interface detection and initialisation sequences.
On power reset, this register will have a value of 4h � the interface
is completely disabled. Software may then take time to organise itself
and setup the hardware. When ready, software must move the SATA
interface into reset mode by writing 1h to this field. To begin
interface initialisation, software must subsequently write 0h to this
field at its leisure (there is no time delay required between setting
and clearing the reset state). Note that should software need to reset
the SATA interface at any point during normal operation, it can do so
by writing 1h followed by 0h to this field.<br>0000 = No device
detection or initialisation requested � interface will continue running
normally if it was doing so before. Software_ready flag is set.
Phy_reset_active flag is cleared.<br>0001 = Hard reset. This sets the
phy_reset_active flag. Forces the phy state machine into RESET.
Interface will re-initialise. The interface will stay in the RESET
state until this bit is cleared. Host: sends COMRESET indefinitely.
Device: Does nothing. Will jump to sending COMINIT once bit cleared
(and no COMRESET detected on the bus)<br>0100 = Disable interface and
put phy offline . This clears the software_ready flag. When coming out
of reset the SATA core will by default make no communication, with
txp/n lines held quiescent, even if there�s an attached device.
Software must write to clear this bit to enable communications</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA SERR MASK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4590002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>When
this bit is set, the error associated with the same bit in register 9
(SATA ERROR) will be masked when asserting the SERROR_NOTIFY signal to
the Transport Layer � it will not cause the STATUS register ERROR bit
to be set.<br>The error will still be recorded in SATA_SERROR register, regardless of whether this bit is set.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SERR%20MASK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SERR MASK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_X<br>Masks diagnostic error serror_diag_X</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_F<br>Masks diagnostic error serror_diag_F</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_T<br>Masks diagnostic error serror_diag_T</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_S<br>Masks diagnostic error serror_diag_S</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_H<br>Masks diagnostic error serror_diag_H</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_C<br>Masks diagnostic error serror_diag_C</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_D<br>Masks diagnostic error serror_diag_D</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_B<br>Masks diagnostic error serror_diag_B</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_W<br>Masks diagnostic error serror_diag_W</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_I<br>Masks diagnostic error serror_diag_I</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_N<br>Masks diagnostic error serror_diag_N</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_err_E<br>Masks unrecoverable error serror_err_E</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_err_P<br>Masks unrecoverable error serror_err_P</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_err_C<br>Masks unrecoverable error serror_err_C</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_err_T<br>Masks unrecoverable error serror_err_T</td></tr>
<tr><td align="center">Field2</td><td align="center">7:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_err_M<br>Masks recoverable error serror_err_M</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">RW</td><td>serror_mask_err_I<br>Masks recoverable error serror_err_I</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA OOB Timing</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Allows
OOB timing changes incase of incompatibility. Min &amp; max timings for
COMINIT and COMWAKE may be controlled. These parameters affect the
duration of the OOB gap only. This should be done with caution as the
timings are intended to be correct to the specification for a 75MHz RBC
clock. Faster clocks should improve the margins, but the timings will
need re-calculation.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20OOB%20Timing_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA OOB Timing_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field30</td><td align="center">31:30</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">0xD</td><td align="center">RW</td><td>static_comwake_max</td></tr>
<tr><td align="center">Field22</td><td align="center">23:22</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">21:16</td><td align="center">0x3</td><td align="center">RW</td><td>static_comwake_min</td></tr>
<tr><td align="center">Field14</td><td align="center">15:14</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">13:8</td><td align="center">0x27</td><td align="center">RW</td><td>static_cominit_max</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">5:0</td><td align="center">0xC</td><td align="center">RW</td><td>static_cominit_min</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA SERROR IRQMSK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>When
this bit is set, the error associated with the same bit in register 9
(SATA ERROR) will be masked when asserting the SERROR_IRQ signal to the
Top Level. This signal is re-timed into the APB clock domain and may be
used by software to detect hot plug with DIAG_X, or any other error. By
default, nothing is masked.<br>The error will still be recorded in SATA_SERROR register regardless of whether this bit is set.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SERROR%20IRQMSK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SERROR IRQMSK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_X<br>Masks from interrupt diagnostic error serror_diag_X</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_F<br>Masks from interrupt diagnostic error serror_diag_F</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_T<br>Masks from interrupt diagnostic error serror_diag_T</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_S<br>Masks from interrupt diagnostic error serror_diag_S</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_H<br>Masks from interrupt diagnostic error serror_diag_H</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_C<br>Masks from interrupt diagnostic error serror_diag_C</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_D<br>Masks from interrupt diagnostic error serror_diag_D</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_B<br>Masks from interrupt diagnostic error serror_diag_B</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_W<br>Masks from interrupt diagnostic error serror_diag_W</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_I<br>Mask from interrupt s diagnostic error serror_diag_I</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_N<br>Masks from interrupt diagnostic error serror_diag_N</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_err_E<br>Masks from interrupt unrecoverable error serror_err_E</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_err_P<br>Mask from interrupt s unrecoverable error serror_err_P</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_err_C<br>Masks from interrupt unrecoverable error serror_err_C</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_err_T<br>Masks from interrupt unrecoverable error serror_err_T</td></tr>
<tr><td align="center">Field2</td><td align="center">7:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_err_M<br>Masks from interrupt recoverable error serror_err_M</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ismk_err_I<br>Masks from interrupt recoverable error serror_err_I</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA SERROR PM MASK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>When
this bit is set, the error associated with the same bit in the SATA
ERROR register will not be set if the error is generated during a power
management phase. This prevents errors stalling software, which would
normally be cleared on POR, but cannot be managed fast enough during PM
cycling. By default, all errors are masked during PM.<br>Rather than masking errors that have been recorded, these masks prevent the error from being recorded in the first place.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SERROR%20PM%20MASK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SERROR PM MASK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_X<br>Masks from interrupt diagnostic error serror_diag_X</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_F<br>Masks from interrupt diagnostic error serror_diag_F</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_T<br>Masks from interrupt diagnostic error serror_diag_T</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_S<br>Masks from interrupt diagnostic error serror_diag_S</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_H<br>Masks from interrupt diagnostic error serror_diag_H</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_C<br>Masks during PM diagnostic error serror_diag_C</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_D<br>Masks during PM diagnostic error serror_diag_D</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_B<br>Masks during PM diagnostic error serror_diag_B</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_W<br>Masks during PM diagnostic error serror_diag_W</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_I<br>Masks during PM diagnostic error serror_diag_I</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_N<br>Masks during PM diagnostic error serror_diag_N</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_E<br>Masks during PM unrecoverable error serror_err_E</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_P<br>Masks during PM unrecoverable error serror_err_P</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_C<br>Masks during PM unrecoverable error serror_err_C</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_T<br>Masks during PM unrecoverable error serror_err_T</td></tr>
<tr><td align="center">Field2</td><td align="center">7:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_M<br>Masks during PM recoverable error serror_err_M</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_I<br>Masks during PM recoverable error serror_err_I</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA PHY CFG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4590003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Fill in here with new SYNOPSYS PHY CONFIG</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20PHY%20CFG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA PHY CFG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field28</td><td align="center">31:28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA BIST PATTERN 0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Received
BIST FIS with transmit pattern generation bits set (bits T and S).
Software writes the pattern held in quadlet 1 to this register. This
register is used in conjunction with SATA_BIST_PATTER_1 and must be
written first.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20BIST%20PATTERN%200_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA BIST PATTERN 0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>txd_bist_pattern_0<br>Table 18 � SATA BIST Pattern 0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/A_HOST_PORT/SATA BIST PATTERN 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45900044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Received
BIST FIS with transmit pattern generation bits set (bits T and S).
Software writes the pattern held in quadlet 2 to this register. This
register is the second of the pair to be written. Upon writing the BIST
pattern into this register, BIST transmit pattern generation will be
triggered. The data is transmitted encoded but not scrambled.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20BIST%20PATTERN%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA BIST PATTERN 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<!--AFAIK the link registers are accesible through the host/device PORT registers hence not in the main chip address map.-->

<!--SUBBLOCK,B_HOST_LINK-->

<!--BASE,0x10000-->

<!--DESCRIPTION,Host Link Registers for SATA port B (1)-->

<!--#include "sata_link.reg"-->

<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>txd_bist_pattern_1</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">B_HOST_PORT</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x45910000...0x4590FFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Host Port Registers for SATA port B (1)</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/LINK ASYNC DATA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910070</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds data to be written to the link registers during a posted write or data returned from the link registers following a posted<br>read.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LINK%20ASYNC%20DATA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LINK ASYNC DATA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Quadlet data</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/LINK ASYNC READ ADDRESS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910074</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds byte address from which the contents of the link Data register will be read.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LINK%20ASYNC%20READ%20ADDRESS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LINK ASYNC READ ADDRESS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field6</td><td align="center">31:6</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">5:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Read quadlet address</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/LINK ASYNC WRITE ADDRESS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910078</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds byte address from which the contents of the link Data register will be written.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LINK%20ASYNC%20WRITE%20ADDRESS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LINK ASYNC WRITE ADDRESS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field6</td><td align="center">31:6</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">5:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Write quadlet address</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/LINK ASYNC CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4591007C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>General control bits for asynchronous management of SATA link functions</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LINK%20ASYNC%20CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LINK ASYNC CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">31:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Posted Register Access Done bit (for both reads and writes)<br>SATA Link Core Register Map</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA STATIC CONFIG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>General
static control bits. These bits allow the front end interface bus to be
swapped at a byte level (in case of connectivity mistakes) and includes
bypass controls for debug of major functions such as encoding and
scrambling. The FIFO fill level counter gives a maximum used FIFO
indication to help with system specification. It is put in this
register as it�s read only and the static register is not expected to
be altered dynamically � as its name suggests.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20STATIC%20CONFIG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA STATIC CONFIG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field28</td><td align="center">31:28</td><td align="center">0xA</td><td align="center">R/W</td><td>STATIC_COMWAKE_EXIT_TIMER<br>Host
only. Sets the number of Gen1Dwords counted from the start of a COMWAKE
gap period, that indicates the device has not exited comwake properly.
See bit 25 of this register.</td></tr>
<tr><td align="center">Field27</td><td align="center">27</td><td align="center">0x1</td><td align="center">R/W</td><td>REG_HALT_COMINIT_RETRY<br>Device only.  Stops device re-sending COMINT after 13ms if it fails to see a COMWAKE in time</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">R/W</td><td>REG_INIT_RESUME<br>Device
only. Allows phy to resume interface after device initialisation fails
when Aligns stop � causes it to exit DR_ERROR state and move to
DR_COMWAKE state.</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_FRC_EXIT_COMWAKE_NICE<br>Host
only. Workaround for COMWAKE problem. If device doesn�t hold i/f
quiescent for &gt;175ns on completion of COMWAKE sequence, we�ll not
exit to hunt align primitives. Setting this bit forces us to exit
detecting COMWAKE by counting a number of Gen1 Dwords (see
STATIC_COMWAKE_EXIT_TIMER) after the LAST noted start of a COMWAKE gap
period. Hence if we don�t see another COMWAKE, the state machine is
forced to advance.</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_FRC_EXIT_COMWAKE_NASTY<br>Host
only. Workaround for COMWAKE problem. If device doesn�t hold i/f
quiescent for &gt;175ns on completion of COMWAKE sequence, we�ll not
exit to hunt align primitives. Setting this bit forces us to exit
detecting COMWAKE after we�ve counted 4, before it actually finishes.
We then look for aligns and transmit D10.2 Dial tone (before we
should?).</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x1</td><td align="center">R/W</td><td>STATIC_ALWAYS_HUNT<br>When set, hunt ALIGNs will always be set, so if we come out of alignment the link should automatically re-align.</td></tr>
<tr><td align="center">Field16</td><td align="center">21:16</td><td align="center">0x28</td><td align="center">R/W</td><td>REG_STATIC_RX_FIFO_THRESHOLD<br>Rx
FIFO fill threshold � This value sets the number of quadlets of space
left in the FIFO and indicates the point at which the Link core will
start issuing HOLD on the bus. E.g. Default set to 40 gives us 40
quadlets of time to flow control the traffic from the device. The
minimum on the bus is 20 + our internal delay of about 13 quadlets.</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">0x1</td><td align="center">R/W</td><td>USE_PM_EXIT_TIMER<br>Power
management. Means phy init state machine will wait for the phy to be
ready to communicate (by timing 2us from partial and 20us from slumber)
before exiting the HR_SLUMBER power management state</td></tr>
<tr><td align="center">Field8</td><td align="center">14:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>RX_FIFO_MAX_LEVEL<br>A
running indicator or the current maximum fill level reached in the rx
FIFO since the last time this register was read. Gives fill level in
number of quadlets. Self clearing when read.</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_CONT_ALIGN_EXIT<br>Causes
CONT function to exit every time ALIGN pairs are transmitted, and
re-enter after ALIGNs complete. This will make debug of traces easier
as long blocks of CONT with no discernable starting primitive will not
be generated. By default it�s off, so functionality is identical to 921
until software enables it.</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x1</td><td align="center">R/W</td><td>STATIC_LONG_HUNT_ALIGN<br>Host
only. Hunt Align control during Phy Initialisation is extended until we
have sent aligns and received three non-align primitives. Counters
situations where a shift in alignment occurs from the device after it
has transmitted its own Align sequence.</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_BYPASS_DSCR<br>Receive data passes the de-scrambler unchanged</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_BYPASS_SCR<br>Transmit data passes the scrambler unchanged</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x1</td><td align="center">R/W</td><td>STATIC_DISABLE_CONT<br>CONT primitive capability is disabled for transmitting repeating primitives.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_BYPASS_DECODER<br>Receive data passes the decoder unchanged</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>STATIC_BYPASS_ENCODER<br>Transmit data passes the encoder unchanged</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">R/W</td><td>STATIC_BIT_SWAP<br>Bit
swap for 10-bit encoded bytes passed between the phy and the link
encoder/decoder blocks. All 10 bits are swapped but the byte locations
are unchanged.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA PHY CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Allows software control of phy initialisation.  This includes suspending the interface if no device is detected.<br>Reports various debug and functional indications from the phy.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20PHY%20CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA PHY CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">0x32</td><td align="center">R/W</td><td>STATIC_COMWAKE_EXT<br>Device
only. Defines the overall COMWAKE period for the device mode, so that
the exit quiescent period may be controlled. Default should lead to
213.3ns last COMWAKE (exit is defined as 175ns &lt; CW &lt; 228.3ns)</td></tr>
<tr><td align="center">Field23</td><td align="center">24:23</td><td align="center">&nbsp;</td><td align="center">R</td><td>DEBUG_DW_ASS<br>Indicates
which alignment state was chosen � number between 0 and 3 indicates
which byte in the incoming dword contained the K-character before
re-alignment.</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">R</td><td>WAKEUP_FROM_PHY<br>Indicates that exiting Power Management was initiated by the phy, on reception of COMWAKE.</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">R</td><td>HOST<br>If set, this interface is HOST, else it�s DEVICE.</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">R</td><td>PHY_READY<br>Indicates level of phy ready signal</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">R</td><td>DET_COMINIT<br>Indicates COMINIT OOB signal is detected</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">R</td><td>DET_COMWAKE<br>Indicates COMWAKE OOB signal is detected</td></tr>
<tr><td align="center">Field6</td><td align="center">16:6</td><td align="center">0x5DC</td><td align="center">R/W</td><td>PHY_RECOVERY_TIME<br>Counts
period during which phy is unable to receive incoming traffic as it is
mid speed-change. This is a variable amount, but is 10us max. Default
is 1500d � 10us at 150MHz system clock. The counter runs in the system
clock domain.</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>FER_LOOPBACK<br>Far
End Retime loopback. Asserting this bit enables our far end loopback
facility. This bit is cleared when Phy Ready is lost, (e.g. on
reception of COMRESET or COMINIT) resulting in exit from BIST Loopback
mode.</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>HALT_SEND_ALIGNS<br>Host
only. Stops the core re-trying initialisation once there have been no
non-aligns detected. Normally the host will re-try indefinitely, unless
this bit is asserted</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>HALT_DET_ALIGNS<br>Host
only. Stops the core re-trying initialisation once there have been no
aligns detected after 880us, at the slowest speed grade. Normally the
host will re-try indefinitely, unless this bit is asserted.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>PHY_ASR<br>Host
function: Asynchronous reset capability. Allows us to respond to
COMINIT by asserting COMRESET. This ensures hot-plug robustness.<br>Device
function: Allows automatic re-transmission of COMINIT after &gt; 10ms
elapsed. If the bus interface is dropped, the device port will wait 10
ms before trying to reconnect with COMINIT. Use in conjunction with
SATA_STATIC_CONFIG register, bit 27.</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>Reserved  PHY_RESET_HOLD (This is NOT connected any more, but present in some code)</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA ERR SRC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reports
errors detected from the phy and link layers. This register is cleared
bitwise by writing a zero to the appropriate location. Writing to these
locations only clears the values. They can only be set by the Link
Layer. These errors are used to generate the Link layer interrupt. Some
are also used to increment the phy error counter. This counts
consecutive errors and is used to force an interface reset should too
many occur. Errors may be masked bit-wise using SATA_IRQMSK register.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20ERR%20SRC_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA ERR SRC_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field10</td><td align="center">29:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_UNEX_SOF_ERROR<br>SOF primitive arrives but we are in IDLE state and not expecting it.</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_SOF_ERROR<br>SOF
transition error in the Link. Link was in R_RDY and failed to get SOF
from the device. Frame is lost. This error must be enabled using
static_escpae_rxd_sof_err bit in the SATA LINK CTRL register.</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_FIFO_OVERRUN<br>Rx
FIFO has over-run. Indication set when the threshold level is set too
low and Link flow control hasn�t worked. This is set when there is no
space in the FIFO. It may be coincident with an error indication,
unless the FIFO is exactly filled with the last quadlet of data.</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R/W</td><td>PHY_READY_EVENT<br>Phy Ready event detected.  Indicates any change in phy ready.  Report persists until explicitly cleared in the register</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>DET_COMINIT_EVENT<br>COMINIT event detected.  Report persists until explicitly cleared in the register.</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>DET_COMWAKE_EVENT<br>COMWAKE event detected.  Report persists until explicitly cleared in the register</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_PRIM_ERROR<br>Incorrect primitive discovered in the de-scrambler</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_ALIGN_ERROR<br>Alignment error.  This may be set during initialisation.</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_DIS_ERROR<br>Link decode disparity error.  This may be set during initialisation.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_VIO_ERROR<br>Link decode violation.  Incorrect codeword.</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_ERR<br>Phy asserts rxerror indicating elasticity buffer overflow</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>RXD_LOCK_ERR<br>Phy cannot lock on incoming signal, or signal level�s too low</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA ERR GATE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4591000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Gates
various error bits into the phy error counter. If set, an individual
error will add to the phy error count. If all are cleared then no
errors are registered and the internal phy error counter will never
advance. The phy error count indicates the acceptable number of
consecutive phy errors that will automatically force a reset interface.
The error count will only advance by one per clock cycle, irrespective
of how many simultaneous errors occur.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20ERR%20GATE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA ERR GATE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field20</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">19:16</td><td align="center">0x3</td><td align="center">R/W</td><td>gate_phy_err_count<br>Number
of error bits counted on phy_err using the above gated error indicators
that will result in an interface reset. Seeing any enabled errors
consecutively in any combination over the maximum number set by this
field will cause an interface reset.. Eg. If a bit is gated in and
three of those type of error occur, the phy initialisation state
machine will automatically reset the interface.</td></tr>
<tr><td align="center">Field6</td><td align="center">15:6</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_prim_error<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_align_error<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_dis_error<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_vio_error<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_err<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>gate_rxd_lock_err<br>Gating for relevant bit in SATA ERR SRC. This bit will be passed out on the general phy_err signal if the gate is set to 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA IRQ MSK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The
SATA core will generate an interrupt signal on some events or errors.
These are able to be masked (masked by default) and only activate the
interrupt line when not masked. Each bit in this register is a
corresponding Interrupt mask for a relevant bit in the SATA ERR SRC
register.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20IRQ%20MSK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA IRQ MSK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field12</td><td align="center">31:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_unex_sof_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_sof_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_fifo_overrun<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_phy_ready_event<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_det_cominit_event<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_det_comwake_event<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_prim_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_align_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_dis_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_vio_error<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_err<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">R/W</td><td>imsk_rxd_lock_err<br>�1� = Mask interrupt<br>�0� = Generate interrupt</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA LINK CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Register controlling Link layer specific functions.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20LINK%20CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA LINK CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field28</td><td align="center">31:28</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field27</td><td align="center">27</td><td align="center">0x0</td><td align="center">R/W</td><td>reg_filter_rxd_lock_i<br>Enables
filtering for Silicon Image sourced rxd_lock signal. This signal is
prone to drop during high frequency 3G patterns, but always re-asserts
after reception of ALIGN characters. The filter simply counts &gt; time
between ALIGN charaters before allowing rxd_lock to be de-asserted
locally.</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">R/W</td><td>reg_filter_sig_valid_i<br>Enables
filtering for Silicon Image sourced sig_valid signal. This signal is
prone to drop during high frequency 3G patterns, but always re-asserts
after reception of ALIGN characters. The filter simply counts &gt; time
between ALIGN charaters before allowing sig_valid to be de-asserted
locally.</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">R/W</td><td>always_allow_spm_pm<br>Usually
Software Power Management (spm) power management cannot assert a PM
request from the host link until a signature FIS is received. Asserting
this bit will allow software to control power management at any time.</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x1</td><td align="center">R/W</td><td>enable_tl_pm<br>Usually
set � allows TL to initiate PM request. If cleared, PM will still be
possible using software SControl register and when device initiated.</td></tr>
<tr><td align="center">Field22</td><td align="center">30:22</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reserved</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">R/W</td><td>reg_rrdy_holdoff<br>When
set, prevents rx state machine issuing R_RDY in response to X_RDY from
the host. This allows our device port to always send a packet. Useful
for sending Signature FISes before receiving an SRST from the host, or
for controlling the bus during HID applications.</td></tr>
<tr><td align="center">Field15</td><td align="center">23:15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reserved</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">0x0</td><td align="center">W</td><td>force_rx_fis_ack<br>Writing
a �1� to this bit will force the rx_fis_ack handshaking signal in the
SATA Link to �0� � effectively clearing it. This will be useful for
workaround cases if the handshaking with the TL gets stuck. This is a
one-shot operation and clearing the signal will not prevent it being
reset again immediately, if the stimulus is present.</td></tr>
<tr><td align="center">Field4</td><td align="center">13:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>rx_corrupt_data<br>Enables
the link to corrupt the 15th DATA QUAD (with 'CAFBABEx' where x is the
port number) of the next FIS to be transmitted. The CRC will relate to
the original data and therefore be incorrect.<br>The bit is self-clearing once the corrupt quad has been sent.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>tx_corrupt_data<br>Enables
the link to corrupt the 15th DATA QUAD (with 'BADCODEx' where x is the
port number) of the next FIS to be transmitted. The CRC will relate to
the original data and therefore be incorrect.<br>The bit is self-clearing once the corrupt quad has been sent.</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>tx_corrupt_crc_enable<br>Enables
the link to send a corrupt crc value when indicated to do so by the crc
flag being set at the end of transmission of the current FIS
(co-incident with the eof flag). Use in conjunction with Transport
Layer registers.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">R/W</td><td>static_escape_rxd_sof_err<br>Enables
the rxd_sof_error function to work. If disabled, the main state will
exit directly to IDLE rather than SYNC_ESCAPE and there will be no
error notification.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA PHY STATE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Allows software to read the current state of the phy initialisation state machine.<br>By
asserting the phy_force_active bit after setting the value of a desired
state, this register may be used to force the phy state machine into
any state. This is only intended to be a last resort in the face of an
unrecoverable state transition.<br>Note: the Phy States differ between Host and Device modes</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20PHY%20STATE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA PHY STATE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">W</td><td>phy_force_active<br>Force Phy Init SM into state written to bits in phy_force_state</td></tr>
<tr><td align="center">Field20</td><td align="center">23:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">19:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>phy_force_state<br>State into which Phy Init SM is forced when phy_force_active bit is set.</td></tr>
<tr><td align="center">Field4</td><td align="center">15:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>phy_state<br>Current state of the Phy Init state machine<br>Host States are:<br>'0000' = HR_RESET<br>'0001' = HR_AWAIT_COMINIT<br>'0010' = HR_AWAIT_NO_COMINIT<br>'0011' = HR_COMWAKE<br>'0100' = HR_AWAIT_COMWAKE<br>'0101' = HR_AWAIT_NO_COMWAKE<br>'0110' = HR_AWAIT_ALIGN<br>'0111' = HR_ADJUST_SPEED<br>'1000' = HR_SEND_ALIGN<br>'1001' = HR_READY<br>'1010' = HR_PARTIAL<br>'1011' = HR_SLUMBER<br>'1100' = HR_INIT_ERROR<br>'1101' = HR_DUMMY2<br>'1110' = HR_CALIBRATE (unused)<br>'1111' = HR_DUMMY<br>Device states are:<br>'0000' = DR_RESET<br>'0001' = DR_COMINIT<br>'0010' = DR_AWAIT_COMWAKE<br>'0011' = DR_AWAIT_NO_COMWAKE<br>'0100' = DR_COMWAKE<br>'0101' = DR_SEND_ALIGN<br>'0110' = DR_READY<br>'0111' = DR_PARTIAL<br>'1000' = DR_SLUMBER<br>'1001' = DR_REDUCE_SPEED<br>'1010' = DR_ERROR<br>'1011' = DR_CALIBRATE (unused)<br>'1100' = DR_DUMMY12<br>'1101' = DR_DUMMY13<br>'1110' = DR_DUMMY14<br>'1111' = DR_DUMMY15</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA LINK STATE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4591001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Allows software to read the current state of the Link layer main state machine.<br>By
asserting the correct bit and setting the value of a desired state,
this register may be used to force the main state machine into any
state. This is only intended to be a last resort in the face of an
unrecoverable state transition.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20LINK%20STATE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA LINK STATE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">W</td><td>link_force_active<br>Force Link Main SM into state written to bits in link_force_state</td></tr>
<tr><td align="center">Field21</td><td align="center">23:21</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">20:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>link_force_state<br>State into which Link Main SM is forced when link_force_active bit is set.</td></tr>
<tr><td align="center">Field5</td><td align="center">15:5</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">4:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>link_state<br>Current state of the Link Main state machine.<br>States are:<br>'10000' = MS_HOLD<br>'10001' = MS_NO_PMNAK<br>'10010' = MS_SEND_HOLDA<br>'10011' = MS_RCV_EOF<br>'10100' = MS_GOOD_CRC<br>'10101' = MS_GOOD_END<br>'10110' = MS_BAD_END<br>'10111' = MS_PM_PARTIAL<br>'11000' = MS_PM_SLUMBER<br>'11001' = MS_PM_OFF<br>'11010' = MS_PM_DENY<br>'11011' = MS_CHK_PHY_RDY<br>'11100' = MS_NO_COMM_POWER<br>'11101' = MS_WAKEUP_1<br>'11110' = MS_WAKEUP_2<br>'11111' = MS_SYNC_ESCAPE<br>'00000' = MS_RESET<br>'00001' = MS_IDLE<br>'00010' = MS_NO_COMM_ERR<br>'00011' = MS_NO_COMM<br>'00100' = MS_SEND_ALIGN<br>'00101' = MS_SEND_CHK_RDY<br>'00110' = MS_SEND_SOF<br>'00111' = MS_SEND_DATA<br>'01000' = MS_RCVR_HOLD<br>'01001' = MS_SEND_HOLD<br>'01010' = MS_SEND_CRC<br>'01011' = MS_SEND_EOF<br>'01100' = MS_WAIT_WTRM<br>'01101' = MS_RCV_CHK_RDY<br>'01110' = MS_RCV_WAIT_FIFO<br>'01111' = MS_RCV_DATA</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA SSTATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Read only register conveys current interface state. As per the SStatus register detailed in SATA 1.0a 10.1.1.<br>This register is continuously updated.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SSTATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SSTATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field12</td><td align="center">31:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>sstatus_ipm<br>Indicates current interface power management state.<br>'0000' = Device not present or comms not established.  Reported until the comms<br>are established(ie while DET '0000' or '0001').<br>'0001' = Interface active<br>'0010' = Interface in PARTIAL PM state.  This instruction originates from either the<br>host or device.<br>'0110' = Interface in SLUMBER PM state.  This instruction originates from either the<br>host or device.</td></tr>
<tr><td align="center">Field4</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>sstatus_spd<br>Indicates the negotiated interface speed.<br>'0000' = No negotiated speed  - because device not present or comms not<br>established (ie DET '0000' or '0001')<br>'0001' = Gen1 rate 1.5Gbps<br>'0010' = Gen2 rate 3.0Gbps</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>sstatus_det<br>Reports interface device detection and Phy state.<br>'0000'
= No device detected and phy communication not established. Note that
this not the case under Power Management, when the report will be
0x0001. The IPM field may also be checked to determine whether PM is
the reason for no comms.<br>'0001' = Device present but phy
communication not established. This report also occurs during a Power
Management phase. To determine whether communication is incomplete due
to Power Management, see the IPM field. Note that this report will be
incorrect if, during Power Management, the device is removed without
notice. In this case 1h will persist in this field, although the actual
value should be 0h. There is no way for hardware to detect such an
event unless side-band signals are used.<br>'0011' = Device presence
detected and phy communication established. This is the normal level
when the interface is working, post initialisation.<br>'0100' = Offline due to interface being disabled or running BIST loopback</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA SERROR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Supplemental
error information in addition to that reported in the shadow registers.
This register accumulates all notifications since the last time it was
cleared. Errors are indicated in the lower two bytes of the register
and are broken down into recoverable and non-recoverable. The upper two
bytes store diagnostic error notifications. Each of these error
conditions can alert software directly by asserting the error bit in
the shadow registers, but only if not masked (see below). As per the
SError register detailed in SATA 1.0a 10.1.2.<br>Note, these registers
bits are always set every time a corresponding error is detected. They
cannot be masked using register 11 (SATA ERROR MASK). The errors are
cumulative and are only cleared by software. In order to clear a bit,
software must write a �1� to the correct location.<br>Writing to these locations only clears the values.  They can only be set by the Link Layer or Transport Layer.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SERROR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SERROR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_X<br>Diagnostic error. X = Detection of a COMINIT event.</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_F<br>Diagnostic error. F = Unrecognised FIS type.  Type error indicated from the transport layer.</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_T<br>Diagnostic error. T = Transport state transition error.</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_S<br>Diagnostic
error. S = Link sequence error. This is caused by either no SOF
primitive when the link is waiting for on, or an unexpected SOF
primitive. These count as invalid state transitions.</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_H<br>Diagnostic
error. H = Handshake error. R_ERR (one or more) received in response to
a frame transmission. Maybe as a result of the device seeing C, D or B
errors itself.</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_C<br>Diagnostic error. C = CRC error (one or more) occurred. This is crc_rx_error</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_D<br>Diagnostic error. D = Disparity error (one or more) in the received frame.  This is rxd_dis_error</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_B<br>Diagnostic error. B = 10b8b decoding error (one or more) in the received frame.  This is rxd_vio_error</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_W<br>Diagnostic error. W = Detection of a COMWAKE event</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_I<br>Diagnostic error.  I = Phy Internal Error.<br>During
initialisation this will be caused by an OOB signal sequencing error.
Once the initialisation is complete, this error will be due to the phy
asserting either RXERR_E or O if there�s an elasticity buffer over-flow
or de-assertion of RXLOCK_E or O if byte lock / signal levels are lost.</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_diag_N<br>Diagnostic error. N = change in PhyReady.  This will probably be coincident with the Error_M or C indications.</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_E<br>Non-recoverable
error. E = Internal error. Maybe a state transition error. Software
must reset the interface and retry the command. If this problem
persists there may be a design incompatibility. The bit is set in
response to:<br>Decode violation error (vio_error) (also in DIAG_B),
Disparity error (dis_error) (also in DIAG_D), Alignment error
(align_error), Primitive error (prim_error), Rx Fifo overrun error
(fifo_overrun), Transport layer internal error (tl_internal_err)</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_P<br>Non-recoverable
error. P = Protocol error such as badly formed or invalid FIS. May be
caused by invalid state transitions. Software must reset the interface
and retry the command � but first check the diag_F bit to see if it�s
simply a FIS type error. If this problem persists there may be a design
incompatibility.</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_C<br>Non-recoverable
error. C = Communications error (such as M) but for a non-retry-able
FIS. Device may have been removed. No software retry required.</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_T<br>Non-recoverable error. T = Transient data integrity error (such as I) but for a non-retry-able FIS.  Software retry required.</td></tr>
<tr><td align="center">Field2</td><td align="center">7:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_M<br>Recoverable
error. M = Communications error. Such as a momentary loss of
communication with the device. Probably caused by rapid disconnection +
reconnection or by a dodgy cable or connection. The transaction
succeeded so no software intervention is needed, but the error should
be tracked as a possible link speed downgrade may be suitable.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>serror_err_I<br>Recoverable
error. I = Data integrity error. Such as CRC or disparity error on a
retry-able FIS. Probably caused by noise or voltage fluctuations. The
transaction succeeded so no software intervention is needed, but the
error should be tracked as a possible link speed downgrade may be
suitable.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA SCONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interface
control register that slows software to adjust interface capabilities.
Reads will return the last value written. As per the SControl register
detailed in SATA 1.0a 10.1.3.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SCONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SCONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field20</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">19:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>scontrol_pmp<br>Unused � pmp field defined in TL</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">RW</td><td>scontrol_spm<br>SPM
filed. Allows software to force the phy into a power management state.
For this to work, power management must be enabled in the IPM field. It
is not necessary for the slumber or partial signals to be set in the
Transport Layer and the software assertion will override these signals.
When power management is entered using the SPM field, the only way to
exit is for software to assert SPM wakeup, or for the remote phy to
send COMWAKE.<br>Host function: This will only work once the Signature
FIS is received, unless always_allow_spm_pm bit is set in
SATA_LINK_CTRL register.<br>'0001' = Enter PARTIAL mode<br>'0010' = Enter SLUMBMER mode<br>'0100' = Force WAKEUP<br>Write
any other pattern to this field and it will be interpreted as 0000. The
field may be cleared if desired and if the power management state has
not been entered.<br>This field will always return 0000 when read.</td></tr>
<tr><td align="center">Field8</td><td align="center">11:8</td><td align="center">0x3</td><td align="center">RW</td><td>scontrol_ipm<br>IPM
field. Allows various Power Management states to be enabled. Note that
this is not the same as actually invoking these PM states as this is
handled directly by hardware and is not a software function � these
merely indicate whether hardware�s allowed to use PM (initiated from
either the host or device). Default is to disable PM features.<br>Device function:  IPM is automatically disabled on reception of COMRESET<br>'0000' = No PM restrictions.  PARTIAL and SLUMBER allowed.<br>'0001' = PARTIAL disabled<br>'0010' = SLUMBER disabled.<br>'0011' = PARTIAL &amp; SLUMBER disabled.</td></tr>
<tr><td align="center">Field4</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">RW</td><td>scontrol_spd<br>SPD field.  Sets the highest communication speed the interface is allowed to negotiate.<br>'0000' = No restrictions.  Currently only Gen1 anyway<br>'0001' = Gen1 maximum.<br>'0010' = Gen2 maximum</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">0x4</td><td align="center">RW</td><td>scontrol_det<br>DET
field. Controls the interface detection and initialisation sequences.
On power reset, this register will have a value of 4h � the interface
is completely disabled. Software may then take time to organise itself
and setup the hardware. When ready, software must move the SATA
interface into reset mode by writing 1h to this field. To begin
interface initialisation, software must subsequently write 0h to this
field at its leisure (there is no time delay required between setting
and clearing the reset state). Note that should software need to reset
the SATA interface at any point during normal operation, it can do so
by writing 1h followed by 0h to this field.<br>0000 = No device
detection or initialisation requested � interface will continue running
normally if it was doing so before. Software_ready flag is set.
Phy_reset_active flag is cleared.<br>0001 = Hard reset. This sets the
phy_reset_active flag. Forces the phy state machine into RESET.
Interface will re-initialise. The interface will stay in the RESET
state until this bit is cleared. Host: sends COMRESET indefinitely.
Device: Does nothing. Will jump to sending COMINIT once bit cleared
(and no COMRESET detected on the bus)<br>0100 = Disable interface and
put phy offline . This clears the software_ready flag. When coming out
of reset the SATA core will by default make no communication, with
txp/n lines held quiescent, even if there�s an attached device.
Software must write to clear this bit to enable communications</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA SERR MASK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4591002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>When
this bit is set, the error associated with the same bit in register 9
(SATA ERROR) will be masked when asserting the SERROR_NOTIFY signal to
the Transport Layer � it will not cause the STATUS register ERROR bit
to be set.<br>The error will still be recorded in SATA_SERROR register, regardless of whether this bit is set.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SERR%20MASK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SERR MASK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_X<br>Masks diagnostic error serror_diag_X</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_F<br>Masks diagnostic error serror_diag_F</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_T<br>Masks diagnostic error serror_diag_T</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_S<br>Masks diagnostic error serror_diag_S</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_H<br>Masks diagnostic error serror_diag_H</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_C<br>Masks diagnostic error serror_diag_C</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_D<br>Masks diagnostic error serror_diag_D</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_B<br>Masks diagnostic error serror_diag_B</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_W<br>Masks diagnostic error serror_diag_W</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_I<br>Masks diagnostic error serror_diag_I</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_diag_N<br>Masks diagnostic error serror_diag_N</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_err_E<br>Masks unrecoverable error serror_err_E</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_err_P<br>Masks unrecoverable error serror_err_P</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_err_C<br>Masks unrecoverable error serror_err_C</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_err_T<br>Masks unrecoverable error serror_err_T</td></tr>
<tr><td align="center">Field2</td><td align="center">7:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ mask_err_M<br>Masks recoverable error serror_err_M</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">RW</td><td>serror_mask_err_I<br>Masks recoverable error serror_err_I</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA OOB Timing</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Allows
OOB timing changes incase of incompatibility. Min &amp; max timings for
COMINIT and COMWAKE may be controlled. These parameters affect the
duration of the OOB gap only. This should be done with caution as the
timings are intended to be correct to the specification for a 75MHz RBC
clock. Faster clocks should improve the margins, but the timings will
need re-calculation.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20OOB%20Timing_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA OOB Timing_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field30</td><td align="center">31:30</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">29:24</td><td align="center">0xD</td><td align="center">RW</td><td>static_comwake_max</td></tr>
<tr><td align="center">Field22</td><td align="center">23:22</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">21:16</td><td align="center">0x3</td><td align="center">RW</td><td>static_comwake_min</td></tr>
<tr><td align="center">Field14</td><td align="center">15:14</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">13:8</td><td align="center">0x27</td><td align="center">RW</td><td>static_cominit_max</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">5:0</td><td align="center">0xC</td><td align="center">RW</td><td>static_cominit_min</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA SERROR IRQMSK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>When
this bit is set, the error associated with the same bit in register 9
(SATA ERROR) will be masked when asserting the SERROR_IRQ signal to the
Top Level. This signal is re-timed into the APB clock domain and may be
used by software to detect hot plug with DIAG_X, or any other error. By
default, nothing is masked.<br>The error will still be recorded in SATA_SERROR register regardless of whether this bit is set.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SERROR%20IRQMSK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SERROR IRQMSK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_X<br>Masks from interrupt diagnostic error serror_diag_X</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_F<br>Masks from interrupt diagnostic error serror_diag_F</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_T<br>Masks from interrupt diagnostic error serror_diag_T</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_S<br>Masks from interrupt diagnostic error serror_diag_S</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_H<br>Masks from interrupt diagnostic error serror_diag_H</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_C<br>Masks from interrupt diagnostic error serror_diag_C</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_D<br>Masks from interrupt diagnostic error serror_diag_D</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_B<br>Masks from interrupt diagnostic error serror_diag_B</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_W<br>Masks from interrupt diagnostic error serror_diag_W</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_I<br>Mask from interrupt s diagnostic error serror_diag_I</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_diag_N<br>Masks from interrupt diagnostic error serror_diag_N</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_err_E<br>Masks from interrupt unrecoverable error serror_err_E</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_err_P<br>Mask from interrupt s unrecoverable error serror_err_P</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_err_C<br>Masks from interrupt unrecoverable error serror_err_C</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_err_T<br>Masks from interrupt unrecoverable error serror_err_T</td></tr>
<tr><td align="center">Field2</td><td align="center">7:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ imsk_err_M<br>Masks from interrupt recoverable error serror_err_M</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">RW</td><td>serror_ismk_err_I<br>Masks from interrupt recoverable error serror_err_I</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA SERROR PM MASK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>When
this bit is set, the error associated with the same bit in the SATA
ERROR register will not be set if the error is generated during a power
management phase. This prevents errors stalling software, which would
normally be cleared on POR, but cannot be managed fast enough during PM
cycling. By default, all errors are masked during PM.<br>Rather than masking errors that have been recorded, these masks prevent the error from being recorded in the first place.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20SERROR%20PM%20MASK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA SERROR PM MASK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field27</td><td align="center">31:27</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_X<br>Masks from interrupt diagnostic error serror_diag_X</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_F<br>Masks from interrupt diagnostic error serror_diag_F</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_T<br>Masks from interrupt diagnostic error serror_diag_T</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_S<br>Masks from interrupt diagnostic error serror_diag_S</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_H<br>Masks from interrupt diagnostic error serror_diag_H</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_C<br>Masks during PM diagnostic error serror_diag_C</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_D<br>Masks during PM diagnostic error serror_diag_D</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_B<br>Masks during PM diagnostic error serror_diag_B</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_W<br>Masks during PM diagnostic error serror_diag_W</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_I<br>Masks during PM diagnostic error serror_diag_I</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_diag_N<br>Masks during PM diagnostic error serror_diag_N</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_E<br>Masks during PM unrecoverable error serror_err_E</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_P<br>Masks during PM unrecoverable error serror_err_P</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_C<br>Masks during PM unrecoverable error serror_err_C</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_T<br>Masks during PM unrecoverable error serror_err_T</td></tr>
<tr><td align="center">Field2</td><td align="center">7:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_M<br>Masks during PM recoverable error serror_err_M</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">RW</td><td>serror_pm_mask_err_I<br>Masks during PM recoverable error serror_err_I</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA PHY CFG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x4591003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Fill in here with new SYNOPSYS PHY CONFIG</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20PHY%20CFG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA PHY CFG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field28</td><td align="center">31:28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA BIST PATTERN 0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Received
BIST FIS with transmit pattern generation bits set (bits T and S).
Software writes the pattern held in quadlet 1 to this register. This
register is used in conjunction with SATA_BIST_PATTER_1 and must be
written first.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20BIST%20PATTERN%200_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA BIST PATTERN 0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>txd_bist_pattern_0<br>Table 18 � SATA BIST Pattern 0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/B_HOST_PORT/SATA BIST PATTERN 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45910044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Received
BIST FIS with transmit pattern generation bits set (bits T and S).
Software writes the pattern held in quadlet 2 to this register. This
register is the second of the pair to be written. Upon writing the BIST
pattern into this register, BIST transmit pattern generation will be
triggered. The data is transmitted encoded but not scrambled.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20BIST%20PATTERN%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA BIST PATTERN 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<!--No device support on K149-->

<!--COMMENT,AFAIK the link registers are accesible through the host/device PORT registers hence not in the main chip address map.-->

<!--COMMENT,SUBBLOCK,A_DEVICE_LINK-->

<!--COMMENT,BASE,0x20000-->

<!--COMMENT,DESCRIPTION,Device Link Registers for SATA port A (0)-->

<!--COMMENT,#include "sata_link.reg"-->

<!---->

<!--SUBBLOCK,A_DEVICE_PORT-->

<!--BASE,0x28000-->

<!--DESCRIPTION,Device Port Registers for SATA port A (0)-->

<!--#include "sata_device_port.reg"-->

<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>txd_bist_pattern_1</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DMA0</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x459A0000...0x459A001F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">DMA channel 0</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA0/CTRL_STAT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>control and status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CTRL_STAT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CTRL_STAT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FAIR_SHARE_ARB</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates which Stage the channel belongs to.<br>1: Stage 1, higher group (reset value)<br>0: Stage 2, lower group</td></tr>
<tr><td align="center">DMA_IN_PROGRESS</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>This bit indicates if a DMA channel is idle or not.<br>0: DMA idle.<br>1: DMA busy, transfer is not completed (current-byte-count not zero).</td></tr>
<tr><td align="center">SFT_S_DREQ</td><td align="center">5:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid source request for the channel.<br>DMA always reads from the source.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">SFT_D_DREQ</td><td align="center">9:6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid destination request for the channel.<br>DMA always writes to destination.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">INT</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">R</td><td>When set interrupt is enabled, indicates completion of a DMA transfer (when current byte count register is zero).<br>There are two different ways of clearing this interrupt bit, please see<br>bit 30 (CLEAR_INT_REG_EN) in this register.</td></tr>
<tr><td align="center">NEXT_FREE</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">R</td><td>When high, this bit indicates that the address- and byte-count registers are ready to be programmed.<br>DMA-controller will set this bit high after it loads the current registers.<br>It deactivates when CPU writs to BYTE_COUNT register.</td></tr>
<tr><td align="center">CH_RESET</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting
this bit to �1� will disable the next bus-cycle transfer (does not
effect any ongoing AHB burst transfer). CPU needs to set it back to �0�
when starting a new transfer.</td></tr>
<tr><td align="center">DIRECTION</td><td align="center">14:13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates
the data transfer direction between interfaces A and B. DMA-controller
always reads from the source and writes to the destination.<br>00: Source = A, Destination = A (reset value)<br>01: Source = B, Destination = A<br>10: Source = A, Destination = B<br>11: Source = B, Destination = B</td></tr>
<tr><td align="center">INC_ADDR_S</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Source address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value).<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">INC_ADDR_D</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Destination address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value)<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">MODE_A</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface A.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">MODE_B</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface B.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">DEVICE_TYPE_S</td><td align="center">21:19</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for source device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">DEVICE_TYPE_D</td><td align="center">24:22</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for destination device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">PAUSE_DMA</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing one to this bit will pause the next bus-cycle transfer until it is set to zero.</td></tr>
<tr><td align="center">INT_ENABLE</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �0� will disable the interrupt for this channel.<br>Reset value is �1�.</td></tr>
<tr><td align="center">FIXED_ADDR_S</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 15.<br>1: Source address is really fixed (all bits), bit 15 must be �0�.</td></tr>
<tr><td align="center">FIXED_ADDR_D</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 16.<br>1: Destination address is really fixed (all bits), bit 16 must be �0�.</td></tr>
<tr><td align="center">STARVE_LOW_PRIO</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value<br>1:
Starve the low priority channels. Low priority channels get executed
when high priority is not requesting. It has to be cleared by software
when not needed.</td></tr>
<tr><td align="center">CLEAR_INT_REG_EN</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If
this bit is set to �1�, then Software shall use the clear interrupt
register (CLEAR_INT_REG ) to clear any pending interrupts.<br>Reset
value is �0� where software shall write to base-source/destination or
byte count register to clear any pending interrupts, this is to ensure
software compatibility with older DMA versions(V0-V3).</td></tr>
<tr><td align="center">UNUSED</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing to these bits has no effect. Read will return all zeros.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA0/BASE_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the base-Source address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt..</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA0/CURRENT_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current Source address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA0/CLEAR_INT_REG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Any write to this register will clear the pending interrupt if CLEAR_INT_REG_EN bit in control register is set to �1�.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CLEAR_INT_REG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CLEAR_INT_REG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA0/BASE_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the Destination-base address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA0/CURRENT_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current destination address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA0/BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RD_EOT</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of read transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">WR_EOT</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of write transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">HPROT_SET</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the write transfer as write bufferable on AHB bus.<br>Reset value is �0�.</td></tr>
<tr><td align="center">FIXED_INCR</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the transfer as fixed incrementing burst (INCR4/8/16) on AHB bus if possible.<br>Reset value is �0�, unspecified burst length (INCR).</td></tr>
<tr><td align="center">BURST_MODE_A</td><td align="center">27:26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface A:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">BURST_MODE_B</td><td align="center">25:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface B:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">Reserved</td><td align="center">23:22</td><td align="center">&nbsp;</td><td align="center">N/A</td><td>&nbsp;</td></tr>
<tr><td align="center">BYTE_COUNT</td><td align="center">21:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Byte_count_size is programmable.<br>Byte_count holds the block size in bytes for the next DMA transfer.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA0/CURRENT_BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CURRENT_BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CURRENT_BYTE_COUNT</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates
number of bytes read from the source at any point during the current
DMA transaction. It is byte aligned and decrements on each cycle by the
number of bytes transferred.<br>Indicates number of bytes read from source.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA0/Interrupt Register and DMA-version</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Register and DMA-version</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Register%20and%20DMA-version_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Register and DMA-version_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INT_REG</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates what channel is interrupting, where bit zero indicates channel zero, bit one is channel one and etc.</td></tr>
<tr><td align="center">NUM_OF_CH</td><td align="center">23;16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns number of channels.</td></tr>
<tr><td align="center">Version</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Highest 8-bits is DMA version number = 0x04.</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DMA1</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x459A0020...0x459A003F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">DMA channel 1</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA1/CTRL_STAT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>control and status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CTRL_STAT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CTRL_STAT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">FAIR_SHARE_ARB</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates which Stage the channel belongs to.<br>1: Stage 1, higher group (reset value)<br>0: Stage 2, lower group</td></tr>
<tr><td align="center">DMA_IN_PROGRESS</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R</td><td>This bit indicates if a DMA channel is idle or not.<br>0: DMA idle.<br>1: DMA busy, transfer is not completed (current-byte-count not zero).</td></tr>
<tr><td align="center">SFT_S_DREQ</td><td align="center">5:2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid source request for the channel.<br>DMA always reads from the source.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">SFT_D_DREQ</td><td align="center">9:6</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CPU uses these bits to indicate the valid destination request for the channel.<br>DMA always writes to destination.<br>0000: SD read:      SD to DMA (reset value)<br>0001: SD write:     DMA to SD<br>0010: CIPHER read:  CIPHER to DMA<br>0011: CIPHER write: DMA to CIPHER<br>0100: AUDIO read:   AUDIO to DMA<br>0101: AUDIO write:  DMA to AUDIO<br>1111: memory</td></tr>
<tr><td align="center">INT</td><td align="center">10</td><td align="center">&nbsp;</td><td align="center">R</td><td>When set interrupt is enabled, indicates completion of a DMA transfer (when current byte count register is zero).<br>There are two different ways of clearing this interrupt bit, please see<br>bit 30 (CLEAR_INT_REG_EN) in this register.</td></tr>
<tr><td align="center">NEXT_FREE</td><td align="center">11</td><td align="center">&nbsp;</td><td align="center">R</td><td>When high, this bit indicates that the address- and byte-count registers are ready to be programmed.<br>DMA-controller will set this bit high after it loads the current registers.<br>It deactivates when CPU writs to BYTE_COUNT register.</td></tr>
<tr><td align="center">CH_RESET</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting
this bit to �1� will disable the next bus-cycle transfer (does not
effect any ongoing AHB burst transfer). CPU needs to set it back to �0�
when starting a new transfer.</td></tr>
<tr><td align="center">DIRECTION</td><td align="center">14:13</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Indicates
the data transfer direction between interfaces A and B. DMA-controller
always reads from the source and writes to the destination.<br>00: Source = A, Destination = A (reset value)<br>01: Source = B, Destination = A<br>10: Source = A, Destination = B<br>11: Source = B, Destination = B</td></tr>
<tr><td align="center">INC_ADDR_S</td><td align="center">15</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Source address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value).<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">INC_ADDR_D</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines whether the Destination address will be fixed or incremented during a transfer.<br>0: Fixed address during the DMA transfer, only lowest 4-bits will increment (reset value)<br>1: Address will increment as current byte count increments.</td></tr>
<tr><td align="center">MODE_A</td><td align="center">17</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface A.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">MODE_B</td><td align="center">18</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Determines the data transfer mode for Interface B.<br>0: Single transfer mode (reset value)<br>1: Burst transfer mode.</td></tr>
<tr><td align="center">DEVICE_TYPE_S</td><td align="center">21:19</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for source device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">DEVICE_TYPE_D</td><td align="center">24:22</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>This determines the maximum data transfer width for destination device.<br>000: 8-bits Device (reset value)<br>001: 16-bits Device<br>010: 32-bits Device<br>Others: Unused.</td></tr>
<tr><td align="center">PAUSE_DMA</td><td align="center">25</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing one to this bit will pause the next bus-cycle transfer until it is set to zero.</td></tr>
<tr><td align="center">INT_ENABLE</td><td align="center">26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �0� will disable the interrupt for this channel.<br>Reset value is �1�.</td></tr>
<tr><td align="center">FIXED_ADDR_S</td><td align="center">27</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 15.<br>1: Source address is really fixed (all bits), bit 15 must be �0�.</td></tr>
<tr><td align="center">FIXED_ADDR_D</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value, no effect, see bit 16.<br>1: Destination address is really fixed (all bits), bit 16 must be �0�.</td></tr>
<tr><td align="center">STARVE_LOW_PRIO</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>0: reset value<br>1:
Starve the low priority channels. Low priority channels get executed
when high priority is not requesting. It has to be cleared by software
when not needed.</td></tr>
<tr><td align="center">CLEAR_INT_REG_EN</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>If
this bit is set to �1�, then Software shall use the clear interrupt
register (CLEAR_INT_REG ) to clear any pending interrupts.<br>Reset
value is �0� where software shall write to base-source/destination or
byte count register to clear any pending interrupts, this is to ensure
software compatibility with older DMA versions(V0-V3).</td></tr>
<tr><td align="center">UNUSED</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Writing to these bits has no effect. Read will return all zeros.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA1/BASE_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the base-Source address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt..</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA1/CURRENT_S_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current Source address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_S_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_S_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA1/CLEAR_INT_REG</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Any write to this register will clear the pending interrupt if CLEAR_INT_REG_EN bit in control register is set to �1�.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CLEAR_INT_REG_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CLEAR_INT_REG_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA1/BASE_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Holds the Destination-base address for DMA transfers.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BASE_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BASE_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA1/CURRENT_DES_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stores
the current destination address of the DMA transfer. This value is
transfer-width aligned and increments by the number of bytes
transferred per cycle or it is fixed.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_DES_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_DES_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA1/BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RD_EOT</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of read transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">WR_EOT</td><td align="center">30</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will enable the end of write transfer signal for this channel.<br>Reset is �0�.</td></tr>
<tr><td align="center">HPROT_SET</td><td align="center">29</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the write transfer as write bufferable on AHB bus.<br>Reset value is �0�.</td></tr>
<tr><td align="center">FIXED_INCR</td><td align="center">28</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Setting this bit to �1� will mark the transfer as fixed incrementing burst (INCR4/8/16) on AHB bus if possible.<br>Reset value is �0�, unspecified burst length (INCR).</td></tr>
<tr><td align="center">BURST_MODE_A</td><td align="center">27:26</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface A:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">BURST_MODE_B</td><td align="center">25:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Fixed incrementing burst mode on interface B:<br>�00� = INCR4, reset value.<br>�01� = INCR8.<br>�10� = INCR16.<br>�11� = INCR4.</td></tr>
<tr><td align="center">Reserved</td><td align="center">23:22</td><td align="center">&nbsp;</td><td align="center">N/A</td><td>&nbsp;</td></tr>
<tr><td align="center">BYTE_COUNT</td><td align="center">21:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Byte_count_size is programmable.<br>Byte_count holds the block size in bytes for the next DMA transfer.<br>If CLEAR_INT_REG_EN in control register is �0� then clear the pending interrupt.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA1/CURRENT_BYTE_COUNT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CURRENT_BYTE_COUNT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CURRENT_BYTE_COUNT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CURRENT_BYTE_COUNT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CURRENT_BYTE_COUNT</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates
number of bytes read from the source at any point during the current
DMA transaction. It is byte aligned and decrements on each cycle by the
number of bytes transferred.<br>Indicates number of bytes read from source.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/DMA1/Interrupt Register and DMA-version</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459A0038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Interrupt Register and DMA-version</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Register%20and%20DMA-version_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Register and DMA-version_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INT_REG</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Indicates what channel is interrupting, where bit zero indicates channel zero, bit one is channel one and etc.</td></tr>
<tr><td align="center">NUM_OF_CH</td><td align="center">23;16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Returns number of channels.</td></tr>
<tr><td align="center">Version</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Highest 8-bits is DMA version number = 0x04.</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">SGDMA0</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x459B0000...0x459B000F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Scatter-Gather DMA Controller channel 0 (controls SATA DMA channel 0); port address 11</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/SGDMA0/CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459B0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CONTROL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Start</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Self clearing bit. Set to activate SGDMA once REQUEST_POINTER has been written</td></tr>
<tr><td align="center">Queuing Enable</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>0 = DMAs are sent one at a time. SGDMA will wait for the interrupt for the previous DMA before sending a new one<br>1 = DMAs are queued. Two DMAs are sent initially. This is the recommended mode of operation.</td></tr>
<tr><td align="center">DMA HBURST Enable</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>Determines the type of bursts the DMA will be requested to perform:<br>0 = SINGLE / INCR<br>1 = INCR4 / INCR8 transfers where possible</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/SGDMA0/STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459B0004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>STATUS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Error code</td><td align="center">5:0</td><td align="center">0x0</td><td align="center">R/W</td><td>SGDMA Error Identifier<br>Should be checked when SGDMA completes. Error codes are documented below<br>Writing with bit 0 set will clear the error and return the SGDMA to the IDLE state</td></tr>
<tr><td align="center">Busy</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Set when the SGDMA is active processing the current request</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/SGDMA0/REQUEST POINTER</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459B0008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>REQUEST POINTER</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('REQUEST%20POINTER_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="REQUEST POINTER_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Req_Pointer</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Pointer to a request structure in memory. The request structure is documented below</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/SGDMA0/SUB_BLOCK_RESETS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459B000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SUB_BLOCK_RESETS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SUB_BLOCK_RESETS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SUB_BLOCK_RESETS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Control Reset</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Setting this bit resets the control state machine for this channel. The bit is self clearing</td></tr>
<tr><td align="center">Arbiter reset</td><td align="center">1</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the multi-channel arbiter. The bit is self clearing</td></tr>
<tr><td align="center">AHB Master reset</td><td align="center">2</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the AHB master interface. The bit is self clearing<br>,</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">SGDMA1</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x459B0010...0x459B001F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Scatter-Gather DMA Controller channel 1 (controls SATA DMA channel 1); port address 11</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/SGDMA1/CONTROL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459B0010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CONTROL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CONTROL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CONTROL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Start</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Self clearing bit. Set to activate SGDMA once REQUEST_POINTER has been written</td></tr>
<tr><td align="center">Queuing Enable</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>0 = DMAs are sent one at a time. SGDMA will wait for the interrupt for the previous DMA before sending a new one<br>1 = DMAs are queued. Two DMAs are sent initially. This is the recommended mode of operation.</td></tr>
<tr><td align="center">DMA HBURST Enable</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>Determines the type of bursts the DMA will be requested to perform:<br>0 = SINGLE / INCR<br>1 = INCR4 / INCR8 transfers where possible</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/SGDMA1/STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459B0014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>STATUS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Error code</td><td align="center">5:0</td><td align="center">0x0</td><td align="center">R/W</td><td>SGDMA Error Identifier<br>Should be checked when SGDMA completes. Error codes are documented below<br>Writing with bit 0 set will clear the error and return the SGDMA to the IDLE state</td></tr>
<tr><td align="center">Busy</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Set when the SGDMA is active processing the current request</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/SGDMA1/REQUEST POINTER</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459B0018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>REQUEST POINTER</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('REQUEST%20POINTER_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="REQUEST POINTER_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Req_Pointer</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Pointer to a request structure in memory. The request structure is documented below</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/SGDMA1/SUB_BLOCK_RESETS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459B001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>SUB_BLOCK_RESETS</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SUB_BLOCK_RESETS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SUB_BLOCK_RESETS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Control Reset</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Setting this bit resets the control state machine for this channel. The bit is self clearing</td></tr>
<tr><td align="center">Arbiter reset</td><td align="center">1</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the multi-channel arbiter. The bit is self clearing</td></tr>
<tr><td align="center">AHB Master reset</td><td align="center">2</td><td align="center">0x0</td><td align="center">W</td><td>Available on channel 0 only. Setting this bit resets the AHB master interface. The bit is self clearing<br>,</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">CIPHER</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x459C0000...0x459BFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Cipher Core Registers; port address 12</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field9</td><td align="center">30:9</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x1</td><td align="center">R/W</td><td>iv_end_swap<br>�0� = Init vector / LBA is not endian swapped<br>�1� = Init vector / LBA is endian swapped</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x1</td><td align="center">R/W</td><td>iv_byte_swap<br>�0� = Init vector / LBA is not byte swapped<br>�1� = Init vector / LBA is byte swapped</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R/W</td><td>Key length<br>�0� = 128-bit key<br>�1� = 256-bit key</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R/W</td><td>enable_ctrl<br>�0� = HW has control over the core enable<br>�1� = SW has control over the core enable</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R/W</td><td>LBA ctrl<br>�0� = HW has control over the LBA/Init vector used<br>�1� = SW has control over the LBA/Init vector used</td></tr>
<tr><td align="center">Field7</td><td align="center">8:7</td><td align="center">0x0</td><td align="center">R/W</td><td>mode<br>'00' = ECB_AES mode<br>'01' = XTS_AES mode<br>'10' = CBC_AES mode<br>'11' = ECB_AES mode</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R/W</td><td>abort<br>�0� = Normal Operation<br>�1� = Causes RX and TX FIFOs to be reset, causes AHB if to reset to default state.<br>NOTE: This bit should not be set when the core is processing data</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>direction_ctrl<br>�0� = HW has control over the core direction<br>�1� = SW has control over the core direction</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>cpu_encrypt_key<br>�0� = Normal operation<br>�1� = Data written to the DATA_IN registers will be encrypted using a secret internal key (KEK)<br>before being loaded into the KEY1 registers.</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>sw_fifo_ac<br>�0� = Normal operation<br>�1� = Overrides HW access to the datapath</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>use_key<br>�0� = ECB-AES module uses KEY1 as primary AES key<br>�1� = ECB-AES module uses KEY3 as primary AES key</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x1</td><td align="center">R/W</td><td>direction<br>�0� = Input data is decrypted when direction control is set to SW<br>�1� = Input data is encrypted when direction control is set to SW</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">R/W</td><td>enable<br>�0� =  Core is disabled when enable control is set to SW<br>�1� =  Core is enabled when enable control is set to SW</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field4</td><td align="center">31:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">6:4</td><td align="center">0x0</td><td align="center">R/W</td><td>Returns the state of the ECB state machine</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>tx_not_empty<br>�0� = TX_FIFO is empty<br>�1� = TX_FIFO is full (has data to transmit)</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x1</td><td align="center">R</td><td>rx_space<br>�0� = RX_FIFO is full<br>�1� = RX_FIFO is empty (can receive data)</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>idle<br>�0� = When either the encryption or decryption function is busy processing data. Also when the<br>key registers are written, while the inverse key is calculated (taking 12 clock cycles)<br>�1� = ECB_AES module is idle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 1 0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%200_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[255:224]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 1 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[223:192]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 1 2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%202_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[191:160]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 1 3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C001C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%203_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>KEY1[159:128]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 1 4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%204_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[127:96]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 1 5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%205_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[95:64]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 1 6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%206_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[63:32]<br>Byte reversed word of key 1 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 1 3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%201%203_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 1 3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY1[31:0]<br>Byte reversed word of key 1 (See section 5)<br>Writing this register also triggers inverse key generation, so this register should be written last when writing a key.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 2 0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%200_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[255:224]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 2 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[223:192]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 2 2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%202_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[191:160]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 2 3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%203_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[31:0]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 2 4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%204_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[127:96]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 2 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[95:64]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 2 6</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0048</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%206_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 6_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[63:32]<br>Byte reversed word of key 2 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 2 7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C004C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%202%207_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 2 7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY2[31:0]<br>Byte
reversed word of key 2 (See section 5) Writing to this register also
triggers the inverse key generation so this register should be written
to last when writing a key.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 3 0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%200_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[255:224]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 3 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[223:192]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 3 2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%202_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[191:160]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 3 3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%203_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[159:128]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 3 7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%207_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[127:96]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 3 7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%207_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[95:64]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 3 7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0068</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%207_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[63:32]<br>Byte reversed word of key 3 (See section 5)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/Key 3 7</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C006C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Key%203%207_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Key 3 7_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>KEY3[31:0]<br>Byte
reversed word of key 3 (See section 5) Writing to this register also
triggers the inverse key generation so this register should be written
to last when writing a key.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/RX Data In</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C007C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RX%20Data%20In_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RX Data In_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>RX Data In<br>On a little endian system, data can be copied from a source buffer directly to these write only registers in blocks of 16-bytes.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/TX Data out</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C008C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TX%20Data%20out_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TX Data out_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>TX Data out<br>On
a little endian system, data can be copied from these read only
registers directly to a destination buffer in blocks of 16-bytes.<br>XTS/CBC Initialisation Vector Low</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/XTS/CBC Initialisation Vector Low</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0090</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('XTS/CBC%20Initialisation%20Vector%20Low_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="XTS/CBC Initialisation Vector Low_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>init_vect_ip<br>Initialisation Vector (bits 31 downto 0).</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/XTS/CBC Initialisation Vector High</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0094</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('XTS/CBC%20Initialisation%20Vector%20High_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="XTS/CBC Initialisation Vector High_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field4</td><td align="center">31:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>init_vect_ip<br>Initialisation Vector (bits 47 downto 32).</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CIPHER/NRW BLKS in wide</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459C0098</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('NRW%20BLKS%20in%20wide_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="NRW BLKS in wide_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field4</td><td align="center">31:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">W</td><td>Reinit wide blks<br>�1� = The CBC IV shall be reinitialized (to utilize the next LBA) on a wide block boundary<br>�0� = The chaining shall occur across the entire data set</td></tr>
<!--No iButton support on K149-->

<!--SUBBLOCK,IBUTTON-->

<!--BASE,0xD0000-->

<!--DESCRIPTION,iButton  Registers; port address 13-->

<!--#include "sata_ibutton.reg"-->

<tr><td align="center">Field0</td><td align="center">8:0</td><td align="center">0x20</td><td align="center">R/W</td><td>nrw_blks_in_wide<br>The number of 128 bit narrow blocks in a wide block, default = 2**5 = 32 as 32 * 128 bits = 4096 bits = 512 bytes = 1 sector.</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">CORE</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x459E0000...0x459DFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">SATA CORE Registers port 14</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Data Mux Debug 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Provides information about the Data mux block in the SATA core. This is mainly used by ASIC for debug.<br>Each field is 4 bits wide one bit per port, where LSB is port0.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Data%20Mux%20Debug%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Data Mux Debug 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field30</td><td align="center">31:30</td><td align="center">0x3</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field28</td><td align="center">29:28</td><td align="center">0x3</td><td align="center">R</td><td>Port_idle_int, internal port idle.</td></tr>
<tr><td align="center">Field26</td><td align="center">27:26</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">25:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Direct
Data directions from ports. This is the direction from the port and
could be different then the overall data direction in some RAID modes.</td></tr>
<tr><td align="center">Field22</td><td align="center">23:22</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field20</td><td align="center">21:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Port_dd_int,
Internal data direction. This is the resample data direction every time
port has been reprogrammed and the end_of_block is received from the
raid controller.</td></tr>
<tr><td align="center">Field18</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">17:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Port
has gone idle. This is an internal signal to the ram_ctrl block and
indicates when a port has gone idle for the current data command. (A
new command may or may not have been issued to the same port.).</td></tr>
<tr><td align="center">Field14</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field12</td><td align="center">13:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Port ready, Ready from FIS-eng. A command has been issued to the port and it�s requesting a data transfer.</td></tr>
<tr><td align="center">Field10</td><td align="center">11:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">9:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Ram enables. This is set only when super_mux block is accessing the RAMs, either in RAID or JBOD mode.</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">0x3</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">5:4</td><td align="center">0x3</td><td align="center">R</td><td>Ram idles during Read from disk. If zero RAM has some data in it.</td></tr>
<tr><td align="center">Field2</td><td align="center">3:2</td><td align="center">0x3</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0x3</td><td align="center">R</td><td>Ram idles during Write to disk. If zero RAM has some data in it.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/RAID Set</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Active host ports.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RAID%20Set_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RAID Set_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field2</td><td align="center">31:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0x3</td><td align="center">R/W</td><td>Raid Set<br>Each
bit represents a physical active host port / disk. Each bit is set if
that host port is used by the RAID mode regardless of failed disks.
This register must be valid at all times.<br>Table 127 � RAID set Register<br>DM Debug 2</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Data Mux Debug2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Provides information about the Data mux block in the SATA core. This is mainly used by ASIC for debug.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Data%20Mux%20Debug2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Data Mux Debug2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">0x1</td><td align="center">R</td><td>End of command</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">0x0</td><td align="center">R</td><td>Ucode rebuild.</td></tr>
<tr><td align="center">Field29</td><td align="center">29</td><td align="center">0x0</td><td align="center">R</td><td>Dm_da_ready</td></tr>
<tr><td align="center">Field28</td><td align="center">28</td><td align="center">0x0</td><td align="center">R</td><td>Da_dm_valid</td></tr>
<tr><td align="center">Field27</td><td align="center">27</td><td align="center">0x0</td><td align="center">R</td><td>Raid unaligned</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x0</td><td align="center">R</td><td>Non sequential commands</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">R</td><td>Rebuild enable</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">R</td><td>Ucode_rebuild_end</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">R</td><td>Ucode_rebuild_start</td></tr>
<tr><td align="center">Field20</td><td align="center">22:20</td><td align="center">0x0</td><td align="center">R</td><td>Number of cached sectors to AHB interface.</td></tr>
<tr><td align="center">Field18</td><td align="center">19:18</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">17:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Mux_sel_xor. Set by raid controller to XOR the write data to that port.</td></tr>
<tr><td align="center">Field14</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field12</td><td align="center">13:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Mux_write_ram. Set by raid controller to write to RAMs.</td></tr>
<tr><td align="center">Field10</td><td align="center">11:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">9:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Mux_stripe_usage. Set at the end of a block for ram controller to update the RAM pointers.</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Mux_sel_read. Set by raid controller to Read RAMs/ports.</td></tr>
<tr><td align="center">Field2</td><td align="center">3:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Mux_sel_write. Set by raid controller to Write to ports.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Stripe Size</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Stripe
size in sectors. Used in striped RAID mode (e.g. RAID 0). uCode must be
written to use this register for it to have any effect. Stripe size can
be read in a uCode program from bit 9 in the RAID config source.<br>NOTE: There is really only 1 live bit in this register, bit 7. bit 0 = not bit7</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Stripe%20Size_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Stripe Size_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field8</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">0x80</td><td align="center">R/W</td><td>0x80 = 128 sectors(64Kbytes)<br>0x01 = 1 sector</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Data count port0 to port1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Counts
the actual data transferred to/from a host port. This is used in AHB
interface for HW to calculate the data reside for USB compliancy.<br>NOTE: It does not count the parity sector in RAID1.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Data%20count%20port0%20to%20port1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Data count port0 to port1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">46:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">23:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Data count port. Data transferred to/from a port.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Port Map Table #0-#3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Destination Port  &amp; PM Port lookup table for eSATA. N is the register number (0-3)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Port%20Map%20Table%20#0-#3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Port Map Table #0-#3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field28</td><td align="center">31:28</td><td align="center">0x0</td><td align="center">R/W</td><td>Destination PM value mapped to incoming port 4N+3</td></tr>
<tr><td align="center">Field24</td><td align="center">27:24</td><td align="center">0x0</td><td align="center">R/W</td><td>Destination Port mapped to incoming port 4N+3</td></tr>
<tr><td align="center">Field20</td><td align="center">23:20</td><td align="center">0x0</td><td align="center">R/W</td><td>Destination PM value mapped to incoming port 4N+2</td></tr>
<tr><td align="center">Field16</td><td align="center">19:16</td><td align="center">0x0</td><td align="center">R/W</td><td>Destination Port mapped to incoming port 4N+2</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">0x0</td><td align="center">R/W</td><td>Destination PM value mapped to incoming port 4N+1</td></tr>
<tr><td align="center">Field8</td><td align="center">11:8</td><td align="center">0x0</td><td align="center">R/W</td><td>Destination Port mapped to incoming port 4N+1</td></tr>
<tr><td align="center">Field4</td><td align="center">7:4</td><td align="center">0x0</td><td align="center">R/W</td><td>Destination PM value mapped to incoming port 4N</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">0x0</td><td align="center">R/W</td><td>Destination Port mapped to incoming port 4N</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Interrupt Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status of interrupts from all the ports. Writing �1� to bits in the status register clears that particular interrupt.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>RAW version of bits 15:0</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">0x0</td><td align="center">R/W</td><td>Raid Port IRQ and interrupt</td></tr>
<tr><td align="center">Field12</td><td align="center">21:12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>AtA SGDMA idle IRQ and interrupt:.(AHB mode only)<br>When
set, the command has finished and all the data has been transferred (if
data command) or there has been an error on a Hostport.<br>No JBOD Ucode<br>CARRIAGERETURN:JBOD Ucode<br>CARRIAGERETURN:Bit 8:  Host/Channel  0./1<br>Bit 9:   Resereved<br>Bit 10: Resereved<br>Bit 11: Resereved<br>CARRIAGERETURN:Bit 8: Host/Channel  0.<br>Bit 9: Host/Channel  1<br>Bit 10: Resereved<br>Bit 11: Resereved</td></tr>
<tr><td align="center">Field3</td><td align="center">7:3</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>Device Port IRQ and interrupt, (has to cleared in the device port register, not in here)</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>Host Port 1 IRQ and interrupt, (has to cleared in the host port register, not in here)</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>Host Port 0 IRQ and interrupt, (has to cleared in the host port register, not in here)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Interrupt Enable Set</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Writing �1� to a bit in this register enables that interrupt. Writing 0 to any bit in this register has no effect.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Enable%20Set_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Enable Set_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Interrupt enable set (see above for interrupt definitions) � Set bit to enable interrupt � self clearing bit</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Interrupt Enable Clear</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Writing �1� to a bit in this register disables that interrupt. Writing 0 to any bit in this register has no effect.<br>NOTE: Reading this register will give the same results as Interrupt Enable Set.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Enable%20Clear_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Enable Clear_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Interrupt clear set (see above for interrupt definitions) � Set bit to disable interrupt � self clearing bit</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Core CTRLR version</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Reports the value of the generics used to build the core. These generics define the cores capabilities and supported features<br>CARRIAGERETURN:VHDL Generic</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Core%20CTRLR%20version_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Core CTRLR version_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">&nbsp;</td><td align="center">R</td><td>�1� = FPGA build<br>0� = ASIC build<br>CARRIAGERETURN:G_BUILD_TYPE</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">0x1</td><td align="center">R</td><td>�1� = Signifies the core has a microcode engine<br>�0� = Contains only traditional RAID capabilities<br>CARRIAGERETURN:G_UCODE_RAID</td></tr>
<tr><td align="center">Field28</td><td align="center">29:28</td><td align="center">&nbsp;</td><td align="center">R</td><td>'00' = AHB slave IF<br>'01' = EDP IF<br>'10' = AHB JBOD IF<br>'11' = Reserved<br>CARRIAGERETURN:G_DATA_EXTN_IF</td></tr>
<tr><td align="center">Field26</td><td align="center">27:26</td><td align="center">0x3</td><td align="center">R</td><td>'00' = No Phy<br>'01' = Samsung Phy<br>'10' = Silicon Image Phy<br>'11' = Synopsys Phy<br>CARRIAGERETURN:G_SELECT_PHY_IP</td></tr>
<tr><td align="center">Field20</td><td align="center">25:20</td><td align="center">0x3</td><td align="center">R</td><td>Bit 0 = �1� = All host/RAID ports contain a window function<br>Bit 0 = �0� = No host/RAID ports contains a window function<br>Bit 1 = �1� = All host ports can perform port multiplier striping<br>Bit 1 = �0� = All host ports cannot perform port multiplier striping<br>All other bits are reserved for future use.<br>CARRIAGERETURN:G_PORT_FEATURES</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x1</td><td align="center">R</td><td>�1� = The SATA core instantiates a CIPHER core<br>�0� = The SATA core does not instantiate a CIPHER core<br>CARRIAGERETURN:G_CIPHER</td></tr>
<tr><td align="center">Field16</td><td align="center">18:16</td><td align="center">0x3</td><td align="center">R</td><td>A binary representation of number of ports, min 1 to max 7<br>CARRIAGERETURN:G_NUM_PORTS</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">0x4</td><td align="center">R</td><td>An integer derived from a conversion of a bit vector of length ((2*G_NUM_PORTS) - 1) downto 0).<br>2 Bits of the vector are used to define each port, valid values are:<br>C_HOST_PORT    = 0<br>C_DEVICE_PORT = 1<br>C_DUAL_PORT     = 2<br>The 2 LSB's define port 0<br>CARRIAGERETURN:G_PORT_DEFINITION</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/V2P MAP interface 0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>NOTE:
There are lots of illegal values possible in the mapping registers. You
have to be very careful when programming. V2P MAP registers are always
programmed in pairs.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('V2P%20MAP%20interface%200_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="V2P MAP interface 0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field2</td><td align="center">31:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0x1</td><td align="center">R/W</td><td>Virtual to Physical MAP for interface (port) 0<br>'01' = Physical Interface / port 0<br>'10' = Physical Interface / port 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/V2P MAP interface 1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('V2P%20MAP%20interface%201_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="V2P MAP interface 1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field2</td><td align="center">31:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0x2</td><td align="center">R/W</td><td>Virtual to Physical MAP for interface (port) 1<br>'01' = Physical Interface / port 0<br>'10' = Physical Interface / port 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Rebuild Enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>If a
bit is set in this register, it indicates to the RAID controller and
the Super MUX that the next command written to the RAID port (15)
registers is a Rebuild command. CAUTION: It is only safe to modify this
value when the uCode RAID calculator is IDLE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Rebuild%20Enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Rebuild Enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">30:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>Rebuilds<br>�1� = Enabled<br>�0� = Disabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/FailedPort_r</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>If a bit is set in this register, it indicates this port is not valid for READS when using the RAID controller</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FailedPort_r_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FailedPort_r_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field2</td><td align="center">31:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0x0</td><td align="center">R/W</td><td>One-Hot representation of the failed port<br>'01' = Physical Interface / port 0<br>'10' = Physical Interface / port 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/FailedPort_w</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>If a bit is set in this register, it indicates this port is not valid for WRITES when using the RAID controller</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FailedPort_w_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FailedPort_w_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field2</td><td align="center">31:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0x0</td><td align="center">R/W</td><td>One-Hot representation of the failed port<br>'01' = Physical Interface / port 0<br>'10' = Physical Interface / port 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/SATA Core Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Provides SATA core operation parameters.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20Core%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA Core Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field25</td><td align="center">31:25</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">25:24</td><td align="center">0x0</td><td align="center">R/W</td><td>SuperMUX Port Idle Override<br>'01' = Force Physical port 0 IDLE (in SuperMUX)<br>'10' = Force Physical port 1 IDLE (in SuperMUX)<br>Multiple bits can be set in this register. Used when port is being aborted.</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field21</td><td align="center">22:21</td><td align="center">0x0</td><td align="center">R/W</td><td>S2S Locked Port<br>Something to do with NCQ</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">R/W</td><td>S2S CORE Error Override Value<br>�1� = Error<br>�0� = No error</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">R/W</td><td>S2S CORE Error Override Enable<br>�1� = Use bit 20 as 'host_port_error' input to device port<br>�0� = Use RAID port (15) error output as 'host_port_error' input to device port</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">R/W</td><td>AHB to Device port enable. Enables the path between AHB and the Device port in s2s mode.</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">W</td><td>Clear parity error. SW needs to clear the parity error bit before starting a new command. This bit is self-cleared.</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">R/W</td><td>Parity Error Mask.<br>If
there is a Parity check error during a READ command the RAID Port
registers (15) will indicate an error. NOTE: Not all RAID modes (uCode
programs) support parity checking.<br>�1� � Parity check errors will be masked out<br>�0� � Parity check errors will be reported</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">0x0</td><td align="center">R</td><td>SATA2SATA enable Raid port.</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">0x0</td><td align="center">R/W</td><td>SATA2SATA config<br>�0� = AHB mode<br>�1� = eSATA mode</td></tr>
<tr><td align="center">Field2</td><td align="center">13:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0x0</td><td align="center">R/W</td><td>SATA2SATA host port status enable<br>By
setting bits in this field you are allowing that host port send status
back to the device port. For RAID operations NO bits are set, for JBOD
the active host ports need their respective bit set. Bit 0 corresponds
to host port 0 etc.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/AHB Debug Slave IF</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Provides information about the AHB slave block in the SATA core.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('AHB%20Debug%20Slave%20IF_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="AHB Debug Slave IF_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field11</td><td align="center">33:11</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x1</td><td align="center">R</td><td>Dm_cipher_idle</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">R</td><td>Data direction.</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x1</td><td align="center">R</td><td>Port idle internal</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">R</td><td>Clear force</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">0x1</td><td align="center">R</td><td>Raid calc idle</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">0x0</td><td align="center">R</td><td>Registered raid force idle</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x0</td><td align="center">R</td><td>Registered raid_eoc</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x0</td><td align="center">R</td><td>Ahb_da_valid</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R</td><td>Da_ahb_ready</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x1</td><td align="center">R</td><td>Hready from external DMA engine.</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R</td><td>DMA abort.</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x1</td><td align="center">R</td><td>AHB IF idle.</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Pad debug. This bit gets set if AHB interface is padding data to the port or DMA engine to finish off a transfer.</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R</td><td>DMA EOT from external DMA engine.</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x1</td><td align="center">R</td><td>Host ports idle.</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R</td><td>DMA request. If set AHB interface is requesting a DMA transfer.</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>AHB FIFO fill level.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/AHB Debug JBOD</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Provides information about the AHB slave block in the SATA core.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('AHB%20Debug%20JBOD_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="AHB Debug JBOD_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field28</td><td align="center">31:28</td><td align="center">&nbsp;</td><td align="center">R</td><td>DMA dreq, one bit per  hostport:<br>Bit-28 = Hostport 0<br>Bit-29 = Hostport 1<br>Bit-30/31 = Reserved</td></tr>
<tr><td align="center">Field27</td><td align="center">27</td><td align="center">0x0</td><td align="center">R</td><td>Data in progress (gets set on a Data Command)</td></tr>
<tr><td align="center">Field26</td><td align="center">26</td><td align="center">0x1</td><td align="center">R</td><td>Pipe idle, used during Read CMDs. During a Write CMD it�s always 1.</td></tr>
<tr><td align="center">Field25</td><td align="center">25</td><td align="center">0x0</td><td align="center">R</td><td>Active port. Port is active for a data transfer.</td></tr>
<tr><td align="center">Field24</td><td align="center">24</td><td align="center">0x0</td><td align="center">R</td><td>End of frame</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">R</td><td>Data direction</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x1</td><td align="center">R</td><td>Host ports idle</td></tr>
<tr><td align="center">Field20</td><td align="center">20</td><td align="center">0x0</td><td align="center">R</td><td>Dma abort</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x0</td><td align="center">R</td><td>Registered dma_eot</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x1</td><td align="center">R</td><td>AHB if idle</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">R</td><td>Registered dma eof</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">R</td><td>DMA dreq internal</td></tr>
<tr><td align="center">Field12</td><td align="center">15:12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Dma in progress signal from DMA engine.</td></tr>
<tr><td align="center">Field8</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>AHB context grant. One bit per host port.</td></tr>
<tr><td align="center">Field4</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>AHB context request. One bit per host port.</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>AHB FIFO fill level.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/PAD Counter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Several functions associated with AHB access (for USB use)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PAD%20Counter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PAD Counter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">0x0</td><td align="center">R</td><td>Pad ./ Packed</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">0x0</td><td align="center">R</td><td>DMA data length &gt; SATA data length</td></tr>
<tr><td align="center">Field29</td><td align="center">29</td><td align="center">0x0</td><td align="center">R</td><td>Direction<br>�1� � Write to disk<br>�0� - Read from disk</td></tr>
<tr><td align="center">Field25</td><td align="center">28:25</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">23:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Pad counter. Number of mismatched bytes. Max data transfer size is 32Mbytes-1.<br>THIS IS DELIBERATELY LEFT BLANK<br>Device Control</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Device Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0068</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Provides SATA core operation parameters.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Device%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Device Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">0x0</td><td align="center">R/W</td><td>AHB
idle override. This is to allow software to setup the DMA engine for a
big transfer and split SATA commands into smaller block sizes. SOFTWARE
ORB SPLITTING</td></tr>
<tr><td align="center">Field30</td><td align="center">30</td><td align="center">0x0</td><td align="center">R/W</td><td>Mask
pad counter register. By default the pad counter register is masked off
during ATAPI data transfers. Software can disable mask in ATAPI mode if
this bit is set to one.</td></tr>
<tr><td align="center">Field29</td><td align="center">29</td><td align="center">0x0</td><td align="center">R/W</td><td>ATA ERROR override value.( This is the error bit to OCP)</td></tr>
<tr><td align="center">Field28</td><td align="center">28</td><td align="center">0x0</td><td align="center">R/W</td><td>ATA ERROR override enable.</td></tr>
<tr><td align="center">Field26</td><td align="center">27:26</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">25:24</td><td align="center">0x0</td><td align="center">R</td><td>Isolate RAMs. Gates off the port ready to data_mux block.</td></tr>
<tr><td align="center">Field22</td><td align="center">23:22</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field20</td><td align="center">21:20</td><td align="center">0x0</td><td align="center">R</td><td>Data in RAMs, if set there is some data in RAMs:<br>'01' = RAM 0<br>'10' = RAM 1</td></tr>
<tr><td align="center">Field19</td><td align="center">19</td><td align="center">0x1</td><td align="center">R/W</td><td>Read all host ports. (RESERVED?)</td></tr>
<tr><td align="center">Field18</td><td align="center">18</td><td align="center">0x0</td><td align="center">R/W</td><td>Pause AHB. Used in debug mode during read from disk</td></tr>
<tr><td align="center">Field17</td><td align="center">17</td><td align="center">0x0</td><td align="center">R/W</td><td>Stop data transfer to host (eSATA/1394/USB). If this bit is set no data will get transferred to the host.</td></tr>
<tr><td align="center">Field16</td><td align="center">16</td><td align="center">0x0</td><td align="center">R/W</td><td>Pad pattern. If set forces the data plane to pad known pattern to disk and the host.<br>During normal data transfer:<br>To Disk during Wrtie by AHB interface: 0xDEAD000D<br>To Host during Read by AHB interface: 0xDEAD000A<br>During abort :<br>To Disk during Wrtie by DA in S2S       : 0xDEAD00AB<br>To Disk during Wrtie by DM  to port 0:  : 0xDEAD00D0<br>To Disk during Wrtie by DM  to port 1:  : 0xDEAD00D1<br>To Disk during Wrtie by DM  to port 2:  : 0xDEAD00D2<br>To Disk during Wrtie by DM  to port 3:  : 0xDEAD00D3</td></tr>
<tr><td align="center">Field14</td><td align="center">15:14</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field12</td><td align="center">13:12</td><td align="center">0x0</td><td align="center">W</td><td>Data
mux,RAM Reset � Set multiple bits to reset more than one port. Self
clearing. This bit has to be set at the same time as PORT reset (11:8)
after SW clearing the data_mux port abort.<br>'01' = Interface / port 0<br>'10' = Interface / port 1</td></tr>
<tr><td align="center">Field10</td><td align="center">11:10</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">9:8</td><td align="center">0x0</td><td align="center">W</td><td>Data
mux,Port Reset - Set multiple bits to reset more than one port. Self
clearing. This bit has to be set at the same time as RAM reset (15:12)
after SW clearing the data_mux port abort.<br>'01' = Interface / host port 0<br>'10' = Interface / host port 1</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">5:4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Data mux,Port Abort - Set multiple bits to abort more than one port. This will service the port until it goes idle.<br>'01' = Interface / host port 0<br>'10' = Interface / host port 1</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x1</td><td align="center">R/W</td><td>Pad enable. SW has the ability to disable the padding to disk if necessary.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>DMA
abort. Set by SW in order to terminate the current DMA in progress. The
ATA core will allow the command to complete as normal, but will not
request or send any data across the AHB interface, thus allowing the
DMA engine to be cleared down in order to restart normal operation.
This bit should be cleared for normal operation.<br>Setting this bit will clear the internal data buffer and force the AHB interface into idle.</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>ATA_IDLE override value</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>ATA IDLE override enable<br>Table 145 � Device Control<br>Excess</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Excess</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E006C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Excess Function Register for USB Test Cases.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Excess_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Excess_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R</td><td>Test13: When �1� data excess required by core on a write.</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R</td><td>Test 7: When �1� data excess from core on a read.</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>Test 11: When �1� excess data supplied to core on a write.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>Test 5: When �1� excess data requested from core on a read.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Disk Size Lower</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0070</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The Lower 32-bits of a 48-bit disk size (in sectors)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Disk%20Size%20Lower_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Disk Size Lower_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Disk size (in sectors) for spanning application bits 31:0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Disk Size Upper</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0074</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The upper 16-bits of a 48-bit disk size (in sectors)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Disk%20Size%20Upper_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Disk Size Upper_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Disk size (in sectors) for spanning application bits 47:32</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Port Error Mask</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0078</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>n = number of host ports</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Port%20Error%20Mask_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Port Error Mask_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field31</td><td align="center">60:31</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Fieldn</td><td align="center">n</td><td align="center">0x0</td><td align="center">R/W</td><td>Device port error mask</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>Host Port error Masks</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Idle Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E007C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>�0� = Busy, �1� = Idle.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Idle%20Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Idle Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field28</td><td align="center">31:28</td><td align="center">0xF</td><td align="center">R</td><td>CONTEXT HOST PORT IDLE<br>CARRIAGERETURN:27:24<br>CARRIAGERETURN:4<br>CARRIAGERETURN:0XF<br>CARRIAGERETURN:UCODE_JBOD_IDLE, One bit per host port.</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field18</td><td align="center">22:18</td><td align="center">0x1F</td><td align="center">R</td><td>PORT_IDLE<br>22 = Device Port<br>21:18 = Host Ports</td></tr>
<tr><td align="center">Field15</td><td align="center">17:15</td><td align="center">0x5</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">14:13</td><td align="center">0x3</td><td align="center">R</td><td>HOST PORT_WIN_IDLE</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x1</td><td align="center">R</td><td>RAID_PORT_REG_IDLE</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x1</td><td align="center">R</td><td>RAID_WIN_IDLE</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x1</td><td align="center">R</td><td>NOT RAID_FORCE_IDLE</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x1</td><td align="center">R</td><td>RAID_CALC_IDLE</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x1</td><td align="center">R</td><td>CORE_CTRL_IDLE</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x1</td><td align="center">R</td><td>HOST_PORTS_IDLE</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x1</td><td align="center">R</td><td>DM_CIPHER_IDLE</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x1</td><td align="center">R</td><td>CIPHER_IDLE</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x1</td><td align="center">R</td><td>DM_IDLE</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x1</td><td align="center">R</td><td>ATA_IDLE_DA</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x1</td><td align="center">R</td><td>AHB_IF_IDLE</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x1</td><td align="center">R</td><td>ATA IDLE</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">R</td><td>AND Idle<br>The AND reduced form of all IDLE�s above.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/DM DEGUG PTR0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DM DEGUG PTR0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DM%20DEGUG%20PTR0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DM DEGUG PTR0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/DM DEGUG PTR1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0084</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DM DEGUG PTR1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DM%20DEGUG%20PTR1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DM DEGUG PTR1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td><br>DA DP CTRL</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/DA DP CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E00A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>All these controls only work during a DMA_ABORT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DA%20DP%20CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DA DP CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field4</td><td align="center">31:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">RW</td><td>Abort Pattern<br>�1� = Inserts the pattern x'0B1DFACE' on bits 31:0</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">RW</td><td>TAG Insert<br>�1� = Insert TAG data</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">RW</td><td>TAG data<br>Data to be added to bits 33:32 of data path (CRC Error and EOT tag)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/DATA PLANE CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E00AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DATA PLANE CTRL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DATA%20PLANE%20CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DATA PLANE CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field12</td><td align="center">13:12</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sector size. A sector complete pulse is generated every sector, sync to the last data being transferred.<br>'00' : 512 bytes.<br>'01' : 1K<br>'10' : 2K<br>'11' : 4K</td></tr>
<tr><td align="center">Field11 </td><td align="center">14:11 </td><td align="center">&nbsp;</td><td align="center">R/W</td><td>ATA error mask for JBOD mode only. One bit per host:port:<br>Bit-8 : Host port 0<br>Bit-9 : Host port 1<br>Bit-10 : Reserved<br>Bit-10 : Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">7:4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Hostport idle to DM mask register.  One bit per host port<br>Software sets this to force idle to DM.</td></tr>
<tr><td align="center">Field2</td><td align="center">3:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved.</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>If set enables the FIS switching mode on for AHB to/from Host-ports for NAS.<br>Use in conjunction with AHB_JBOD UCODE program ONLY.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">RW</td><td>HW SuperMux Auto data plane access.<br>�1� = Single LUN HW_JBOD data plane access under SuperMux control.<br>�0�
= Ucode JBOD, Forces RAID_CALC_IDLE to be idle and forces an override
state within SuperMUX. In conjunction with Ucode JBOD program ONLY.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/DM TAG CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E00B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>DM TAG CTRL</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DM%20TAG%20CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DM TAG CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">RW</td><td>TAG Insert for host port 3.<br>�1� = Insert TAG data.</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">RW</td><td>TAG Insert for host port 2.<br>�1� = Insert TAG data.</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">RW</td><td>TAG Insert for host port 1.<br>�1� = Insert TAG data.</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">RW</td><td>TAG Insert for host port 0.<br>�1� = Insert TAG data.</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">0x0</td><td align="center">RW</td><td>DM TAG Data for host port 3.<br>Data to be added to bits 33:32 of data path to DA (CRC Error and EOT tag)</td></tr>
<tr><td align="center">Field4</td><td align="center">5:4</td><td align="center">0x0</td><td align="center">RW</td><td>DM TAG Data for host port 2.<br>Data to be added to bits 33:32 of data path to DA (CRC Error and EOT tag)</td></tr>
<tr><td align="center">Field2</td><td align="center">3:2</td><td align="center">0x0</td><td align="center">RW</td><td>DM TAG Data for host port 1.<br>Data to be added to bits 33:32 of data path to DA (CRC Error and EOT tag)</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0x0</td><td align="center">RW</td><td>DM TAG Data for host port 0.<br>Data to be added to bits 33:32 of data path to DA (CRC Error and EOT tag)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/CONTEXT MASK</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E00B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CONTEXT MASK</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CONTEXT%20MASK_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CONTEXT MASK_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field29</td><td align="center">31:29</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">28:24</td><td align="center">0x0</td><td align="center">RW</td><td>Context host port idle override value</td></tr>
<tr><td align="center">Field21</td><td align="center">23:21</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">12:8</td><td align="center">0x0</td><td align="center">RW</td><td>Context host port idle override enable<br>0 � Normal<br>1 � Override context host port idle with value above</td></tr>
<tr><td align="center">Field13</td><td align="center">15:13</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">12:8</td><td align="center">0x0</td><td align="center">RW</td><td>Context host port error override value</td></tr>
<tr><td align="center">Field5</td><td align="center">7:5</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0x0</td><td align="center">RW</td><td>Context host port error override enable<br>0 � Normal<br>1 � Override context host port error with value above<br>DATA PLANE STATUS</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/DATA PLANE STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E00B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DATA%20PLANE%20STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DATA PLANE STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field4</td><td align="center">31:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved.</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">0xF</td><td align="center">RW</td><td>ATA SGDMA idle, one bit per hostport/Channel.(AHB mode only)<br>When
set, the command has finished and all the data has been transferred (if
data command) or there has been an error on a Hostport.<br>No JBOD Ucode<br>CARRIAGERETURN:JBOD Ucode<br>CARRIAGERETURN:Bit 0:  Host/Channel  0./1<br>Bit 1:   Resereved<br>Bit 2: Resereved<br>Bit 3: Resereved<br>CARRIAGERETURN:Bit 0: Host/Channel  0.<br>Bit 1: Host/Channel  1<br>Bit 2: Resereved<br>Bit 3: Resereved<br>Reverse Port Map Tables</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/REV_PM_TABLE #n</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E00FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Note: 0xC0 = PORT 0, 0xC4 = PORT1, 0xFC = Port 15 (RAID port)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('REV_PM_TABLE%20#n_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="REV_PM_TABLE #n_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field26</td><td align="center">31:26</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field24</td><td align="center">25:24</td><td align="center">0x0</td><td align="center">RW</td><td>Device port context PM # 3</td></tr>
<tr><td align="center">Field17</td><td align="center">22:17</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">17:16</td><td align="center">0x0</td><td align="center">RW</td><td>Device port context PM # 2</td></tr>
<tr><td align="center">Field10</td><td align="center">15:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">9:8</td><td align="center">0x0</td><td align="center">RW</td><td>Device port context PM # 1</td></tr>
<tr><td align="center">Field2</td><td align="center">7:2</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0x0</td><td align="center">RW</td><td>Device port context PM # 0<br>Registers
from this point are uCode registers. They are mainly for debug purposes
only and most are READ only via APB. Obviously they are R/W from uCode
programs<br>Program Counter</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Program Counter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The Program Counter of the uCode RAID calculator</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Program%20Counter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Program Counter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field10</td><td align="center">31:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">9:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Program Counter</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R0 Lower</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The Lower 32-bits of a 48-bit register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R0%20Lower_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R0 Lower_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 31:0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R0 Upper</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The upper 16-bits of a 48-bit  register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R0%20Upper_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R0 Upper_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 47:32</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R1 Lower</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E010C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The Lower 32-bits of a 48-bit disk register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1%20Lower_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1 Lower_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 31:0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R1 Upper</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The upper 16-bits of a 48-bit  register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R1%20Upper_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R1 Upper_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 47:32</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R2 Lower</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The Lower 32-bits of a 48-bit disk register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2%20Lower_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2 Lower_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 31:0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R2 Upper</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The upper 16-bits of a 48-bit  register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R2%20Upper_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R2 Upper_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 47:32</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R3 Lower</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E011C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The Lower 32-bits of a 48-bit disk register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3%20Lower_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3 Lower_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 31:0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R3 Upper</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The upper 16-bits of a 48-bit  register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R3%20Upper_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R3 Upper_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 47:32</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R4 Lower</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0124</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The Lower 32-bits of a 48-bit disk register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4%20Lower_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4 Lower_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 31:0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R4 Upper</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0128</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The upper 16-bits of a 48-bit  register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R4%20Upper_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R4 Upper_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 47:32</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R5 Lower</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E012C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The Lower 32-bits of a 48-bit disk register<br>CARRIAGERETURN:31:0<br>CARRIAGERETURN:32<br>CARRIAGERETURN:0x00000000<br>CARRIAGERETURN:General Purpose Register bits 31:0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5%20Lower_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5 Lower_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R5 Upper</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0130</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The upper 16-bits of a 48-bit  register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R5%20Upper_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R5 Upper_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 47:32</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R6 Lower</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0134</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The Lower 32-bits of a 48-bit disk register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6%20Lower_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6 Lower_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 31:0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R6 Upper</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0138</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The upper 16-bits of a 48-bit  register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R6%20Upper_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R6 Upper_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 47:32</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R7 Lower</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E013C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The Lower 32-bits of a 48-bit disk register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7%20Lower_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7 Lower_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 31:0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R7 Upper</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The upper 16-bits of a 48-bit  register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R7%20Upper_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R7 Upper_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register bits 47:32</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0144</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>An 8-bit  register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field8</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/R9</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0148</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>An 32-bit  general purpose register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('R9_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="R9_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>General Purpose Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Remainder</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E014C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Remainder following a divide instruction is automatically stored here. Can be used as a GP register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Remainder_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Remainder_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field4</td><td align="center">31:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">3:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Remainder</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Read / Write</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0150</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RAID program sets this register based on the command. This register cannot be used as a GP register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Read%20/%20Write_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Read / Write_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">30:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>Read / Write<br>'0' = Read<br>'1' = Write</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/MUX Wait Override</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0154</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>When
set, if the next instruction is a load MUX, the destination is MUX0 and
the load does not wait for sector complete. This register cannot be
used as a GP register.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MUX%20Wait%20Override_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MUX Wait Override_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">30:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>MUX wait override<br>�1� = Enabled<br>�0� = Disabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/IRQ Mask</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0158</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Each
bit represents an interrupt source. If the bit is set for that source,
an interrupt will occur when that condition is true. Interrupts are
level sensitive. Do we want to make them programmable between edge and
level sensitive? This register is for DBUG purposes only.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('IRQ%20Mask_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="IRQ Mask_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field14</td><td align="center">29:14</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x0</td><td align="center">R</td><td>When set an interrupt will occur when virtual Interface / port 1 has an error</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x0</td><td align="center">R</td><td>When set an interrupt will occur when virtual Interface / port 0 has an error</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R</td><td>When set an interrupt will occur when Data MUX is idle.</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R</td><td>When set an interrupt will occur when the timer reaches zero</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R</td><td>When set an interrupt will occur when a new RAID command is sent</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R</td><td>When set an interrupt will occur when SCOUNTER = 0 AND all ports are idle</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">5:4</td><td align="center">0x0</td><td align="center">R</td><td>AND Port Idle. Set upto 4 bits and an interrupt will occur when all the marked ports are idle.<br>'01' = Interface / port 0<br>'10' = Interface / port 1</td></tr>
<tr><td align="center">Field2</td><td align="center">3:2</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>When set an interrupt will occur when virtual Interface / port 1 is idle</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>When set an interrupt will occur when virtual Interface / port 0 is idle</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/IRQ Address</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E015C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Program store address to jump to if an interrupt occurs.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('IRQ%20Address_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="IRQ Address_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field10</td><td align="center">31:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">9:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>10-bit address</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/RAID unaligned</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0160</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This bit is set when parity caching non aligned transfers. This register is for DBUG purposes only.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RAID%20unaligned_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RAID unaligned_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">30:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">R</td><td>�1� = Enabled<br>�0� = Disabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Sector Counter</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0164</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Sector%20Counter_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Sector Counter_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Remaining number of sectors</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/uCode Rebuild</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0168</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('uCode%20Rebuild_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="uCode Rebuild_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">31:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/uCode Regenerate</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E016C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('uCode%20Regenerate_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="uCode Regenerate_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">31:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td><br>THIS IS DELIBERATELY LEFT BLANK<br>MUX0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/MUX0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0170</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This register can be used to debug programs, looking at what the uCode program has set the MUX values to be</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MUX0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MUX0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field15</td><td align="center">31:15</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">0x0</td><td align="center">R</td><td>parity cache flush</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x0</td><td align="center">R</td><td>end of block<br>A
non-zero value indicates that this LBA is the last LBA of a block. The
read pointers for all ports identified in StripeValidity may then be
updated when this sector completes</td></tr>
<tr><td align="center">Field10</td><td align="center">11:10</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">9:8</td><td align="center">0x0</td><td align="center">R</td><td>stripevalidity<br>This
bit mask defines all ports which are part of the block (data and
parity) relating to this LBA. For all normal modes this is simply those
ports that are active in the current RAID mode.</td></tr>
<tr><td align="center">Field6</td><td align="center">7:6</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">5:4</td><td align="center">0x0</td><td align="center">R</td><td>paritydest<br>If
parity is to be generated during the reception of this sector, this bit
mask states which port the resulting parity is written to. If no parity
is generated during the reception of this sector, this field is zero.</td></tr>
<tr><td align="center">Field2</td><td align="center">3:2</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">1:0</td><td align="center">0x0</td><td align="center">R</td><td>data<br>Bit mask specifying the port that would provide the storage for this LBA</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0174</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This
READ only register is a copy of the one available as source 21 in the
uCode engine but made available to be read by the CPU.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field13</td><td align="center">31:13</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x0</td><td align="center">R</td><td>MUX Override Enable<br>�1� = uCode is overriding the signals to the DM from R7</td></tr>
<tr><td align="center">Field11</td><td align="center">11</td><td align="center">0x0</td><td align="center">R</td><td>Stop DM Dtrans Override Enable<br>�1� = uCode is stopping the DM transferring data</td></tr>
<tr><td align="center">Field10</td><td align="center">10</td><td align="center">0x0</td><td align="center">R</td><td>Bank Override Enable<br>�1� = uCode is overriding the BANK (sector) during a parity cache copy</td></tr>
<tr><td align="center">Field9</td><td align="center">9</td><td align="center">0x0</td><td align="center">R</td><td>Port Data Direction Override enable<br>�1� = uCode is overriding the PORT data directions</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x0</td><td align="center">R</td><td>Port Abort Override enable<br>�1� = uCode is forcing DM Port Abort to be off for all ports.</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>rpg_flag</td></tr>
<tr><td align="center">Field6</td><td align="center">6</td><td align="center">0x0</td><td align="center">R</td><td>Error Override Enable<br>�1� = Override</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R</td><td>RAID Force Idle<br>�1� = then the uCode program is forcing IDLE. Used in Parity caching</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x1</td><td align="center">R</td><td>Time Out<br>�1� = Timer reached zero.</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R</td><td>pcache_en<br>�1� = Parity Caching is enables</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R</td><td>cmd_go_flag<br>�1� = A new command has come in and is waiting to be serviced</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x1</td><td align="center">R</td><td>MUX_EMPTY<br>�1� = There is no valid MUX value in the MUX registers.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x1</td><td align="center">R</td><td>DM_IDLE<br>�1� = Data MUX is IDLE</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/CONFIG OUT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E0178</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This
READ only register is a way for the RAID controller to signal to the
firmware information about its state. The exact meaning of this
register depends on the RAID mode (uCode program). It is destination 29
in the uCode engine.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CONFIG%20OUT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CONFIG OUT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Config OUT</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/RAM STATUS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E017C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This
READ only register is a copy of the one available as source 27 in the
uCode engine but made available to be read by the CPU.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RAM%20STATUS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RAM STATUS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field4</td><td align="center">29:4</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field1</td><td align="center">2:1</td><td align="center">0x0</td><td align="center">R</td><td>Cached Status<br>Each bit in this field corresponds to a host port RAM<br>�1� = Contains Cache Data<br>�0�= Empty</td></tr>
<!--Registers below this point are TRUE APB registers. They can be written to as well as read by the APB. They may be uCode engine sources but they are NOT destinations and cannot be written to by the uCode programs.-->

<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>RAM Bank<br>�1� = high<br>�0� = low</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Breakpoint</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E03D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This
register can be used to debug programs. When programmed with a non-zero
address and the enable bit is set, the uCode engine will run (when
active) to this address and stop. Restarting can be accomplished by
writing a new value into the address field, clearing the enable bit or
setting the Advance register 0x255</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Breakpoint_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Breakpoint_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field31</td><td align="center">31</td><td align="center">0x0</td><td align="center">R/W</td><td>�1� = Breakpoint enabled<br>�0� = Breakpoint disabled</td></tr>
<tr><td align="center">Field10</td><td align="center">30:10</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">9:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Breakpoint program store address</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Config IN</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E03D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Each
bit in this register can be used to control a feature of a uCode
program. What each bit does is entirely dependant on the RAID mode
(uCode program).<br>E.G. A bit could be used to signify a PIO transfer and indicate to the RAID controller not to send a status to the device port.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Config%20IN_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Config IN_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Configuration bits</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Timer VAL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E03DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>This
register specifies the default value the countdown timer is reset to.
The countdown timer is reset at the end of each RAID command. See Timer
for more information.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Timer%20VAL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Timer VAL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field11</td><td align="center">31:11</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">10:0</td><td align="center">0x7FF</td><td align="center">R/W</td><td>Timeout in us</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Rebuild command</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E03E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>The
command to substitute (if Rebuild is set and Rebuild Override Enable is
set) when issuing RAID commands to ports with failedport READ flag set.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Rebuild%20command_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Rebuild command_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field8</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">0x35</td><td align="center">R/W</td><td>Suggested values<br>0x35 = WRITE DMA EXT</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Rebuild command override enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E03E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>If
set, and the RAID mode (uCode) supports it, the RAID will send the
command specified in the previous register instead of the uCode program
default to any host port with a failedport READ flag set during rebuilds</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Rebuild%20command%20override%20enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Rebuild command override enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">30:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>�1� = Enabled<br>�0� = Disabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/CPU go</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E03F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Starts the RAID calculator going if in IDLE state. This is a DBUG register and is not used in SATA</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CPU%20go_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CPU go_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">30:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>�1� = GO<br>�0� = Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/CPU reset</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E03F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Resets the RAID calculator including registers. Self clearing bit</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CPU%20reset_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CPU reset_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">30:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>�1� = Reset<br>�0� = Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Single Stepping Enable</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E03F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Switch to enable Single Stepping of the RAID uCode Engine</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Single%20Stepping%20Enable_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Single Stepping Enable_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">30:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>Single Stepping<br>�1� = Enabled<br>�0� = Disabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/CORE/Single Stepping - Advance</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459E03FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Increments program counter when Single Stepping of the RAID uCode Engine is enabled</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Single%20Stepping%20-%20Advance_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Single Stepping - Advance_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field1</td><td align="center">30:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">W</td><td>Advance (This is a self clearing bit)<br>�1� = Advance<br>�0� = Reserved</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">RAID</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x459F0000...0x459EFFFF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Raid Port Registers port 15</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/ORB1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>First of five registers used to write ATA/ATAPI commands into the device<br>CARRIAGERETURN:ATA6</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ORB1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ORB1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Dev/Head</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">R/W</td><td>�A� bit (see text)</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">R/W</td><td>�I� bit (see text)</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">R/W</td><td>�D� bit (see text)</td></tr>
<tr><td align="center">Field16</td><td align="center">20:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reserved<br>D Direction (NCQ DMA activate FIS &amp; PIO set up FIS only); one of:<br>0�host to device<br>1�device to host<br>I Interrupt; one of:<br>0�no interrupt<br>1�interrupt<br>A Auto activate (NCQ DMA activate FIS only); one of:<br>0�no auto activate<br>1�auto activate<br>Dev/Head Byte written to the ATA device�s Device/Head register prior to command execution</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/ORB2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0004</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Second of five registers used to write ATA/ATAPI commands to the device</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ORB2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ORB2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Status *<br>7 = Busy<br>6 = Device Ready<br>5 = Fault / Stream Error<br>4 = Drive seek complete<br>3 = Data Request<br>2 = Obsolete<br>1 = Obsolete<br>0 = Err / Chk</td></tr>
<tr><td align="center">Field</td><td align="center">-1:</td><td align="center">&nbsp;</td><td align="center">W</td><td>Command</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Error</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sector count (15:8)</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sector Count (7:0)<br>Status bit #0 is the OR combination of D2H_FIS_ERROR, CS_SATA_ERROR &amp; LINK_SERROR (see Table 35 � SATA Control)<br>Sector Count [15:8] High-byte sector count (ATA 6 only)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/ORB3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>ORB3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ORB3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ORB3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LBA (31:24) � sector number ext</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LBA(23:16) � cylinder high</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LBA(15:8) � cylinder low</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LBA(7:0) � sector number</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/ORB4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F000C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>ORB4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ORB4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ORB4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>CONTROL</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Features EXT</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LBA (47:40) � cylinder high ext</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LBA (39:32) � cylinder low ext<br>Features Ext Byte that will be written to the ATA device�s Features Ext register prior to command execution<br>Control 	Byte that will be written to the ATA device�s Control register after all other registers have been written</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/ORB5</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>ORB5</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ORB5_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ORB5_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sector Count (31:24) (optional)</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Sector Count (23:16) (optional)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/RBC1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>First of four registers used to write RBC CDBs into the device</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RBC1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RBC1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 3</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 2</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 1</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 0</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/RBC2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0024</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RBC2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RBC2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RBC2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 7</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 6</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 5</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 4</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/RBC3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0028</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>RBC3</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RBC3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RBC3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 11</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB  10</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 9</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 8</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/RBC4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F002C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Fourth
of four registers used to write RBC CDBs into the device that require
translation. This register is only used for 16-byte commands.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RBC4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RBC4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 15</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB  14</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 13</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>CDB 12<br>NOTE: RBC registers must be written in the order RBC1, RBC2, RBC3 and (if required) RBC4.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/Interrupt Status</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0030</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Writing
�1� to individual bits to the status register clears that particular
interrupt. All bits written to this register are self-clearing.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Status_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Status_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>RAW Version of Interrupts below</td></tr>
<tr><td align="center">Field14</td><td align="center">15:14</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x0</td><td align="center">R</td><td>Window disallow<br>�1� = Command LBA &amp; Sector count totally within a disallowed window</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x0</td><td align="center">R</td><td>Window clip<br>�1� = Command partially within a disallowed window. Clipping occurred.</td></tr>
<tr><td align="center">Field8</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>Register access error � an access was made to the registers when the core was not idle</td></tr>
<tr><td align="center">Field4</td><td align="center">6:4</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>Break Point</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>ATA / Command Error � error in recently completed command and interrupt enabled</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>uCode IRQ</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>End of command �  ATA Core busy (bit 7 Status reg) has negated and interrupt enabled</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/Interrupt Enable Set</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0034</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Setting a bit in this register enables interrupts. Writing 0 to any bit in this register has no effect.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Enable%20Set_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Enable Set_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field14</td><td align="center">31:14</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x0</td><td align="center">R/W</td><td>Window disallow</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x0</td><td align="center">R/W</td><td>Window Clip</td></tr>
<tr><td align="center">Field8</td><td align="center">11:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R/W</td><td>Register access error  interrupt enable</td></tr>
<tr><td align="center">Field4</td><td align="center">6:4</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R/W</td><td>Break Point interrupt enable</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>ATA / Command Error interrupt enable</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>uCode interrupt enable</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R/W</td><td>End of command interrupt enable<br>THIS IS DELIBERATELY LEFT BLANK</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/Interrupt Enable Clear</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0038</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Setting
a bit in this active-high register clears the corresponding interrupt
enable bit. Writing 0 to any bit in this register has no effect.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Interrupt%20Enable%20Clear_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Interrupt Enable Clear_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field14</td><td align="center">31:14</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x0</td><td align="center">R</td><td>Window Disallow error interrupt enable mask</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 = Window Disallow error interrupt DISABLED</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x0</td><td align="center">R</td><td>Window Clip error interrupt enable mask</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 = Window clip error interrupt DISABLED</td></tr>
<tr><td align="center">Field8</td><td align="center">11:8</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>Register access error interrupt enable mask</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 = Register access error interrupt DISABLED</td></tr>
<tr><td align="center">Field4</td><td align="center">6:4</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R</td><td>Break Point interrupt enable mask</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 = Break Point interrupt DISABLED</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R</td><td>ATA Command Error interrupt enable mask</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 = ATA Command Error interrupt DISABLED</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R</td><td>uCode interrupt enable mask</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 = uCode interrupt DISABLED</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>End of command interrupt enable mask</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">W</td><td>1 = End of command interrupt DISABLED</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/Version</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F003C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Core version register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Version_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Version_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field9</td><td align="center">31:9</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field8</td><td align="center">8</td><td align="center">0x1</td><td align="center">R</td><td>HOST_DEVICE_N<br>�1� = HOST<br>�0� = DEVICE</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">0xF3</td><td align="center">R</td><td>Current ATA Core revision number.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/SATA Control</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td></td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SATA%20Control_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SATA Control_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field23</td><td align="center">23</td><td align="center">0x0</td><td align="center">R/W</td><td>FIX_SATA_CTRLR<br>1 = Force state machine to stay in jumped state (use with JUMP_SATA_CTRLR)</td></tr>
<tr><td align="center">Field22</td><td align="center">22</td><td align="center">0x0</td><td align="center">R/W</td><td>JUMP_SATA_CTRLR<br>1 = Force state machine to jump to state code in FORCE_SATA_CTRLR</td></tr>
<tr><td align="center">Field21</td><td align="center">21</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">20:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>SATA_CTRLR_STATE<br>Contains the current state of state machine (see below)</td></tr>
<tr><td align="center">Field16</td><td align="center">20:16</td><td align="center">&nbsp;</td><td align="center">W</td><td>FORCE_SATA_CTRLR_STATE<br>State code value to force state machine into when JUMP_SATA_CTRLR = 1</td></tr>
<tr><td align="center">Field13</td><td align="center">15:13</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field12</td><td align="center">12</td><td align="center">0x0</td><td align="center">R/W</td><td>WIN_ERROR  Error from RAID Port Window Function<br>This error flag is sticky. Write 1 to clear this error.</td></tr>
<tr><td align="center">Field5</td><td align="center">11:5</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R/W</td><td>uCode_COMMAND_ERROR<br>An uCode program has forced an error.<br>This error flag is sticky. Write �1� to clear this error.</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R</td><td>PORTS ERROR<br>Combined error bits from Physical ports. This error must be cleared in the individual ports</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">0x0</td><td align="center">R/W</td><td>PARITY_ERROR<br>This error flag is sticky. Write �1�to clear this error.</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">0x0</td><td align="center">R/W</td><td>D2H_FIS_ERROR<br>Error bit copied from Host port as a result of command completion<br>This error flag is sticky. Write �1� to clear this error.</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/Command</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Contains the execute opcode and status information.</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Command_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Command_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>COMMAND</td></tr>
<tr><td align="center">Field16</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>FEATURES</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field7</td><td align="center">7</td><td align="center">0x0</td><td align="center">R</td><td>RAID / Core busy.<br>�0� = Idle<br>�1� = Busy</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">0x0</td><td align="center">R</td><td>Orb splitting<br>�1� = Active</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">0x0</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">2:0</td><td align="center">0x0</td><td align="center">R/W</td><td>OPCODE<br>'010' = Send a command.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/win_lower_3100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0080</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>First of two register that define the address of the window pointer</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('win_lower_3100_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="win_lower_3100_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field00</td><td align="center">31:00</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Bits 31:00 of address pointer which defines the start of region 1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/win_lower_4732</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0084</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Second of two register that define the address of the window pointer</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('win_lower_4732_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="win_lower_4732_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field00</td><td align="center">23:00</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Bits 47:32 of address pointer which defines the start of region 1 (top 8 bits are zero)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/win_upper_3100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0088</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>First of two register that define the address of the window pointer</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('win_upper_3100_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="win_upper_3100_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field00</td><td align="center">31:00</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Bits 31:00 of address pointer which defines the start of region 2</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/win_upper_4732</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F008C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Second of two register that define the address of the window pointer</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('win_upper_4732_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="win_upper_4732_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field24</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field00</td><td align="center">23:00</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Bits 47:32 of address pointer which defines the start of region 2 (top 8 bits are zero)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/win_ctrl_region0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0090</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Control register for region 0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('win_ctrl_region0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="win_ctrl_region0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LBA Offset register � additional offset added to LBA in region 0</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">0x0</td><td align="center">W</td><td>GLOBAL window function CONT_ERROR (self-clearing)<br>When
window function has paused with an interrupt (when Int_not_error=1),
asserting this bit will cause the Window function to return to IDLE and
assert an ERROR.</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">0x0</td><td align="center">W</td><td>GLOBAL window function CONT_NO_ERROR (self-clearing)<br>When
window function has paused with an interrupt (when Int_not_error=1),
asserting this bit will cause the Window function to return to IDLE
without asserting an error.</td></tr>
<tr><td align="center">Field13</td><td align="center">13</td><td align="center">0x0</td><td align="center">W</td><td>GLOBAL window function SOFTWARE_COMPLETE (self-clearing)<br>When
window function is busty waiting for the command to complete asserting
this bit will cause it to return to idle. The LBA will be de-windowed.</td></tr>
<tr><td align="center">Field12-6</td><td align="center">18:12-6</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field5</td><td align="center">5</td><td align="center">0x0</td><td align="center">R/W</td><td>GLOBAL window function CMD_COMPLETE_MODE<br>When
�0� the window function will complete when the port logic updates the
ORB registers with the D2H status FIS. This mode should be used for
RAID port.<br>When �1� the window function will complete when the port idle is asserted.</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Int_not_error � when set SATA core will generate an interrupt &amp; remain busy until interrupt is cleared<br>Errors
occur if command accesses the region when it has NOT been enabled and
if the command, or a command starts in the region but finishes outside
the region and the clip bit is NOT set</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Encrypt � when set encryption is enabled for the region</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Clip
enable � when set allows commands to be clipped rather than rejected�
an interrupt will be automatically generated when command is clipped</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Region enable � when set enables accesses to region</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>GLOBAL window function enable</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/win_ctrl_region1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0094</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Control register for region 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('win_ctrl_region1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="win_ctrl_region1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LBA Offset register � additional offset added to LBA in region 1</td></tr>
<tr><td align="center">Field5</td><td align="center">15:5</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Int_not_error � when set SATA core will generate an interrupt &amp; remain busy until interrupt is cleared<br>Errors
occur if command accesses the region when it has NOT been enabled and
if the command, or a command starts in the region but finishes outside
the region and the clip bit is NOT set</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Encrypt � when set encryption is enabled for the region</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Clip
enable � when set allows commands to be clipped rather than rejected �
an interrupt will be automatically generated when command is clipped</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Region enable � when set enables accesses to region</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>GLOBAL window function enable (NOTE: Read only � write using region 0)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/win_ctrl_region2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F0098</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Control register for region 2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('win_ctrl_region2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="win_ctrl_region2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>LBA Offset register � additional offset added to LBA in region 2</td></tr>
<tr><td align="center">Field15</td><td align="center">15</td><td align="center">0x0</td><td align="center">R/W</td><td>GLOBAL FIX_WIN_STATE<br>�1� = Force state machine to stay in jumped state (use with force_win_state)</td></tr>
<tr><td align="center">Field14</td><td align="center">14</td><td align="center">0x0</td><td align="center">W</td><td>GLOBAL JUMP_WIN_STATE (self-clearing)<br>�1� = Force state machine to jump to state code in force_win_state</td></tr>
<tr><td align="center">Field13-12</td><td align="center">14:13-12</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field11-8</td><td align="center">14:11-8</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Read � GLOBAL window function STATE<br>Write � GLOBAL force_win_state</td></tr>
<tr><td align="center">Field7-5</td><td align="center">9:7-5</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field4</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Int_not_error � when set SATA core will generate an interrupt &amp; remain busy until interrupt is cleared<br>Errors
occur if command accesses the region when it has NOT been enabled and
if the command, or a command starts in the region but finishes outside
the region and the clip bit is NOT set</td></tr>
<tr><td align="center">Field3</td><td align="center">3</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Encrypt � when set encryption is enabled for the region</td></tr>
<tr><td align="center">Field2</td><td align="center">2</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Clip
enable � when set allows commands to be clipped rather than rejected �
an interrupt will be automatically generated when command is clipped</td></tr>
<tr><td align="center">Field1</td><td align="center">1</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Region enable � when set enables accesses to region</td></tr>
<tr><td align="center">Field0</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R</td><td>GLOBAL window function enable (NOTE: Read only � write using region 0)<br>BACKUP1</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/BACKUP1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F00B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>First of four registers containing a copy of last command (copy occurs when just before status FIS is written to registers)<br>Note: The LBA/PM port will be as the disk sees it � after Window function translation (if applicable)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BACKUP1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BACKUP1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field20</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field16</td><td align="center">19:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>PM Port</td></tr>
<tr><td align="center">Field8</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">R</td><td>Command byte</td></tr>
<tr><td align="center">Field0</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Features byte</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/BACKUP2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F00B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Second of four registers containing a copy of last command (copy occurs when just before status FIS is written to registers)<br>Note: The LBA/PM port will be as the disk sees it � after Window function translation (if applicable)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BACKUP2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BACKUP2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>LBA(31:0)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/BACKUP3</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F00B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Third of four registers containing a copy of last command (copy occurs when just before status FIS is written to registers)<br>Note: The LBA/PM port will be as the disk sees it � after Window function translation (if applicable)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BACKUP3_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BACKUP3_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Field16</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">R</td><td>Reserved</td></tr>
<tr><td align="center">Field0</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>LBA(47:32)</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>SATA/RAID/BACKUP4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x459F00BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Last of four registers containing a copy of last command (copy occurs when just before status FIS is written to registers)<br>Note: The LBA/PM port will be as the disk sees it � after Window function translation (if applicable)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BACKUP4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BACKUP4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<!--SUBBLOCK,UCODE-->

<!--DESCRIPTION,I think these are the microcode engine registers hence DO NOT appear in the AMBA memory map-->

<!--#include "sata_ucode.reg"-->

<tr><td align="center">Field0</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">R</td><td>Sector Count</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">LEON</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x45B00000...0x45BFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">LEON2 control/status registers</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('LEON_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="LEON_blocks" style="display: none;">
<!--LEON Register Map-->
<br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>LEON/C_COPRO_CACHE_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45B00014</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_COPRO_CACHE_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_COPRO_CACHE_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_COPRO_CACHE_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">dsnoop</td><td align="center">23</td><td align="center">&nbsp;</td><td align="center">W</td><td>Refer to LEON2 documentation</td></tr>
<tr><td align="center">dflush</td><td align="center">22</td><td align="center">&nbsp;</td><td align="center">W</td><td>Refer to LEON2 documentation</td></tr>
<tr><td align="center">iflush</td><td align="center">21</td><td align="center">&nbsp;</td><td align="center">W</td><td>Refer to LEON2 documentation</td></tr>
<tr><td align="center">ib</td><td align="center">16</td><td align="center">&nbsp;</td><td align="center">W</td><td>Refer to LEON2 documentation</td></tr>
<tr><td align="center">dfrz</td><td align="center">5</td><td align="center">&nbsp;</td><td align="center">W</td><td>Refer to LEON2 documentation</td></tr>
<tr><td align="center">ifrz</td><td align="center">4</td><td align="center">&nbsp;</td><td align="center">W</td><td>Refer to LEON2 documentation</td></tr>
<tr><td align="center">dcs</td><td align="center">3:2</td><td align="center">&nbsp;</td><td align="center">W</td><td>Refer to LEON2 documentation</td></tr>
<tr><td align="center">ics</td><td align="center">1:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Refer to LEON2 documentation</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>LEON/C_COPRO_PWRDN_CTRL_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x45B00018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>C_COPRO_PWRDN_CTRL_ADDR</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('C_COPRO_PWRDN_CTRL_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="C_COPRO_PWRDN_CTRL_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">pwd</td><td align="center">31:0</td><td align="center">&nbsp;</td><td align="center">W</td><td>Enter powerdown (wake up by debug support unit).<br>Data value irrelevant.<br>Refer to LEON2 documentation</td></tr>
</tbody></table>
</div>
<!--#include "arm_peri.reg"-->
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">ARM</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x47000000...0x47001FFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">ARM11 peripherals. Accessible by ARM only. See ARM11MPCORE Technical Reference Manual</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('ARM_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="ARM_blocks" style="display: none;"></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">PCIEA_CFG</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x47C00000...0x47CFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">PCIe root complex A: Configuration space registers</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('PCIEA_CFG_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="PCIEA_CFG_blocks" style="display: none;">
<!--Converted from DWC_pcie.xml-->
<br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PCI_CONFIG_HEADER</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47C00100...0x47C0013F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">PCI Express Type 1 Configuration Space header</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/ID</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device and Vendor ID</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ID_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ID_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">VendorID</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Vendor ID</td></tr>
<tr><td align="center">DeviceID</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Device ID</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/STS_CMD_RGSTR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status and Command registers</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('STS_CMD_RGSTR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="STS_CMD_RGSTR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CMD_RGSTR</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Command Register</td></tr>
<tr><td align="center">STS_RGSTR</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Status Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/CLS_REV_ID</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Class code and Revision ID</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CLS_REV_ID_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CLS_REV_ID_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RevID</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Revision ID</td></tr>
<tr><td align="center">CLS_CD</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Class Code</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/BIST_HEAD_LAT_CACH</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0010C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BIST, Header Type, Latency Timer, Cache Line Size</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BIST_HEAD_LAT_CACH_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BIST_HEAD_LAT_CACH_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CACH_LN_SZE</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Cache Line Size</td></tr>
<tr><td align="center">LAT_TIM</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Latency Timer</td></tr>
<tr><td align="center">HEAD_TYP</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Header Type</td></tr>
<tr><td align="center">BIST</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>BIST</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/BAS_ADR_0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Base Address Register 0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BAS_ADR_0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BAS_ADR_0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/BAS_ADR_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Base Address Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BAS_ADR_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BAS_ADR_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/LT_SP_BUS_N</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Latency Timer, Secondary and Primary Bus Number</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LT_SP_BUS_N_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LT_SP_BUS_N_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PRIM_BUS_N</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Primary Bus Number</td></tr>
<tr><td align="center">SEC_BUS_N</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Secondary Bus Number</td></tr>
<tr><td align="center">SUB_BUS_N</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Subordinate Bus Number</td></tr>
<tr><td align="center">SEC_LT</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Secondary Latency Timer</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/SS_IO_LT_BAS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0011C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Secondary Status and I/O Limit and Base</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SS_IO_LT_BAS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SS_IO_LT_BAS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">IO_BAS</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>I/O Base</td></tr>
<tr><td align="center">IO_LT</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>I/O Limit</td></tr>
<tr><td align="center">SEC_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Secondary Status</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/MEM_LT_BAS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Memory Limit and Base</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MEM_LT_BAS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MEM_LT_BAS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MEM_BAS</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Memory Base</td></tr>
<tr><td align="center">MEM_LT</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Memory Limit</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/PF_MEM_LT_BAS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00124</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Prefetchable Memory Limit and Base</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PF_MEM_LT_BAS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PF_MEM_LT_BAS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PF_MEM_BAS</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Prefetchable Memory Base</td></tr>
<tr><td align="center">PF_MEM_LT</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Prefetchable Memory Limit</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/PF_BAS_U32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00128</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Prefetchable Base Upper 32 Bits</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PF_BAS_U32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PF_BAS_U32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/PF_LT_U32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0012C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Prefetchable Limit Upper 32 Bits</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PF_LT_U32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PF_LT_U32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/IO_LT_BAS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00130</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>I/O Limit Base Upper 32 Bits</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('IO_LT_BAS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="IO_LT_BAS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">IO_BAS_32</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>I/O Base Upper 32Bits</td></tr>
<tr><td align="center">IO_LT_32</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>I/O Limit Upper 32Bits</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/CAPPTR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00134</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CapPtr</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CAPPTR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CAPPTR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Captr</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>CapPtr</td></tr>
<tr><td align="center">RESERVE1</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/EXP_ROM_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00138</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Expansion ROM Base Address</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('EXP_ROM_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="EXP_ROM_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCI_CONFIG_HEADER/BRDG_INT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0013C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Bridge Control, Int Pin and line</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BRDG_INT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BRDG_INT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INT_LIN</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Interrupt Line</td></tr>
<tr><td align="center">INT_PIN</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Interrupt Pin</td></tr>
<tr><td align="center">BRDG_CTRL</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Bridge Control</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWR_MAG_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47C00040...0x47C0007F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Power Management Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PWR_MAG_STRUC/CFG_PWR_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Power, ID</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CFG_PWR_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CFG_PWR_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CAP_ID</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Capability ID</td></tr>
<tr><td align="center">PM_NX_PTR</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Next Capability Pointer</td></tr>
<tr><td align="center">PMC</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Power Management Capablities PMC</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PWR_MAG_STRUC/PWR_CSR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PM Control Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWR_CSR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWR_CSR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PMCSR</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PM Control Status Register</td></tr>
<tr><td align="center">PM_BSE</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PMCSR_BSE Bride Extention</td></tr>
<tr><td align="center">Data1</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Data</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">MSI_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47C00050...0x47C0008F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">MSI Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/MSI_STRUC/MSG_CTR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI cap structure</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSG_CTR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSG_CTR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CAP_ID</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Capability ID</td></tr>
<tr><td align="center">MSI_NX_PTR</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Next Capability Pointer</td></tr>
<tr><td align="center">MSG_CTR_RGS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Message Control Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/MSI_STRUC/MSI_L32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI Lower 32-bit address register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSI_L32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSI_L32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/MSI_STRUC/MSI_U32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI Upper 32-bit address register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSI_U32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSI_U32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/MSI_STRUC/MSI_DATA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI Data</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSI_DATA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSI_DATA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MSI_DATA_F</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MSI Data</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PCIE_CAP_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47C00050...0x47C0008F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">PCI Express Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCIE_CAP_STRUC/PCIE_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE cap structure</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIE_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIE_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CAP_ID</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Capability ID</td></tr>
<tr><td align="center">PCIE_NX_PTR</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Next Capability Pointer</td></tr>
<tr><td align="center">PCIE_CAP_R</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCIE_CAP_STRUC/DEV_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE Device cap</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DEV_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DEV_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCIE_CAP_STRUC/DEV_STS_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE cap Device status and control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DEV_STS_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DEV_STS_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">DEV_CTRL</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Device Control</td></tr>
<tr><td align="center">DEV_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Device Status</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCIE_CAP_STRUC/LNK_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE Link cap</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LNK_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LNK_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCIE_CAP_STRUC/LNK_STS_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE cap Link status and control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LNK_STS_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LNK_STS_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">LNK_CTRL</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Link Control</td></tr>
<tr><td align="center">LNK_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Link Status</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCIE_CAP_STRUC/SLT_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE Slot cap</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SLT_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SLT_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCIE_CAP_STRUC/SLT_STS_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00068</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE cap Slot status and control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SLT_STS_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SLT_STS_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">SLT_CTRL</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Slot Control</td></tr>
<tr><td align="center">SLT_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Slot Status</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCIE_CAP_STRUC/RC_CAP_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0006C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Root Capability and Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RC_CAP_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RC_CAP_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RC_CTRL</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Root Control</td></tr>
<tr><td align="center">RC_CAP</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Root Capability</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PCIE_CAP_STRUC/RC_STS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00070</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Root Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RC_STS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RC_STS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">MSIX_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47C000B0...0x47C000EF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">MSI-X Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/MSIX_STRUC/MSIX_CTR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C000B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI-X cap structure</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSIX_CTR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSIX_CTR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CAP_ID</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Capability ID</td></tr>
<tr><td align="center">MSIX_NX_PTR</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Next Capability Pointer</td></tr>
<tr><td align="center">MSIX_CTR_RGS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MSI-X Control Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/MSIX_STRUC/MSIX_TBL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C000B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI-X Table Offset</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSIX_TBL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSIX_TBL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/MSIX_STRUC/MSIX_PBA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C000B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI-X PBA Offset</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSIX_PBA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSIX_PBA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">VPD_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47C000D0...0x47C0010F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">VPD Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VPD_STRUC/VPD_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C000D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VPD Control and Capability Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VPD_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VPD_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VPD_STRUC/VPD_DATA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C000D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VPD Data Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VPD_DATA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VPD_DATA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">ADERR_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47C00100...0x47C0013F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Advanced Error reporting Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/PCIE_EN_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE Express enhanced Cap Header</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIE_EN_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIE_EN_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/UN_ERR_ST_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Uncorrectable Error Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('UN_ERR_ST_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="UN_ERR_ST_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/UN_ERR_MS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Uncorrectable Error Mask Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('UN_ERR_MS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="UN_ERR_MS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/UN_ERR_SV_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0010C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Uncorrectable Error Severity Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('UN_ERR_SV_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="UN_ERR_SV_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/CO_ERR_ST_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Correctable Error Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CO_ERR_ST_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CO_ERR_ST_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/CO_ERR_MS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Correctable Error Mask Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CO_ERR_MS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CO_ERR_MS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/ADERR_CAP_CR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Advanced Error Capabilities and Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ADERR_CAP_CR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ADERR_CAP_CR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/HD_L_R0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0011C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Header Log Registers 0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HD_L_R0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HD_L_R0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/HD_L_R4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Header Log Registers 4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HD_L_R4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HD_L_R4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/HD_L_R8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00124</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Header Log Registers 8</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HD_L_R8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HD_L_R8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/HD_L_R12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00128</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Header Log Registers 12</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HD_L_R12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HD_L_R12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/RT_ERR_CMD_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0012C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Root Error Command Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RT_ERR_CMD_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RT_ERR_CMD_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/RT_ERR_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00130</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Root Error Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RT_ERR_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RT_ERR_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/ADERR_STRUC/ERR_SRC_ID_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00134</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Error Source Identification Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ERR_SRC_ID_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ERR_SRC_ID_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">VC_CAP_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47C00140...0x47C0017F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Virtual Channel Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VC_CAP_STRUC/PCIE_EN_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE Express enhanced Cap Header</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIE_EN_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIE_EN_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VC_CAP_STRUC/PVC_CAP_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00144</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Port VC Capability Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PVC_CAP_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PVC_CAP_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VC_CAP_STRUC/P_CAP_R2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00148</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Port Capability Register 2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('P_CAP_R2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="P_CAP_R2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VC_CAP_STRUC/PVC_STS_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0014C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Port VC status and control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PVC_STS_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PVC_STS_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PVC_CTRL</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Port VC Control Register</td></tr>
<tr><td align="center">PVC_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Port VC Status Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VC_CAP_STRUC/VC_CAP_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00150</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource Capability Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC_CAP_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC_CAP_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VC_CAP_STRUC/VC_CTL_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00154</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC_CTL_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC_CTL_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VC_CAP_STRUC/VC_STS_RSV</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00158</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource status and RsvdP</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC_STS_RSV_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC_STS_RSV_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RSVDP</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RSVDP</td></tr>
<tr><td align="center">VC_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>VC Resource Status Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VC_CAP_STRUC/VCR_CAP_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0015C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource Capability Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VCR_CAP_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VCR_CAP_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VC_CAP_STRUC/VCR_CTRL_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00160</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource Control Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VCR_CTRL_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VCR_CTRL_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/VC_CAP_STRUC/VCR_STS_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00164</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource Status Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VCR_STS_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VCR_STS_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RSVDP1</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RSVDP 1</td></tr>
<tr><td align="center">VC_STS1</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>VC Resource Status Register 1</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DEV_SR_CAP_R</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47C00300...0x47C0033F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Device Serial Number Capability Register</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/DEV_SR_CAP_R/DEV_EN_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00300</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device Serial Number enhanced Cap Header</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DEV_EN_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DEV_EN_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/DEV_SR_CAP_R/SN_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00304</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Serial Number Register 1st DWORD</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SN_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SN_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/DEV_SR_CAP_R/SN_R2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00308</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Serial Number Register 2nd DWORD</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SN_R2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SN_R2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PRT_LOG_R</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47C00700...0x47C014BF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Port Logic Register Map</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/LAT_REL_TIM</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00700</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Ack Latency and Replay Timer Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LAT_REL_TIM_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LAT_REL_TIM_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/OT_MSG_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00704</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Other Message Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('OT_MSG_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="OT_MSG_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/PT_LNK_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00708</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Port Force Link Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PT_LNK_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PT_LNK_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/ACk_FREQ_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0070C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Ack Frequency Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ACk_FREQ_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ACk_FREQ_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/PT_LNK_CTRL_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00710</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Port Link Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PT_LNK_CTRL_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PT_LNK_CTRL_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/LN_SKW_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00714</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lane Skew Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LN_SKW_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LN_SKW_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/SYMB_N_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00718</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Symbol Number Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SYMB_N_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SYMB_N_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/SYMB_T_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0071C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Symbol Timer and Filter Mask Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SYMB_T_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SYMB_T_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/FL_MSK_R2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00720</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Filter Mask Register 2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FL_MSK_R2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FL_MSK_R2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/DB_R0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00728</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Debug Register 0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DB_R0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DB_R0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/DB_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0072C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Debug Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DB_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DB_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/TR_P_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00730</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit Posted FC Credit Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TR_P_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TR_P_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/TR_NP_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00734</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit Non-Posted FC Credit Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TR_NP_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TR_NP_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/TR_C_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00738</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit Completion FC Credit Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TR_C_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TR_C_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/Q_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0073C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Queue Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Q_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Q_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC_TR_A_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00740</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Transmit Arbitration Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC_TR_A_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC_TR_A_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC_TR_A_R2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00744</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Transmit Arbitration Register 2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC_TR_A_R2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC_TR_A_R2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC0_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00748</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC0_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0074C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC0_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00750</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC1_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00754</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC1_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00758</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC1_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0075C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC2_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00760</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC2_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00764</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC2_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00768</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC3_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0076C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC3_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00770</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC3_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00774</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC4_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00778</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC4_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0077C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC4_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00780</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC5_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00784</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC5_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00788</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC5_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0078C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC6_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00790</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC6_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00794</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC6_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00798</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC7_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0079C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC7_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC7_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC0_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC0_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC0_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC1_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC1_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC1_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC2_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC2_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC2_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC3_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC3_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC3_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC4_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC4_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC4_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC5_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC5_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC5_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC6_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC6_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC6_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC7_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C007FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC7_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00800</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/VC7_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00804</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/GEN2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C0080C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Gen2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GEN2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GEN2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/PHY_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00810</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PHY Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PHY_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PHY_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_CFG/PRT_LOG_R/PHY_CTRL_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47C00814</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PHY Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PHY_CTRL_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PHY_CTRL_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">PCIEA_ELBI</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x47D00000...0x47DFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">PCIe root complex A: ELBI control/status registers</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('PCIEA_ELBI_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="PCIEA_ELBI_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_ELBI/PIM0_MEM_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47D00000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PIM0_MEM_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PIM0_MEM_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PIM0_MEM_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">bar0_mem0_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inbound address translation memory BAR0 region 0 limit (size of region 0 within BAR0).</td></tr>
<tr><td align="center">Field0</td><td align="center">19:0</td><td align="center">&nbsp;</td><td align="center">R0</td><td>Returns all ones.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_ELBI/PIM1_MEM_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47D00008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PIM1_MEM_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PIM1_MEM_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PIM1_MEM_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">bar0_mem1_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inbound
address translation memory BAR0 region 1 AMBA end address(size of
region 0 + region 1 within BAR0). Accesses above this limit within BAR0
will cause a PCIe error.</td></tr>
<tr><td align="center">Field0</td><td align="center">19:0</td><td align="center">&nbsp;</td><td align="center">R0</td><td>Returns all ones.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_ELBI/PIM0_MEM_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47D00010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PIM0_MEM_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PIM0_MEM_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PIM0_MEM_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">bar0_mem0_AMBA_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inbound address translation memory BAR0 region 0 AMBA start address.</td></tr>
<tr><td align="center">Field0</td><td align="center">19:0</td><td align="center">&nbsp;</td><td align="center">R0</td><td>Returns all zeroes.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_ELBI/PIM1_MEM_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47D00018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PIM1_MEM_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PIM1_MEM_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PIM1_MEM_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">bar0_mem1_AMBA_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inbound address translation memory BAR0 region 1 AMBA start address. In multiples of 1MB.</td></tr>
<tr><td align="center">Field0</td><td align="center">19:0</td><td align="center">&nbsp;</td><td align="center">R0</td><td>Returns all zeroes.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_ELBI/PIM_IO_ADDR_OFFSET</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47D00020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PIM_IO_ADDR_OFFSET</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PIM_IO_ADDR_OFFSET_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PIM_IO_ADDR_OFFSET_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">bar1_io_AMBA_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inbound address translation I/O BAR1 AMBA start address.</td></tr>
<tr><td align="center">Field0</td><td align="center">19:0</td><td align="center">&nbsp;</td><td align="center">R0</td><td>Returns all zeroes.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEA_ELBI/IB_ADDR_XLATE_ENABLE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47D000FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>IB_ADDR_XLATE_ENABLE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('IB_ADDR_XLATE_ENABLE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="IB_ADDR_XLATE_ENABLE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>&nbsp;</td></tr>
<tr><td align="center">enable_in_addr_trans</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable inbound address translation</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">PCIEB_CFG</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x47E00000...0x47EFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">PCIe root complex B: Configuration space registers</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('PCIEB_CFG_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="PCIEB_CFG_blocks" style="display: none;">
<!--Converted from DWC_pcie.xml-->
<br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PCI_CONFIG_HEADER</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47E00100...0x47E0013F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">PCI Express Type 1 Configuration Space header</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/ID</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device and Vendor ID</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ID_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ID_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">VendorID</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Vendor ID</td></tr>
<tr><td align="center">DeviceID</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Device ID</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/STS_CMD_RGSTR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Status and Command registers</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('STS_CMD_RGSTR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="STS_CMD_RGSTR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CMD_RGSTR</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Command Register</td></tr>
<tr><td align="center">STS_RGSTR</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Status Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/CLS_REV_ID</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Class code and Revision ID</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CLS_REV_ID_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CLS_REV_ID_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RevID</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Revision ID</td></tr>
<tr><td align="center">CLS_CD</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Class Code</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/BIST_HEAD_LAT_CACH</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0010C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>BIST, Header Type, Latency Timer, Cache Line Size</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BIST_HEAD_LAT_CACH_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BIST_HEAD_LAT_CACH_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CACH_LN_SZE</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Cache Line Size</td></tr>
<tr><td align="center">LAT_TIM</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Latency Timer</td></tr>
<tr><td align="center">HEAD_TYP</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Header Type</td></tr>
<tr><td align="center">BIST</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>BIST</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/BAS_ADR_0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Base Address Register 0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BAS_ADR_0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BAS_ADR_0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/BAS_ADR_1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Base Address Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BAS_ADR_1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BAS_ADR_1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/LT_SP_BUS_N</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Latency Timer, Secondary and Primary Bus Number</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LT_SP_BUS_N_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LT_SP_BUS_N_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PRIM_BUS_N</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Primary Bus Number</td></tr>
<tr><td align="center">SEC_BUS_N</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Secondary Bus Number</td></tr>
<tr><td align="center">SUB_BUS_N</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Subordinate Bus Number</td></tr>
<tr><td align="center">SEC_LT</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Secondary Latency Timer</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/SS_IO_LT_BAS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0011C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Secondary Status and I/O Limit and Base</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SS_IO_LT_BAS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SS_IO_LT_BAS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">IO_BAS</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>I/O Base</td></tr>
<tr><td align="center">IO_LT</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>I/O Limit</td></tr>
<tr><td align="center">SEC_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Secondary Status</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/MEM_LT_BAS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Memory Limit and Base</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MEM_LT_BAS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MEM_LT_BAS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MEM_BAS</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Memory Base</td></tr>
<tr><td align="center">MEM_LT</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Memory Limit</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/PF_MEM_LT_BAS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00124</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Prefetchable Memory Limit and Base</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PF_MEM_LT_BAS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PF_MEM_LT_BAS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PF_MEM_BAS</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Prefetchable Memory Base</td></tr>
<tr><td align="center">PF_MEM_LT</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Prefetchable Memory Limit</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/PF_BAS_U32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00128</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Prefetchable Base Upper 32 Bits</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PF_BAS_U32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PF_BAS_U32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/PF_LT_U32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0012C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Prefetchable Limit Upper 32 Bits</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PF_LT_U32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PF_LT_U32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/IO_LT_BAS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00130</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>I/O Limit Base Upper 32 Bits</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('IO_LT_BAS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="IO_LT_BAS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">IO_BAS_32</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>I/O Base Upper 32Bits</td></tr>
<tr><td align="center">IO_LT_32</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>I/O Limit Upper 32Bits</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/CAPPTR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00134</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>CapPtr</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CAPPTR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CAPPTR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Captr</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>CapPtr</td></tr>
<tr><td align="center">RESERVE1</td><td align="center">31:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Reserved</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/EXP_ROM_ADDR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00138</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Expansion ROM Base Address</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('EXP_ROM_ADDR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="EXP_ROM_ADDR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCI_CONFIG_HEADER/BRDG_INT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0013C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Bridge Control, Int Pin and line</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('BRDG_INT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="BRDG_INT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">INT_LIN</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Interrupt Line</td></tr>
<tr><td align="center">INT_PIN</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Interrupt Pin</td></tr>
<tr><td align="center">BRDG_CTRL</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Bridge Control</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PWR_MAG_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47E00040...0x47E0007F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Power Management Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PWR_MAG_STRUC/CFG_PWR_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00040</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Power, ID</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CFG_PWR_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CFG_PWR_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CAP_ID</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Capability ID</td></tr>
<tr><td align="center">PM_NX_PTR</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Next Capability Pointer</td></tr>
<tr><td align="center">PMC</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Power Management Capablities PMC</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PWR_MAG_STRUC/PWR_CSR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00044</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PM Control Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PWR_CSR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PWR_CSR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PMCSR</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PM Control Status Register</td></tr>
<tr><td align="center">PM_BSE</td><td align="center">23:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PMCSR_BSE Bride Extention</td></tr>
<tr><td align="center">Data1</td><td align="center">31:24</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Data</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">MSI_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47E00050...0x47E0008F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">MSI Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/MSI_STRUC/MSG_CTR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI cap structure</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSG_CTR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSG_CTR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CAP_ID</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Capability ID</td></tr>
<tr><td align="center">MSI_NX_PTR</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Next Capability Pointer</td></tr>
<tr><td align="center">MSG_CTR_RGS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Message Control Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/MSI_STRUC/MSI_L32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI Lower 32-bit address register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSI_L32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSI_L32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/MSI_STRUC/MSI_U32</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI Upper 32-bit address register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSI_U32_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSI_U32_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/MSI_STRUC/MSI_DATA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI Data</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSI_DATA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSI_DATA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">MSI_DATA_F</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MSI Data</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PCIE_CAP_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47E00050...0x47E0008F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">PCI Express Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCIE_CAP_STRUC/PCIE_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00050</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE cap structure</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIE_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIE_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CAP_ID</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Capability ID</td></tr>
<tr><td align="center">PCIE_NX_PTR</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Next Capability Pointer</td></tr>
<tr><td align="center">PCIE_CAP_R</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCIE_CAP_STRUC/DEV_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00054</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE Device cap</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DEV_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DEV_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCIE_CAP_STRUC/DEV_STS_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00058</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE cap Device status and control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DEV_STS_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DEV_STS_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">DEV_CTRL</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Device Control</td></tr>
<tr><td align="center">DEV_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Device Status</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCIE_CAP_STRUC/LNK_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0005C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE Link cap</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LNK_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LNK_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCIE_CAP_STRUC/LNK_STS_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00060</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE cap Link status and control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LNK_STS_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LNK_STS_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">LNK_CTRL</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Link Control</td></tr>
<tr><td align="center">LNK_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Link Status</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCIE_CAP_STRUC/SLT_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00064</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE Slot cap</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SLT_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SLT_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCIE_CAP_STRUC/SLT_STS_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00068</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE cap Slot status and control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SLT_STS_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SLT_STS_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">SLT_CTRL</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Slot Control</td></tr>
<tr><td align="center">SLT_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>PCIE Capability Slot Status</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCIE_CAP_STRUC/RC_CAP_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0006C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Root Capability and Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RC_CAP_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RC_CAP_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RC_CTRL</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Root Control</td></tr>
<tr><td align="center">RC_CAP</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Root Capability</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PCIE_CAP_STRUC/RC_STS</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00070</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Root Status</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RC_STS_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RC_STS_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">MSIX_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47E000B0...0x47E000EF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">MSI-X Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/MSIX_STRUC/MSIX_CTR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E000B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI-X cap structure</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSIX_CTR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSIX_CTR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">CAP_ID</td><td align="center">7:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Capability ID</td></tr>
<tr><td align="center">MSIX_NX_PTR</td><td align="center">15:8</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Next Capability Pointer</td></tr>
<tr><td align="center">MSIX_CTR_RGS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>MSI-X Control Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/MSIX_STRUC/MSIX_TBL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E000B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI-X Table Offset</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSIX_TBL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSIX_TBL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/MSIX_STRUC/MSIX_PBA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E000B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>MSI-X PBA Offset</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('MSIX_PBA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="MSIX_PBA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">VPD_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47E000D0...0x47E0010F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">VPD Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VPD_STRUC/VPD_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E000D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VPD Control and Capability Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VPD_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VPD_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VPD_STRUC/VPD_DATA</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E000D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VPD Data Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VPD_DATA_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VPD_DATA_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">ADERR_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47E00100...0x47E0013F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Advanced Error reporting Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/PCIE_EN_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00100</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE Express enhanced Cap Header</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIE_EN_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIE_EN_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/UN_ERR_ST_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00104</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Uncorrectable Error Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('UN_ERR_ST_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="UN_ERR_ST_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/UN_ERR_MS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00108</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Uncorrectable Error Mask Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('UN_ERR_MS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="UN_ERR_MS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/UN_ERR_SV_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0010C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Uncorrectable Error Severity Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('UN_ERR_SV_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="UN_ERR_SV_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/CO_ERR_ST_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00110</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Correctable Error Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CO_ERR_ST_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CO_ERR_ST_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/CO_ERR_MS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00114</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Correctable Error Mask Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('CO_ERR_MS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="CO_ERR_MS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/ADERR_CAP_CR</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00118</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Advanced Error Capabilities and Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ADERR_CAP_CR_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ADERR_CAP_CR_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/HD_L_R0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0011C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Header Log Registers 0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HD_L_R0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HD_L_R0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/HD_L_R4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00120</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Header Log Registers 4</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HD_L_R4_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HD_L_R4_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/HD_L_R8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00124</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Header Log Registers 8</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HD_L_R8_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HD_L_R8_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/HD_L_R12</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00128</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Header Log Registers 12</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('HD_L_R12_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="HD_L_R12_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/RT_ERR_CMD_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0012C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Root Error Command Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RT_ERR_CMD_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RT_ERR_CMD_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/RT_ERR_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00130</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Root Error Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('RT_ERR_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="RT_ERR_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/ADERR_STRUC/ERR_SRC_ID_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00134</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Error Source Identification Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ERR_SRC_ID_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ERR_SRC_ID_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">VC_CAP_STRUC</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47E00140...0x47E0017F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Virtual Channel Capability Structure</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VC_CAP_STRUC/PCIE_EN_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00140</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PCIE Express enhanced Cap Header</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PCIE_EN_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PCIE_EN_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VC_CAP_STRUC/PVC_CAP_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00144</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Port VC Capability Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PVC_CAP_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PVC_CAP_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VC_CAP_STRUC/P_CAP_R2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00148</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Port Capability Register 2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('P_CAP_R2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="P_CAP_R2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VC_CAP_STRUC/PVC_STS_CTRL</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0014C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Port VC status and control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PVC_STS_CTRL_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PVC_STS_CTRL_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">PVC_CTRL</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Port VC Control Register</td></tr>
<tr><td align="center">PVC_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>Port VC Status Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VC_CAP_STRUC/VC_CAP_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00150</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource Capability Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC_CAP_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC_CAP_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VC_CAP_STRUC/VC_CTL_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00154</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC_CTL_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC_CTL_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VC_CAP_STRUC/VC_STS_RSV</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00158</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource status and RsvdP</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC_STS_RSV_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC_STS_RSV_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RSVDP</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RSVDP</td></tr>
<tr><td align="center">VC_STS</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>VC Resource Status Register</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VC_CAP_STRUC/VCR_CAP_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0015C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource Capability Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VCR_CAP_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VCR_CAP_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VC_CAP_STRUC/VCR_CTRL_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00160</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource Control Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VCR_CTRL_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VCR_CTRL_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/VC_CAP_STRUC/VCR_STS_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00164</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Resource Status Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VCR_STS_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VCR_STS_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">RSVDP1</td><td align="center">15:0</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>RSVDP 1</td></tr>
<tr><td align="center">VC_STS1</td><td align="center">31:16</td><td align="center">&nbsp;</td><td align="center">read-only</td><td>VC Resource Status Register 1</td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">DEV_SR_CAP_R</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47E00300...0x47E0033F</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Device Serial Number Capability Register</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/DEV_SR_CAP_R/DEV_EN_CAP</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00300</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Device Serial Number enhanced Cap Header</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DEV_EN_CAP_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DEV_EN_CAP_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/DEV_SR_CAP_R/SN_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00304</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Serial Number Register 1st DWORD</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SN_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SN_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/DEV_SR_CAP_R/SN_R2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00308</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Serial Number Register 2nd DWORD</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SN_R2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SN_R2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="subblock" width="250">SubBlock</td><td class="subblock">PRT_LOG_R</td></tr><tr class="block"><td class="subblock">Address Range</td><td class="subblock">0x47E00700...0x47E014BF</td></tr><tr class="block"><td class="subblock">Description</td><td class="subblock">Port Logic Register Map</td></tr></tbody></table><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/LAT_REL_TIM</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00700</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Ack Latency and Replay Timer Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LAT_REL_TIM_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LAT_REL_TIM_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/OT_MSG_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00704</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Other Message Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('OT_MSG_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="OT_MSG_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/PT_LNK_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00708</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Port Force Link Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PT_LNK_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PT_LNK_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/ACk_FREQ_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0070C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Ack Frequency Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('ACk_FREQ_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="ACk_FREQ_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/PT_LNK_CTRL_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00710</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Port Link Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PT_LNK_CTRL_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PT_LNK_CTRL_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/LN_SKW_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00714</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Lane Skew Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('LN_SKW_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="LN_SKW_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/SYMB_N_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00718</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Symbol Number Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SYMB_N_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SYMB_N_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/SYMB_T_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0071C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Symbol Timer and Filter Mask Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('SYMB_T_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="SYMB_T_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/FL_MSK_R2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00720</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Filter Mask Register 2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('FL_MSK_R2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="FL_MSK_R2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/DB_R0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00728</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Debug Register 0</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DB_R0_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DB_R0_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/DB_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0072C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Debug Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('DB_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="DB_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/TR_P_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00730</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit Posted FC Credit Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TR_P_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TR_P_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/TR_NP_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00734</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit Non-Posted FC Credit Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TR_NP_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TR_NP_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/TR_C_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00738</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Transmit Completion FC Credit Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('TR_C_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="TR_C_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/Q_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0073C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Queue Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('Q_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="Q_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC_TR_A_R1</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00740</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Transmit Arbitration Register 1</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC_TR_A_R1_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC_TR_A_R1_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC_TR_A_R2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00744</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC Transmit Arbitration Register 2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC_TR_A_R2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC_TR_A_R2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC0_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00748</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC0_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0074C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC0_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00750</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC1_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00754</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC1_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00758</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC1_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0075C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC2_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00760</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC2_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00764</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC2_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00768</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC3_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0076C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC3_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00770</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC3_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00774</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC4_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00778</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC4_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0077C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC4_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00780</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC5_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00784</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC5_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00788</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC5_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0078C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC6_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00790</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC6_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00794</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC6_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00798</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC7_PR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0079C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_PR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_PR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC7_NPR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007A0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Non-Posted Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_NPR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_NPR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC7_CR_Q_C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007A4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Completion Receive Queue Control</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_CR_Q_C_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_CR_Q_C_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC0_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007A8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC0_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007AC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC0_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007B0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC0 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC0_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC0_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC1_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007B4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC1_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007B8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC1_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007BC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC1 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC1_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC1_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC2_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007C0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC2_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007C4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC2_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007C8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC2 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC2_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC2_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC3_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007CC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC3_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007D0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC3_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007D4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC3 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC3_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC3_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC4_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007D8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC4_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007DC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC4_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007E0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC4 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC4_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC4_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC5_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007E4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC5_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007E8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC5_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007EC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC5 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC5_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC5_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC6_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007F0</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC6_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007F4</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC6_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007F8</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC6 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC6_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC6_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC7_PB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E007FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_PB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_PB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC7_NPB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00800</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Non-Posted Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_NPB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_NPB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/VC7_CB_D</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00804</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>VC7 Completion Buffer Depth</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('VC7_CB_D_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="VC7_CB_D_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/GEN2</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E0080C</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>Gen2</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('GEN2_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="GEN2_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/PHY_STS_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00810</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PHY Status Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PHY_STS_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PHY_STS_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_CFG/PRT_LOG_R/PHY_CTRL_R</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47E00814</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PHY Control Register</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PHY_CTRL_R_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PHY_CTRL_R_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">PCIEB_ELBI</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x47F00000...0x47FFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">PCIe root complex B: ELBI control/status registers</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('PCIEB_ELBI_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="PCIEB_ELBI_blocks" style="display: none;"><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_ELBI/PIM0_MEM_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47F00000</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PIM0_MEM_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PIM0_MEM_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PIM0_MEM_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">bar0_mem0_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inbound address translation memory BAR0 region 0 limit (size of region 0 within BAR0).</td></tr>
<tr><td align="center">Field0</td><td align="center">19:0</td><td align="center">&nbsp;</td><td align="center">R0</td><td>Returns all ones.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_ELBI/PIM1_MEM_ADDR_LIMIT</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47F00008</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PIM1_MEM_ADDR_LIMIT</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PIM1_MEM_ADDR_LIMIT_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PIM1_MEM_ADDR_LIMIT_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">bar0_mem1_limit</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inbound
address translation memory BAR0 region 1 AMBA end address(size of
region 0 + region 1 within BAR0). Accesses above this limit within BAR0
will cause a PCIe error.</td></tr>
<tr><td align="center">Field0</td><td align="center">19:0</td><td align="center">&nbsp;</td><td align="center">R0</td><td>Returns all ones.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_ELBI/PIM0_MEM_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47F00010</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PIM0_MEM_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PIM0_MEM_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PIM0_MEM_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">bar0_mem0_AMBA_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inbound address translation memory BAR0 region 0 AMBA start address.</td></tr>
<tr><td align="center">Field0</td><td align="center">19:0</td><td align="center">&nbsp;</td><td align="center">R0</td><td>Returns all zeroes.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_ELBI/PIM1_MEM_ADDR_START</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47F00018</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PIM1_MEM_ADDR_START</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PIM1_MEM_ADDR_START_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PIM1_MEM_ADDR_START_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">bar0_mem1_AMBA_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inbound address translation memory BAR0 region 1 AMBA start address. In multiples of 1MB.</td></tr>
<tr><td align="center">Field0</td><td align="center">19:0</td><td align="center">&nbsp;</td><td align="center">R0</td><td>Returns all zeroes.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_ELBI/PIM_IO_ADDR_OFFSET</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47F00020</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>PIM_IO_ADDR_OFFSET</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('PIM_IO_ADDR_OFFSET_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="PIM_IO_ADDR_OFFSET_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">bar1_io_AMBA_start</td><td align="center">31:20</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Inbound address translation I/O BAR1 AMBA start address.</td></tr>
<tr><td align="center">Field0</td><td align="center">19:0</td><td align="center">&nbsp;</td><td align="center">R0</td><td>Returns all zeroes.</td></tr>
</tbody></table>
</div><br><br>


<table width="1000" align="center" border="1">
<tbody><tr valign="top"><td width="300" bgcolor="#808080"><b>Register Name</b></td><td>PCIEB_ELBI/IB_ADDR_XLATE_ENABLE</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Address</b></td><td>0x47F000FC</td></tr>
<tr valign="top"><td bgcolor="#808080"><b>Description</b></td><td>IB_ADDR_XLATE_ENABLE</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Fields')"><a href="javascript:togglebyclass('IB_ADDR_XLATE_ENABLE_fields');">Show/Hide Fields</a></div></td></tr>
</tbody></table>
<div class="IB_ADDR_XLATE_ENABLE_fields" style="display: none;">
<table width="1000" align="center" border="1">
<tbody><tr bgcolor="#808080"><td width="300" align="center"><b>Field Name</b></td><td width="50" align="center"><b>Bit Range</b></td><td align="center"><b>Default</b></td><td align="center"><b>Access</b></td><td><b>Description</b></td></tr>
<tr><td align="center">Reserved</td><td align="center">31:1</td><td align="center">&nbsp;</td><td align="center">R</td><td>&nbsp;</td></tr>
<tr><td align="center">enable_in_addr_trans</td><td align="center">0</td><td align="center">&nbsp;</td><td align="center">R/W</td><td>Enable inbound address translation</td></tr>
</tbody></table>
</div></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">PCIEA_CLIENT</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x48000000...0x4BFFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Endpoint A PCIe client memory space</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('PCIEA_CLIENT_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="PCIEA_CLIENT_blocks" style="display: none;"></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">PCIEB_CLIENT</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x4C000000...0x4FFFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">Endpoint B PCIe client memory space</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('PCIEB_CLIENT_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="PCIEB_CLIENT_blocks" style="display: none;"></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">SCRATCH</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x50000000...0x5000FFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">On-chip scratch memory</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('SCRATCH_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="SCRATCH_blocks" style="display: none;"></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">DDRAM_RANK0</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x60000000...0x6FFFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">DDR2 SDRAM memory selected via DDRAM_CS_N(0)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('DDRAM_RANK0_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="DDRAM_RANK0_blocks" style="display: none;"></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">DDRAM_RANK1</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x70000000...0x7FFFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">DDR2 SDRAM memory selected via DDRAM_CS_N(1)</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('DDRAM_RANK1_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="DDRAM_RANK1_blocks" style="display: none;"></div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">REGION2</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0x80000000...0xBFFFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">For
LEON: As REGION1 (0x40000000...0x7FFFFFFF) except accesses treated as
big-endian uncached. For other masters: Large memory area for PCIEA
endpoints</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('REGION2_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="REGION2_blocks" style="display: none;">
<!--END OF FILE-->
</div><br>
<table width="1000" align="center" border="1"><tbody><tr><td class="block" width="250">Block</td><td class="block">REGION3</td></tr><tr class="block"><td class="block">Address Range</td><td class="block">0xC0000000...0xFFFFFFFF</td></tr><tr class="block"><td class="block">Description</td><td class="block">For
LEON: As REGION1 (0x40000000...0x7FFFFFFF) except accesses treated as
big-endian (cached). For other masters: Large memory area for PCIEB
endpoints</td></tr><tr><td colspan="2" align="center"><div class="divtip" onmouseover="Tip('Show/Hide Block')"><a href="javascript:togglebyclass('REGION3_blocks');">Show/Hide Block</a></div></td></tr></tbody></table>
<div class="REGION3_blocks" style="display: none;"></div></div>


</body></html>